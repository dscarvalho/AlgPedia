{
    "about": "In data networking and telecommunications, an acknowledgement (or acknowledgment) is a signal passed between communicating processes or computers to signify acknowledgement, or receipt of response, as part of a communications protocol. The negative-acknowledgement signal is sent in many communications protocols to reject a previously received message, or to indicate some kind of error. Acknowledgements and negative acknowledgements inform a sender of the receiver's state, so that it can adjust its own state accordingly.", 
    "name": "Nak (Protocol Message)", 
    "classification": "Error Detection And Correction", 
    "full_text": "In data networking and telecommunications, an acknowledgement (or acknowledgment) is a signal passed between communicating processes or computers to signify acknowledgement, or receipt of response, as part of a communications protocol. The negative-acknowledgement signal is sent in many communications protocols to reject a previously received message, or to indicate some kind of error. Acknowledgements and negative acknowledgements inform a sender of the receiver's state, so that it can adjust its own state accordingly.\n\n\nWhen the ASCII code is used to communicate between computer terminals, each terminal can send an enquiry character to request the condition of the other. The receiver of this character can respond with ACK (0000110) to indicate that it is operating normally, or NAK (0010101) to indicate an error condition. Unicode provides visible symbols for these characters, U+2406 (\u2406) and U+2415 (\u2415).\nMany protocols are acknowledgement (ACK)-based, meaning that they positively acknowledge receipt of messages. The internet's Transmission Control Protocol (TCP) is an example of an ACK-based protocol. When computers communicate via TCP, received packets (including connection requests and terminations) are acknowledged by sending back a packet with an acknowledgement bit set. The protocol allows these acknowledgements to be included with data that is sent in the opposite direction.\nOther protocols are NAK-based, meaning that they only respond to messages if there is a problem. Examples include most reliable multicast protocols which send a NAK when the receiver detects missing packets. Still other protocols make use of both NAKs and ACKs. Binary Synchronous Communications (Bisync) and Adaptive Link Rate (for Energy-Efficient Ethernet) is an example.\nThe acknowledgement function is used in the automatic repeat request (ARQ) function. Acknowledgement frames are numbered in coordination with the frames that have been received, and then sent to the transmitter. This allows the transmitter to avoid overflow or underrun of the receiver's buffer, and to become aware of any missed frames.\nIn Bisync, the NAK is used to indicate that a transmission error was detected in the previously received block and that the receiver is ready to accept retransmission of that block. Bisync does not use a single ACK character, but has two control sequences for alternate even/odd block acknowledgement.\nIn point-to-multipoint communication, the NAK is used as the not-ready reply to a poll.[citation needed]\n", 
    "dbpedia_url": "http://dbpedia.org/resource/NAK_(protocol_message)", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/NAK_(protocol_message)\n"
}
{
    "about": "there are several algorithms for locating landmarks in images such as satellite maps, medical images etc.\nnowadays evolutionary algorithms such as particle swarm optimization are so useful to perform this task. evolutionary algorithms generally have two phase, training and test.", 
    "name": "Evolutionary Algorithm For Landmark Detection", 
    "classification": "Evolutionary Algorithms", 
    "full_text": "there are several algorithms for locating landmarks in images such as satellite maps, medical images etc.\nnowadays evolutionary algorithms such as particle swarm optimization are so useful to perform this task. evolutionary algorithms generally have two phase, training and test.\nin the training phase, we try to learn the algorithm to locate landmark correctly. this phase performs in some iterations and finally in the last iteration we hope to obtain a system that can locate the landmark, correctly. in the particle swarm optimization there are some particles that search for the landmark. each particle uses a specific formula in each iteration to optimizes the landmark detecting.\nThe fundamental particle swarm optimization algorithm used in training phase generally as follows:\nRandomly initialise 100 individuals in the search space in the range [-1,1]\nLOOP UNTIL 100 iterations performed OR detection error of gbest is 0%\nFOR each particle p\nDetection errors at x = 0\nFOR each image i in training set\nFOR each pixel coordinate c in i\nEvaluate x of p on visual features at c\nIF evaluation is highest so far for i THEN\nDetected position in i = c\nIF distance between detected position and marked-up position > 2mm THEN\nDetection errors at x = Detection errors at x + 1\nFitness of p at x = 1- ( Detection errors at x /Total no. of images in training set)\nIF new _tness of p at x > previous _tness of p at pbest THEN\npbest _tness of p = new _tness of p at x\npbest position of p = x of p\nIF new _tness of p at x > previous gbest _tness THEN\ngbest _tness = new _tness of p at x\ngbest position of p = x of p\nFOR each particle p\nCalculate v of p\nIF magnitude of v > v max THEN\nMagnitude of v = v max\nMove x of p to next position using v\nIF x of p outside [-1,1] range THEN\nx of p = -1 or 1 as appropriate\nREPEAT\nOutput gbest of last iteration as trained detector d\nciteseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.72.3218", 
    "dbpedia_url": "http://dbpedia.org/resource/Evolutionary_Algorithm_for_Landmark_Detection", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Evolutionary_Algorithm_for_Landmark_Detection\n"
}
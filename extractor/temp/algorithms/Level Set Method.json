{
    "about": "Level set methods (LSM) are a conceptual framework for using level sets as a tool for numerical analysis of surfaces and shapes. The advantage of the level set model is that one can perform numerical computations involving curves and surfaces on a fixed Cartesian grid without having to parameterize these objects (this is called the Eulerian approach).[1] Also, the level set method makes it very easy to follow shapes that change topology, for example when a shape splits in two, develops holes, or the reverse of these operations. All these make the level set method a great tool for modeling time-varying objects, like inflation of an airbag, or a drop of oil floating in water.", 
    "name": "Level Set Method", 
    "classification": "Numerical Analysis", 
    "full_text": "Level set methods (LSM) are a conceptual framework for using level sets as a tool for numerical analysis of surfaces and shapes. The advantage of the level set model is that one can perform numerical computations involving curves and surfaces on a fixed Cartesian grid without having to parameterize these objects (this is called the Eulerian approach).[1] Also, the level set method makes it very easy to follow shapes that change topology, for example when a shape splits in two, develops holes, or the reverse of these operations. All these make the level set method a great tool for modeling time-varying objects, like inflation of an airbag, or a drop of oil floating in water.\nThe figure on the right illustrates several important ideas about the level set method. In the upper-left corner we see a shape; that is, a bounded region with a well-behaved boundary. Below it, the red surface is the graph of a level set function \n\n\n\n\u03c6\n\n\n{\\displaystyle \\varphi }\n\n determining this shape, and the flat blue region represents the xy-plane. The boundary of the shape is then the zero level set of \n\n\n\n\u03c6\n\n\n{\\displaystyle \\varphi }\n\n, while the shape itself is the set of points in the plane for which \n\n\n\n\u03c6\n\n\n{\\displaystyle \\varphi }\n\n is positive (interior of the shape) or zero (at the boundary).\nIn the top row we see the shape changing its topology by splitting in two. It would be quite hard to describe this transformation numerically by parameterizing the boundary of the shape and following its evolution. One would need an algorithm able to detect the moment the shape splits in two, and then construct parameterizations for the two newly obtained curves. On the other hand, if we look at the bottom row, we see that the level set function merely translated downward. This is an example of when it can be much easier to work with a shape through its level set function than with the shape directly, where using the shape directly would need to consider and handle all the possible deformations the shape might undergo.\nThus, in two dimensions, the level set method amounts to representing a closed curve \n\n\n\n\u0393\n\n\n{\\displaystyle \\Gamma }\n\n (such as the shape boundary in our example) using an auxiliary function \n\n\n\n\u03c6\n\n\n{\\displaystyle \\varphi }\n\n, called the level set function. \n\n\n\n\u0393\n\n\n{\\displaystyle \\Gamma }\n\n is represented as the zero level set of \n\n\n\n\u03c6\n\n\n{\\displaystyle \\varphi }\n\n by\nand the level set method manipulates \n\n\n\n\u0393\n\n\n{\\displaystyle \\Gamma }\n\n implicitly, through the function \n\n\n\n\u03c6\n\n\n{\\displaystyle \\varphi }\n\n. This function \n\n\n\n\u03c6\n\n\n{\\displaystyle \\varphi }\n\n is assumed to take positive values inside the region delimited by the curve \n\n\n\n\u0393\n\n\n{\\displaystyle \\Gamma }\n\n and negative values outside.[2][3]\n\n\nIf the curve \n\n\n\n\u0393\n\n\n{\\displaystyle \\Gamma }\n\n moves in the normal direction with a speed \n\n\n\nv\n\n\n{\\displaystyle v}\n\n, then the level set function \n\n\n\n\u03c6\n\n\n{\\displaystyle \\varphi }\n\n satisfies the level set equation\nHere, \n\n\n\n\n|\n\n\u22c5\n\n|\n\n\n\n{\\displaystyle |\\cdot |}\n\n is the Euclidean norm (denoted customarily by single bars in PDEs), and \n\n\n\nt\n\n\n{\\displaystyle t}\n\n is time. This is a partial differential equation, in particular a Hamilton\u2013Jacobi equation, and can be solved numerically, for example by using finite differences on a Cartesian grid.[2][3]\nThe numerical solution of the level set equation, however, requires sophisticated techniques. Simple finite difference methods fail quickly. Upwinding methods, such as the Godunov method, fare better; however the level set method does not guarantee the conservation of the volume and the shape of the level set in an advection field that does conserve the shape and size, for example uniform or rotational velocity field. Instead, the shape of the level set may get severely distorted and the level set may vanish over several time steps. For this reason, high-order finite difference schemes are generally required, such as high-order essentially non-oscillatory (ENO) schemes, and even then, the feasibility of long-time simulations is questionable. Further sophisticated methods to deal with this difficulty have been developed, e.g., combinations of the level set method with tracing marker particles advected by the velocity field.[4]\nConsider a unit circle in \n\n\n\n\n\nR\n\n\n2\n\n\n\n\n{\\displaystyle \\mathbf {R} ^{2}}\n\n, shrinking in on itself at a constant rate, i.e. each point on the boundary of the circle moves along its inwards pointing normal at some fixed speed. The circle will shrink, and eventually collapse down to a point. If an initial distance field is constructed (i.e. a function whose value is the signed euclidean distance to the boundary (positive interior, negative exterior)) on the initial circle, the normalised gradient of this field will be the circle normal.\nIf the field has a constant value subtracted from it in time, the zero level (which was the initial boundary) of the new fields will also be circular, and will similarly collapse to a point. This is due to this being effectively the temporal integration of the Eikonal equation with a fixed front velocity.\nThe level set method was developed in the 1980s by the American mathematicians Stanley Osher and James Sethian. It has become popular in many disciplines, such as image processing, computer graphics, computational geometry, optimization, and computational fluid dynamics, computational biophysics.\nA number of level set data structures have been developed to facilitate the use of the level set method in computer applications.\n- Computational Fluid Dynamics - Trajectory Planning - Optimization - Image Processing - Computational Biophysics", 
    "dbpedia_url": "http://dbpedia.org/resource/Level_set_method", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Level_set_method\n"
}
{
    "about": "This article describes Lyapunov optimization for dynamical systems. It gives an example application to optimal control in queueing networks.", 
    "name": "Lyapunov Optimization", 
    "classification": "Scheduling Algorithms", 
    "full_text": "This article describes Lyapunov optimization for dynamical systems. It gives an example application to optimal control in queueing networks.\n\n\nLyapunov optimization refers to the use of a Lyapunov function to optimally control a dynamical system. Lyapunov functions are used extensively in control theory to ensure different forms of system stability. The state of a system at a particular time is often described by a multi-dimensional vector. A Lyapunov function is a nonnegative scalar measure of this multi-dimensional state. Typically, the function is defined to grow large when the system moves towards undesirable states. System stability is achieved by taking control actions that make the Lyapunov function drift in the negative direction towards zero.\nLyapunov drift is central to the study of optimal control in queueing networks. A typical goal is to stabilize all network queues while optimizing some performance objective, such as minimizing average energy or maximizing average throughput. Minimizing the drift of a quadratic Lyapunov function leads to the backpressure routing algorithm for network stability, also called the max-weight algorithm.[1] [2] Adding a weighted penalty term to the Lyapunov drift and minimizing the sum leads to the drift-plus-penalty algorithm for joint network stability and penalty minimization. [3] [4] [5] The drift-plus-penalty procedure can also be used to compute solutions to convex programs and linear programs.[6]\nConsider a queueing network that evolves in discrete time with normalized time slots t in {0, 1, 2, \u2026}. Suppose there are N queues in the network, and define the vector of queue backlogs at time t by:\n\n\n\n\nQ\n(\nt\n)\n=\n(\n\nQ\n\n1\n\n\n(\nt\n)\n,\n\nQ\n\n2\n\n\n(\nt\n)\n,\n.\n.\n.\n,\n\nQ\n\nN\n\n\n(\nt\n)\n)\n\n\n{\\displaystyle Q(t)=(Q_{1}(t),Q_{2}(t),...,Q_{N}(t))}\n\n\nFor each slot t, define L(t) as the sum of the squares of the current queue backlogs (divided by 2 for convenience later):\n\n\n\n\nL\n(\nt\n)\n=\n\n\n1\n2\n\n\n\n\u2211\n\ni\n=\n1\n\n\nN\n\n\n\nQ\n\ni\n\n\n(\nt\n\n)\n\n2\n\n\n\n\n{\\displaystyle L(t)={\\frac {1}{2}}\\sum _{i=1}^{N}Q_{i}(t)^{2}}\n\n\nThis function is a scalar measure of the total queue backlog in the network. It is called quadratic Lyapunov function on the queue state. Define the Lyapunov drift as the change in this function from one slot to the next:\n\n\n\n\n\u0394\nL\n(\nt\n)\n=\nL\n(\nt\n+\n1\n)\n\u2212\nL\n(\nt\n)\n\n\n{\\displaystyle \\Delta L(t)=L(t+1)-L(t)}\n\n\nSuppose the queue backlogs change over time according to the following equation:\n\n\n\n\n\nQ\n\ni\n\n\n(\nt\n+\n1\n)\n=\nmax\n[\n\nQ\n\ni\n\n\n(\nt\n)\n+\n\na\n\ni\n\n\n(\nt\n)\n\u2212\n\nb\n\ni\n\n\n(\nt\n)\n,\n0\n]\n\n\n{\\displaystyle Q_{i}(t+1)=\\max[Q_{i}(t)+a_{i}(t)-b_{i}(t),0]}\n\n\nwhere \n\n\n\n\na\n\ni\n\n\n(\nt\n)\n\n\n{\\displaystyle a_{i}(t)}\n\n and \n\n\n\n\nb\n\ni\n\n\n(\nt\n)\n\n\n{\\displaystyle b_{i}(t)}\n\n are arrivals and service opportunities, respectively, in queue i on slot t. This equation can be used to compute a bound on the Lyapunov drift for any slot t:\n\n\n\n\n\nQ\n\ni\n\n\n(\nt\n+\n1\n\n)\n\n2\n\n\n=\n(\nmax\n[\n\nQ\n\ni\n\n\n(\nt\n)\n+\n\na\n\ni\n\n\n(\nt\n)\n\u2212\n\nb\n\ni\n\n\n(\nt\n)\n,\n0\n]\n\n)\n\n2\n\n\n\u2264\n(\n\nQ\n\ni\n\n\n(\nt\n)\n+\n\na\n\ni\n\n\n(\nt\n)\n\u2212\n\nb\n\ni\n\n\n(\nt\n)\n\n)\n\n2\n\n\n\n\n{\\displaystyle Q_{i}(t+1)^{2}=(\\max[Q_{i}(t)+a_{i}(t)-b_{i}(t),0])^{2}\\leq (Q_{i}(t)+a_{i}(t)-b_{i}(t))^{2}}\n\n\nRearranging this inequality, summing over all i, and dividing by 2 leads to:\n\n\n\n\n(\nE\nq\n.1\n)\n\n\u00a0\n\n\u0394\nL\n(\nt\n)\n\u2264\nB\n(\nt\n)\n+\n\n\u2211\n\ni\n=\n1\n\n\nN\n\n\n\nQ\n\ni\n\n\n(\nt\n)\n(\n\na\n\ni\n\n\n(\nt\n)\n\u2212\n\nb\n\ni\n\n\n(\nt\n)\n)\n\n\n{\\displaystyle (Eq.1){\\text{ }}\\Delta L(t)\\leq B(t)+\\sum _{i=1}^{N}Q_{i}(t)(a_{i}(t)-b_{i}(t))}\n\n\nwhere B(t) is defined:\n\n\n\n\nB\n(\nt\n)\n=\n\n\n1\n2\n\n\n\n\u2211\n\ni\n=\n1\n\n\nN\n\n\n[\n\na\n\ni\n\n\n(\nt\n\n)\n\n2\n\n\n+\n\nb\n\ni\n\n\n(\nt\n\n)\n\n2\n\n\n\u2212\n2\n\na\n\ni\n\n\n(\nt\n)\n\nb\n\ni\n\n\n(\nt\n)\n]\n\n\n{\\displaystyle B(t)={\\frac {1}{2}}\\sum _{i=1}^{N}[a_{i}(t)^{2}+b_{i}(t)^{2}-2a_{i}(t)b_{i}(t)]}\n\n\nSuppose the second moments of arrivals and service in each queue are bounded, so that there is a finite constant B>0 such that for all t and all possible queue vectors Q(t) the following property holds:\n\n\n\n\nE\n[\nB\n(\nt\n)\n\n|\n\nQ\n(\nt\n)\n]\n\u2264\nB\n\n\n{\\displaystyle E[B(t)|Q(t)]\\leq B}\n\n\nTaking conditional expectations of (Eq. 1) leads to the following bound on the conditional expected Lyapunov drift:\n\n\n\n\n(\nE\nq\n.2\n)\n\n\u00a0\n\nE\n[\n\u0394\nL\n(\nt\n)\n\n|\n\nQ\n(\nt\n)\n]\n\u2264\nB\n+\n\n\u2211\n\ni\n=\n1\n\n\nN\n\n\n\nQ\n\ni\n\n\n(\nt\n)\nE\n[\n\na\n\ni\n\n\n(\nt\n)\n\u2212\n\nb\n\ni\n\n\n(\nt\n)\n\n|\n\nQ\n(\nt\n)\n]\n\n\n{\\displaystyle (Eq.2){\\text{ }}E[\\Delta L(t)|Q(t)]\\leq B+\\sum _{i=1}^{N}Q_{i}(t)E[a_{i}(t)-b_{i}(t)|Q(t)]}\n\n\nIn many cases, the network can be controlled so that the difference between arrivals and service at each queue satisfies the following property for some real number \n\n\n\n\u03f5\n>\n0\n\n\n{\\displaystyle \\epsilon >0}\n\n:\n\n\n\n\nE\n[\n\na\n\ni\n\n\n(\nt\n)\n\u2212\n\nb\n\ni\n\n\n(\nt\n)\n\n|\n\nQ\n(\nt\n)\n]\n\u2264\n\u2212\n\u03f5\n\n\n{\\displaystyle E[a_{i}(t)-b_{i}(t)|Q(t)]\\leq -\\epsilon }\n\n\nIf the above holds for the same epsilon for all queues i, all slots t, and all possible vectors Q(t), then (Eq. 2) reduces to the drift condition used in the following Lyapunov drift theorem. The theorem below can be viewed as a variation on Foster's theorem for Markov chains. However, it does not require a Markov chain structure.\n\n\n\n\n\n\u00a0Theorem (Lyapunov Drift):\n\n\n\n{\\displaystyle {\\text{ Theorem (Lyapunov Drift):}}}\n\n [5] [7]\nSuppose there are constants \n\n\n\nB\n\u2265\n0\n,\n\u03f5\n>\n0\n\n\n{\\displaystyle B\\geq 0,\\epsilon >0}\n\n such that for all t and all possible vectors Q(t) the conditional Lyapunov drift satisfies:\n\n\n\n\nE\n[\n\u0394\nL\n(\nt\n)\n\n|\n\nQ\n(\nt\n)\n]\n\u2264\nB\n\u2212\n\u03f5\n\n\u2211\n\ni\n=\n1\n\n\nN\n\n\n\nQ\n\ni\n\n\n(\nt\n)\n\n\n{\\displaystyle E[\\Delta L(t)|Q(t)]\\leq B-\\epsilon \\sum _{i=1}^{N}Q_{i}(t)}\n\n\nThen for all slots t>0 the time average queue size in the network satisfies:\n\n\n\n\n\n\n1\nt\n\n\n\n\u2211\n\n\u03c4\n=\n0\n\n\nt\n\u2212\n1\n\n\n\n\u2211\n\ni\n=\n1\n\n\nN\n\n\nE\n[\n\nQ\n\ni\n\n\n(\n\u03c4\n)\n]\n\u2264\n\n\nB\n\u03f5\n\n\n+\n\n\n\nE\n[\nL\n(\n0\n)\n]\n\n\n\u03f5\nt\n\n\n\n\n\n{\\displaystyle {\\frac {1}{t}}\\sum _{\\tau =0}^{t-1}\\sum _{i=1}^{N}E[Q_{i}(\\tau )]\\leq {\\frac {B}{\\epsilon }}+{\\frac {E[L(0)]}{\\epsilon t}}}\n\n\n\n\n\n\n\n\u00a0Proof:\n\n\n\n{\\displaystyle {\\text{ Proof:}}}\n\n\nTaking expectations of both sides of the drift inequality and using the law of iterated expectations yields:\n\n\n\n\nE\n[\n\u0394\nL\n(\nt\n)\n]\n\u2264\nB\n\u2212\n\u03f5\n\n\u2211\n\ni\n=\n1\n\n\nN\n\n\nE\n[\n\nQ\n\ni\n\n\n(\nt\n)\n]\n\n\n{\\displaystyle E[\\Delta L(t)]\\leq B-\\epsilon \\sum _{i=1}^{N}E[Q_{i}(t)]}\n\n\nSumming the above expression over \n\n\n\n\u03c4\n\u2208\n{\n0\n,\n1\n,\n\u2026\n,\nt\n\u2212\n1\n}\n\n\n{\\displaystyle \\tau \\in \\{0,1,\\ldots ,t-1\\}}\n\n and using the law of telescoping sums gives:\n\n\n\n\nE\n[\nL\n(\nt\n)\n]\n\u2212\nE\n[\nL\n(\n0\n)\n]\n\u2264\nB\nt\n\u2212\n\u03f5\n\n\u2211\n\n\u03c4\n=\n0\n\n\nt\n\u2212\n1\n\n\n\n\u2211\n\ni\n=\n1\n\n\nN\n\n\nE\n[\n\nQ\n\ni\n\n\n(\n\u03c4\n)\n]\n\n\n{\\displaystyle E[L(t)]-E[L(0)]\\leq Bt-\\epsilon \\sum _{\\tau =0}^{t-1}\\sum _{i=1}^{N}E[Q_{i}(\\tau )]}\n\n\nUsing the fact that L(t) is non-negative and rearranging the terms in the above expression proves the result.\nConsider the same queueing network as in the above section. Now define p(t) as a network penalty incurred on slot t. Suppose the goal is to stabilize the queueing network while minimizing the time average of p(t). For example, to stabilize the network while minimizing time average power, p(t) can be defined as the total power incurred by the network on slot t. [8] To treat problems of maximizing the time average of some desirable reward r(t), the penalty can be defined p(t) = -r(t). This is useful for maximizing network throughput utility subject to stability. [3]\nTo stabilize the network while minimizing the time average of the penalty p(t), network algorithms can be designed to make control actions that greedily minimize a bound on the following drift-plus-penalty expression on each slot t:[5]\n\n\n\n\n\u0394\nL\n(\nt\n)\n+\nV\np\n(\nt\n)\n\n\n{\\displaystyle \\Delta L(t)+Vp(t)}\n\n\nwhere V is a non-negative weight that is chosen as desired to affect a performance tradeoff. A key feature of this approach is that it typically does not require knowledge of the probabilities of the random network events (such as random job arrivals or channel realizations). Choosing V = 0 reduces to minimizing a bound on the drift every slot and, for routing in multi-hop queueing networks, reduces to the backpressure routing algorithm developed by Tassiulas and Ephremides.[1][2] Using V>0 and defining p(t) as the network power use on slot t leads to the drift-plus-penalty algorithm for minimizing average power subject to network stability developed by Neely.[8] Using V>0 and using p(t) as -1 times an admission control utility metric leads to the drift-plus-penalty algorithm for joint flow control and network routing developed by Neely, Modiano, and Li.[3]\nA generalization of the Lyapunov drift theorem of the previous section is important in this context. For simplicity of exposition, assume the penalty p(t) is lower bounded by some (possibly negative) real number p_min:\n\n\n\n\np\n(\nt\n)\n\u2265\n\np\n\nm\ni\nn\n\n\n\n\u00a0\n\n\u2200\nt\n\u2208\n{\n0\n,\n1\n,\n2\n,\n.\n.\n.\n}\n\n\n{\\displaystyle p(t)\\geq p_{min}{\\text{ }}\\forall t\\in \\{0,1,2,...\\}}\n\n\nFor example, the above is satisfied with p_min=0 in cases when the penalty p(t) is always non-negative. Let p* represent a desired target for the time average of p(t). Let V be a parameter used to weight the importance of meeting the target. The following theorem shows that if a drift-plus-penalty condition is met, then the time average penalty is at most O(1/V) above the desired target, while average queue size is O(V). The V parameter can be tuned to make time average penalty as close to (or below) the target as desired, with a corresponding queue size tradeoff.\n\n\n\n\n\n\u00a0Theorem (Lyapunov Optimization):\n\n\n\n{\\displaystyle {\\text{ Theorem (Lyapunov Optimization):}}}\n\n[5]\nSuppose there are constants \n\n\n\nB\n\u2265\n0\n,\n\u03f5\n>\n0\n,\nV\n\u2265\n0\n,\n\np\n\n\u2217\n\n\n\n\n{\\displaystyle B\\geq 0,\\epsilon >0,V\\geq 0,p^{*}}\n\n such that for all t and all possible vectors Q(t) the following drift-plus-penalty condition holds:\n\n\n\n\n(\nE\nq\n.3\n)\n\n\u00a0\n\nE\n[\n\u0394\nL\n(\nt\n)\n+\nV\np\n(\nt\n)\n\n|\n\nQ\n(\nt\n)\n]\n\u2264\nB\n+\nV\n\np\n\n\u2217\n\n\n\u2212\n\u03f5\n\n\u2211\n\ni\n=\n1\n\n\nN\n\n\n\nQ\n\ni\n\n\n(\nt\n)\n\n\n{\\displaystyle (Eq.3){\\text{ }}E[\\Delta L(t)+Vp(t)|Q(t)]\\leq B+Vp^{*}-\\epsilon \\sum _{i=1}^{N}Q_{i}(t)}\n\n\nThen for all t>0 the time average penalty and time average queue sizes satisfy:\n\n\n\n\n\n\u00a0Proof:\n\n\n\n{\\displaystyle {\\text{ Proof:}}}\n\n\nTaking expectations of (Eq. 3) and using the law of iterated expectations gives:\n\n\n\n\nE\n[\n\u0394\nL\n(\nt\n)\n]\n+\nV\nE\n[\np\n(\nt\n)\n]\n\u2264\nB\n+\nV\n\np\n\n\u2217\n\n\n\u2212\n\u03f5\n\n\u2211\n\ni\n=\n1\n\n\nN\n\n\nE\n[\n\nQ\n\ni\n\n\n(\nt\n)\n]\n\n\n{\\displaystyle E[\\Delta L(t)]+VE[p(t)]\\leq B+Vp^{*}-\\epsilon \\sum _{i=1}^{N}E[Q_{i}(t)]}\n\n\nSumming the above over the first t slots and using the law of telescoping sums gives:\n\n\n\n\nE\n[\nL\n(\nt\n)\n]\n\u2212\nE\n[\nL\n(\n0\n)\n]\n+\nV\n\n\u2211\n\n\u03c4\n=\n0\n\n\nt\n\u2212\n1\n\n\nE\n[\np\n(\n\u03c4\n)\n]\n\u2264\n(\nB\n+\nV\n\np\n\n\u2217\n\n\n)\nt\n\u2212\n\u03f5\n\n\u2211\n\n\u03c4\n=\n0\n\n\nt\n\u2212\n1\n\n\n\n\u2211\n\ni\n=\n1\n\n\nN\n\n\nE\n[\n\nQ\n\ni\n\n\n(\n\u03c4\n)\n]\n\n\n{\\displaystyle E[L(t)]-E[L(0)]+V\\sum _{\\tau =0}^{t-1}E[p(\\tau )]\\leq (B+Vp^{*})t-\\epsilon \\sum _{\\tau =0}^{t-1}\\sum _{i=1}^{N}E[Q_{i}(\\tau )]}\n\n\nSince L(t) and Q_i(t) are non-negative quantities, it follows that:\n\n\n\n\n\u2212\nE\n[\nL\n(\n0\n)\n]\n+\nV\n\n\u2211\n\n\u03c4\n=\n0\n\n\nt\n\u2212\n1\n\n\nE\n[\np\n(\n\u03c4\n)\n]\n\u2264\n(\nB\n+\nV\n\np\n\n\u2217\n\n\n)\nt\n\n\n{\\displaystyle -E[L(0)]+V\\sum _{\\tau =0}^{t-1}E[p(\\tau )]\\leq (B+Vp^{*})t}\n\n\nDividing the above by Vt and rearranging terms proves the time average penalty bound. A similar argument proves the time average queue size bound.", 
    "dbpedia_url": "http://dbpedia.org/resource/Lyapunov_optimization", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Lyapunov_optimization\n"
}
{
    "about": "Pigeonhole sorting is a sorting algorithm that is suitable for sorting lists of elements where the number of elements (n) and the length of the range of possible key values (N) are approximately the same.[1] It requires O(n + N) time. It is similar to counting sort, but differs in that it \"moves items twice: once to the bucket array and again to the final destination [whereas] counting sort builds an auxiliary array then uses the array to compute each item's final destination and move the item there.\"[2]", 
    "name": "Pigeonhole Sort", 
    "classification": "Sorting Algorithms", 
    "full_text": "Pigeonhole sorting is a sorting algorithm that is suitable for sorting lists of elements where the number of elements (n) and the length of the range of possible key values (N) are approximately the same.[1] It requires O(n + N) time. It is similar to counting sort, but differs in that it \"moves items twice: once to the bucket array and again to the final destination [whereas] counting sort builds an auxiliary array then uses the array to compute each item's final destination and move the item there.\"[2]\nThe pigeonhole algorithm works as follows:\nSuppose one were sorting these value pairs by their first element:\nFor each value between 3 and 8 we set up a pigeonhole, then move each element to its pigeonhole:\nThe pigeonhole array is then iterated over in order, and the elements are moved back to the original list.\nThe difference between pigeonhole sort and counting sort is that in counting sort, the auxiliary array does not contain lists of input elements, only counts:\nUsing this information, one could perform a series of exchanges on the input array that would put it in order, moving items only once.\nFor arrays where N is much larger than n, bucket sort is a generalization that is more efficient in space and time.", 
    "dbpedia_url": "http://dbpedia.org/resource/Pigeonhole_sort", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Pigeonhole_sort\n"
}
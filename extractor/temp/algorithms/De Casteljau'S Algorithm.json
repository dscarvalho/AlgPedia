{
    "about": "In the mathematical field of numerical analysis, De Casteljau's algorithm is a recursive method to evaluate polynomials in Bernstein form or B\u00e9zier curves, named after its inventor Paul de Casteljau. De Casteljau's algorithm can also be used to split a single B\u00e9zier curve into two B\u00e9zier curves at an arbitrary parameter value.", 
    "name": "De Casteljau'S Algorithm", 
    "classification": "Numerical Analysis", 
    "full_text": "In the mathematical field of numerical analysis, De Casteljau's algorithm is a recursive method to evaluate polynomials in Bernstein form or B\u00e9zier curves, named after its inventor Paul de Casteljau. De Casteljau's algorithm can also be used to split a single B\u00e9zier curve into two B\u00e9zier curves at an arbitrary parameter value.\nAlthough the algorithm is slower for most architectures when compared with the direct approach, it is more numerically stable.\n\n\nA B\u00e9zier curve B (of degree n, with control points \n\n\n\n\n\u03b2\n\n0\n\n\n,\n\u2026\n,\n\n\u03b2\n\nn\n\n\n\n\n{\\displaystyle \\beta _{0},\\ldots ,\\beta _{n}}\n\n) can be written in Bernstein form as follows\nwhere b is a Bernstein basis polynomial\nThe curve at point t0 can be evaluated with the recurrence relation\nThen, the evaluation of \n\n\n\nB\n\n\n{\\displaystyle B}\n\n at point \n\n\n\n\nt\n\n0\n\n\n\n\n{\\displaystyle t_{0}}\n\n can be evaluated in \n\n\n\nn\n\n\n{\\displaystyle n}\n\n steps of the algorithm. The result \n\n\n\nB\n(\n\nt\n\n0\n\n\n)\n\n\n{\\displaystyle B(t_{0})}\n\n is given by\u00a0:\nMoreover, the B\u00e9zier curve \n\n\n\nB\n\n\n{\\displaystyle B}\n\n can be split at point \n\n\n\n\nt\n\n0\n\n\n\n\n{\\displaystyle t_{0}}\n\n into two curves with respective control points\u00a0:\nHere is an example implementation of De Casteljau's algorithm in Haskell:\nWhen doing the calculation by hand it is useful to write down the coefficients in a triangle scheme as\nWhen choosing a point t0 to evaluate a Bernstein polynomial we can use the two diagonals of the triangle scheme to construct a division of the polynomial\ninto\nand\nWe want to evaluate the Bernstein polynomial of degree 2 with the Bernstein coefficients\nat the point t0.\nWe start the recursion with\nand with the second iteration the recursion stops with\nwhich is the expected Bernstein polynomial of degree\u00a02.\nWhen evaluating a B\u00e9zier curve of degree n in 3-dimensional space with n+1 control points Pi\nwith\nwe split the B\u00e9zier curve into three separate equations\nwhich we evaluate individually using De Casteljau's algorithm.\nThe geometric interpretation of De Casteljau's algorithm is straightforward.\nThe following picture shows this process for a cubic B\u00e9zier curve:\n\nNote that the intermediate points that were constructed are in fact the control points for two new B\u00e9zier curves, both exactly coincident with the old one. This algorithm not only evaluates the curve at \n\n\n\n\nt\n\n\n\n{\\displaystyle \\scriptstyle t}\n\n, but splits the curve into two pieces at \n\n\n\n\nt\n\n\n\n{\\displaystyle \\scriptstyle t}\n\n, and provides the equations of the two sub-curves in B\u00e9zier form.\nThe interpretation given above is valid for a nonrational B\u00e9zier curve. To evaluate a rational B\u00e9zier curve in \n\n\n\n\n\n\nR\n\n\nn\n\n\n\n\n\n{\\displaystyle \\scriptstyle \\mathbf {R} ^{n}}\n\n, we may project the point into \n\n\n\n\n\n\nR\n\n\nn\n+\n1\n\n\n\n\n\n{\\displaystyle \\scriptstyle \\mathbf {R} ^{n+1}}\n\n; for example, a curve in three dimensions may have its control points \n\n\n\n\n{\n(\n\nx\n\ni\n\n\n,\n\ny\n\ni\n\n\n,\n\nz\n\ni\n\n\n)\n}\n\n\n\n{\\displaystyle \\scriptstyle \\{(x_{i},y_{i},z_{i})\\}}\n\n and weights \n\n\n\n\n{\n\nw\n\ni\n\n\n}\n\n\n\n{\\displaystyle \\scriptstyle \\{w_{i}\\}}\n\n projected to the weighted control points \n\n\n\n\n{\n(\n\nw\n\ni\n\n\n\nx\n\ni\n\n\n,\n\nw\n\ni\n\n\n\ny\n\ni\n\n\n,\n\nw\n\ni\n\n\n\nz\n\ni\n\n\n,\n\nw\n\ni\n\n\n)\n}\n\n\n\n{\\displaystyle \\scriptstyle \\{(w_{i}x_{i},w_{i}y_{i},w_{i}z_{i},w_{i})\\}}\n\n. The algorithm then proceeds as usual, interpolating in \n\n\n\n\n\n\nR\n\n\n4\n\n\n\n\n\n{\\displaystyle \\scriptstyle \\mathbf {R} ^{4}}\n\n. The resulting four-dimensional points may be projected back into three-space with a perspective divide.\nIn general, operations on a rational curve (or surface) are equivalent to operations on a nonrational curve in a projective space. This representation as the \"weighted control points\" and weights is often convenient when evaluating rational curves.", 
    "dbpedia_url": "http://dbpedia.org/resource/De_Casteljau's_algorithm", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/De_Casteljau's_algorithm\n"
}
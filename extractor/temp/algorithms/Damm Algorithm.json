{
    "about": "In error detection, the Damm algorithm is a check digit algorithm that detects all single-digit errors and all adjacent transposition errors. It was presented by H. Michael Damm in 2004.[1]", 
    "name": "Damm Algorithm", 
    "classification": "Checksum Algorithms", 
    "full_text": "In error detection, the Damm algorithm is a check digit algorithm that detects all single-digit errors and all adjacent transposition errors. It was presented by H. Michael Damm in 2004.[1]\n\n\nThe Damm algorithm is similar to the Verhoeff algorithm. It too will detect all occurrences of the two most frequently appearing types of transcription errors, namely altering one single digit, and transposing two adjacent digits (including the transposition of the trailing check digit and the preceding digit).[1][2] But the Damm algorithm has the benefit that it makes do without the dedicatedly constructed permutations and its position specific powers being inherent in the Verhoeff scheme. Furthermore, a table of inverses can be dispensed with provided all main diagonal entries of the operation table are zero.\nThe Damm algorithm does not suffer from exceeding the number of 10 possible values, resulting in the need for using a non-digit character (as the X in the 10-digit ISBN check digit scheme).\nPrepending leading zeros does not affect the check digit.[1]\nThere are totally anti-symmetric quasigroups that detect all phonetic errors associated with the English language (13 \u2194 30, 14 \u2194 40, ..., 19 \u2194 90). The table used in the illustrating example is based on an instance of such kind.\nDespite its desirable properties in typical contexts where similar algorithms are used, the Damm algorithm is largely unknown and scarcely used in practice.\nIts essential part is a quasigroup of order 10 (i.e. having a 10 \u00d7 10 Latin square as the body of its operation table) with the special feature of being weakly totally anti-symmetric.[3][4][i][ii][iii] Damm revealed several methods to create totally anti-symmetric quasigroups of order 10 and gave some examples in his doctoral dissertation.[3][i] With this, Damm also disproved an old conjecture that totally anti-symmetric quasigroups of order 10 do not exist.[5]\nA quasigroup (Q, \u2217) is called totally anti-symmetric if for all c, x, y \u2208 Q, the following implications hold:[4]\nand it is called weak totally anti-symmetric if only the first implication holds. Damm proved that the existence of a totally anti-symmetric quasigroup of order n is equivalent to the existence of a weak totally anti-symmetric quasigroup of order n. For the Damm algorithm with the check equation (\u2026((0 \u2217 xm) \u2217 xm\u22121) \u2217 \u2026) \u2217 x0 = 0 a weak totally anti-symmetric quasigroup with the property x \u2217 x = 0 is needed. Such a quasigroup can be constructed from any totally anti-symmetric quasigroup by rearranging the columns in such a way that all zeros lay on the diagonal. And, on the other hand, from any weak totally anti-symmetric quasigroup a totally anti-symmetric quasigroup can be constructed by rearranging the columns in such a way that the first row is in natural order.[3]\nThe validity of a digit sequence containing a check digit is defined over a quasigroup. A quasigroup table ready for use can be taken from Damm's dissertation (pages 98, 106, 111).[3] It is useful if each main diagonal entry is 0,[1] because it simplifies the check digit calculation.\nPrerequisite: The main diagonal entries of the table are 0.\nThe following operation table will be used.[1] It may be obtained from the totally anti-symmetric quasigroup in Damm's doctoral dissertation page 111[3] by rearranging the rows and changing the entries correspondingly.\nSuppose we choose the number (digit sequence) 572.\nThe resulting interim digit is 4. This is the calculated check digit. We append it to the number and obtain 5724.\nThe resulting interim digit is 0, hence the number is valid.\nThis is the above example showing the detail of the algorithm generating the check digit (broken blue arrow) and verifying the number 572 with the check digit.\n", 
    "dbpedia_url": "http://dbpedia.org/resource/Damm_algorithm", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Damm_algorithm\n"
}
{
    "about": "Task systems are mathematical objects used to model the set of possible configuration of online algorithms. They were introduced by Borodin, Linial and Saks (1992) to model a variety of online problems. A task system determines a set of states and costs to change states. Task systems obtain as input a sequence of requests such that each request assigns processing times to the states. The objective of an online algorithm for task systems is to create a schedule that minimizes the overall cost incurred due to processing the tasks with respect to the states and due to the cost to change states.", 
    "name": "Metrical Task System", 
    "classification": "Online Algorithms", 
    "full_text": "Task systems are mathematical objects used to model the set of possible configuration of online algorithms. They were introduced by Borodin, Linial and Saks (1992) to model a variety of online problems. A task system determines a set of states and costs to change states. Task systems obtain as input a sequence of requests such that each request assigns processing times to the states. The objective of an online algorithm for task systems is to create a schedule that minimizes the overall cost incurred due to processing the tasks with respect to the states and due to the cost to change states.\nIf the cost function to change states is a metric, the task system is a metrical task system (MTS). This is the most common type of task systems. Metrical task systems generalize online problems such as paging, list accessing, and the k-server problem (in finite spaces).\n\n\nA task system is a pair \n\n\n\n(\nS\n,\nd\n)\n\n\n{\\displaystyle (S,d)}\n\n where \n\n\n\nS\n=\n{\n\ns\n\n1\n\n\n,\n\ns\n\n2\n\n\n,\n\u2026\n,\n\ns\n\nn\n\n\n}\n\n\n{\\displaystyle S=\\{s_{1},s_{2},\\dotsc ,s_{n}\\}}\n\n is a set of states and \n\n\n\nd\n:\nS\n\u00d7\nS\n\u2192\n\nR\n\n\n\n{\\displaystyle d:S\\times S\\rightarrow \\mathbb {R} }\n\n is a distance function. If \n\n\n\nd\n\n\n{\\displaystyle d}\n\n is a metric, \n\n\n\n(\nS\n,\nd\n)\n\n\n{\\displaystyle (S,d)}\n\n is a metrical task system. An input to the task system is a sequence \n\n\n\n\u03c3\n=\n\nT\n\n1\n\n\n,\n\nT\n\n2\n\n\n,\n\u2026\n,\n\nT\n\nl\n\n\n\n\n{\\displaystyle \\sigma =T_{1},T_{2},\\dotsc ,T_{l}}\n\n such that for each \n\n\n\ni\n\n\n{\\displaystyle i}\n\n, \n\n\n\n\nT\n\ni\n\n\n\n\n{\\displaystyle T_{i}}\n\n is a vector of \n\n\n\nn\n\n\n{\\displaystyle n}\n\n non-negative entries that determine the processing costs for the \n\n\n\nn\n\n\n{\\displaystyle n}\n\n states when processing the \n\n\n\ni\n\n\n{\\displaystyle i}\n\nth task.\nAn algorithm for the task system produces a schedule \n\n\n\n\u03c0\n\n\n{\\displaystyle \\pi }\n\n that determines the sequence of states. For instance, \n\n\n\n\u03c0\n(\ni\n)\n=\n\ns\n\nj\n\n\n\n\n{\\displaystyle \\pi (i)=s_{j}}\n\n means that the \n\n\n\ni\n\n\n{\\displaystyle i}\n\nth task \n\n\n\n\nT\n\ni\n\n\n\n\n{\\displaystyle T_{i}}\n\n is run in state \n\n\n\n\ns\n\nj\n\n\n\n\n{\\displaystyle s_{j}}\n\n. The processing cost of a schedule is \n\n\n\n\nc\no\ns\nt\n\n(\n\u03c0\n,\n\u03c3\n)\n=\n\n\u2211\n\ni\n=\n1\n\n\nl\n\n\nd\n(\n\u03c0\n(\ni\n\u2212\n1\n)\n,\n\u03c0\n(\ni\n)\n)\n+\n\nT\n\ni\n\n\n(\n\u03c0\n(\ni\n)\n)\n.\n\n\n{\\displaystyle \\mathrm {cost} (\\pi ,\\sigma )=\\sum _{i=1}^{l}d(\\pi (i-1),\\pi (i))+T_{i}(\\pi (i)).}\n\n\nThe objective of the algorithm is to find a schedule such that the cost is minimized.\nAs usual for online problems, the most common measure to analyze algorithms for metrical task systems is the competitive analysis, where the performance of an online algorithm is compared to the performance of an optimal offline algorithm. For deterministic online algorithms, there is a tight bound \n\n\n\n2\nn\n\u2212\n1\n\n\n{\\displaystyle 2n-1}\n\n on the competitive ratio due to Borodin et al. (1992).\nFor randomized online algorithms, the competitive ratio is lower bounded by \n\n\n\n\u03a9\n(\nlog\n\u2061\nn\n\n/\n\nlog\n\u2061\nlog\n\u2061\nn\n)\n\n\n{\\displaystyle \\Omega (\\log n/\\log \\log n)}\n\n and upper bounded by \n\n\n\nO\n(\n\nlog\n\n2\n\n\n\u2061\nn\nlog\n\u2061\nlog\n\u2061\nn\n)\n\n\n{\\displaystyle O(\\log ^{2}n\\log \\log n)}\n\n. The lower bound is due to Bartal et al. (2006,2005). The upper bound is due to Fiat and Mendel (2003) who improved upon a result of Bartal et al. (1997).\nThere are many results for various types of restricted metrics.", 
    "dbpedia_url": "http://dbpedia.org/resource/Metrical_task_system", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Metrical_task_system\n"
}
{
    "about": "The bilinear transform (also known as Tustin's method or Mobius Transformation) is used in digital signal processing and discrete-time control theory to transform continuous-time system representations to discrete-time and vice versa.", 
    "name": "Bilinear Transform", 
    "classification": "Digital Signal Processing", 
    "full_text": "The bilinear transform (also known as Tustin's method or Mobius Transformation) is used in digital signal processing and discrete-time control theory to transform continuous-time system representations to discrete-time and vice versa.\nThe bilinear transform is a special case of a conformal mapping (namely, the M\u00f6bius transformation), often used to convert a transfer function \n\n\n\n\nH\n\na\n\n\n(\ns\n)\n\u00a0\n\n\n{\\displaystyle H_{a}(s)\\ }\n\n of a linear, time-invariant (LTI) filter in the continuous-time domain (often called an analog filter) to a transfer function \n\n\n\n\nH\n\nd\n\n\n(\nz\n)\n\u00a0\n\n\n{\\displaystyle H_{d}(z)\\ }\n\n of a linear, shift-invariant filter in the discrete-time domain (often called a digital filter although there are analog filters constructed with switched capacitors that are discrete-time filters). It maps positions on the \n\n\n\nj\n\u03c9\n\u00a0\n\n\n{\\displaystyle j\\omega \\ }\n\n axis, \n\n\n\nR\ne\n[\ns\n]\n=\n0\n\u00a0\n\n\n{\\displaystyle Re[s]=0\\ }\n\n, in the s-plane to the unit circle, \n\n\n\n\n|\n\nz\n\n|\n\n=\n1\n\u00a0\n\n\n{\\displaystyle |z|=1\\ }\n\n, in the z-plane. Other bilinear transforms can be used to warp the frequency response of any discrete-time linear system (for example to approximate the non-linear frequency resolution of the human auditory system) and are implementable in the discrete domain by replacing a system's unit delays \n\n\n\n\n(\n\nz\n\n\u2212\n1\n\n\n)\n\n\u00a0\n\n\n{\\displaystyle \\left(z^{-1}\\right)\\ }\n\n with first order all-pass filters.\nThe transform preserves stability and maps every point of the frequency response of the continuous-time filter, \n\n\n\n\nH\n\na\n\n\n(\nj\n\n\u03c9\n\na\n\n\n)\n\u00a0\n\n\n{\\displaystyle H_{a}(j\\omega _{a})\\ }\n\n to a corresponding point in the frequency response of the discrete-time filter, \n\n\n\n\nH\n\nd\n\n\n(\n\ne\n\nj\n\n\u03c9\n\nd\n\n\nT\n\n\n)\n\u00a0\n\n\n{\\displaystyle H_{d}(e^{j\\omega _{d}T})\\ }\n\n although to a somewhat different frequency, as shown in the Frequency warping section below. This means that for every feature that one sees in the frequency response of the analog filter, there is a corresponding feature, with identical gain and phase shift, in the frequency response of the digital filter but, perhaps, at a somewhat different frequency. This is barely noticeable at low frequencies but is quite evident at frequencies close to the Nyquist frequency.\n\n\nThe bilinear transform is a first-order approximation of the natural logarithm function that is an exact mapping of the z-plane to the s-plane. When the Laplace transform is performed on a discrete-time signal (with each element of the discrete-time sequence attached to a correspondingly delayed unit impulse), the result is precisely the Z transform of the discrete-time sequence with the substitution of\nwhere \n\n\n\nT\n\u00a0\n\n\n{\\displaystyle T\\ }\n\n is the numerical integration step size of the trapezoidal rule used in the bilinear transform derivation;[1] or, in other words, the sampling period. The above bilinear approximation can be solved for \n\n\n\ns\n\u00a0\n\n\n{\\displaystyle s\\ }\n\n or a similar approximation for \n\n\n\ns\n=\n(\n1\n\n/\n\nT\n)\nln\n\u2061\n(\nz\n)\n\u00a0\n\u00a0\n\n\n{\\displaystyle s=(1/T)\\ln(z)\\ \\ }\n\n can be performed.\nThe inverse of this mapping (and its first-order bilinear approximation) is\nThe bilinear transform essentially uses this first order approximation and substitutes into the continuous-time transfer function, \n\n\n\n\nH\n\na\n\n\n(\ns\n)\n\u00a0\n\n\n{\\displaystyle H_{a}(s)\\ }\n\n\nThat is\nA continuous-time causal filter is stable if the poles of its transfer function fall in the left half of the complex s-plane. A discrete-time causal filter is stable if the poles of its transfer function fall inside the unit circle in the complex z-plane. The bilinear transform maps the left half of the complex s-plane to the interior of the unit circle in the z-plane. Thus filters designed in the continuous-time domain that are stable are converted to filters in the discrete-time domain that preserve that stability.\nLikewise, a continuous-time filter is minimum-phase if the zeros of its transfer function fall in the left half of the complex s-plane. A discrete-time filter is minimum-phase if the zeros of its transfer function fall inside the unit circle in the complex z-plane. Then the same mapping property assures that continuous-time filters that are minimum-phase are converted to discrete-time filters that preserve that property of being minimum-phase.\nAs an example take a simple low-pass RC filter. This continuous-time filter has a transfer function\nIf we wish to implement this filter as a digital filter, we can apply the bilinear transform by substituting for \n\n\n\ns\n\n\n{\\displaystyle s}\n\n the formula above; after some reworking, we get the following filter representation:\nThe coefficients of the denominator are the 'feed-backward' coefficients and the coefficients of the numerator are the 'feed-forward' coefficients used to implement a real-time digital filter.\nIt is possible to relate the coefficients of a continuous-time, analog filter with those of a similar discrete-time digital filter created through the bilinear transform process. Transforming a general, second-order continuous-time filter with the given transfer function\nusing the bilinear transform (without prewarping any frequency specification) requires the substitution of\nwhere \n\n\n\nK\n\u225c\n\n\n2\nT\n\n\n\n\n{\\displaystyle K\\triangleq {\\frac {2}{T}}}\n\n.\nThis results in a discrete-time digital biquad filter with coefficients expressed in terms of the coefficients of the original continuous time filter:\nNormally the constant term in the denominator must be normalized to 1 before deriving the corresponding difference equation. This results in\nThe difference equation (using the Direct Form I) is\nTo determine the frequency response of a continuous-time filter, the transfer function \n\n\n\n\nH\n\na\n\n\n(\ns\n)\n\u00a0\n\n\n{\\displaystyle H_{a}(s)\\ }\n\n is evaluated at \n\n\n\ns\n=\nj\n\u03c9\n\u00a0\n\n\n{\\displaystyle s=j\\omega \\ }\n\n which is on the \n\n\n\nj\n\u03c9\n\u00a0\n\n\n{\\displaystyle j\\omega \\ }\n\n axis. Likewise, to determine the frequency response of a discrete-time filter, the transfer function \n\n\n\n\nH\n\nd\n\n\n(\nz\n)\n\u00a0\n\n\n{\\displaystyle H_{d}(z)\\ }\n\n is evaluated at \n\n\n\nz\n=\n\ne\n\nj\n\u03c9\nT\n\n\n\u00a0\n\n\n{\\displaystyle z=e^{j\\omega T}\\ }\n\n which is on the unit circle, \n\n\n\n\n|\n\nz\n\n|\n\n=\n1\n\u00a0\n\n\n{\\displaystyle |z|=1\\ }\n\n. When the actual frequency of \n\n\n\n\u03c9\n\u00a0\n\n\n{\\displaystyle \\omega \\ }\n\n is input to the discrete-time filter designed by use of the bilinear transform, it is desired to know at what frequency, \n\n\n\n\n\u03c9\n\na\n\n\n\u00a0\n\n\n{\\displaystyle \\omega _{a}\\ }\n\n, for the continuous-time filter that this \n\n\n\n\u03c9\n\u00a0\n\n\n{\\displaystyle \\omega \\ }\n\n is mapped to.\nThis shows that every point on the unit circle in the discrete-time filter z-plane, \n\n\n\nz\n=\n\ne\n\nj\n\u03c9\nT\n\n\n\u00a0\n\n\n{\\displaystyle z=e^{j\\omega T}\\ }\n\n is mapped to a point on the \n\n\n\nj\n\u03c9\n\u00a0\n\n\n{\\displaystyle j\\omega \\ }\n\n axis on the continuous-time filter s-plane, \n\n\n\ns\n=\nj\n\n\u03c9\n\na\n\n\n\u00a0\n\n\n{\\displaystyle s=j\\omega _{a}\\ }\n\n. That is, the discrete-time to continuous-time frequency mapping of the bilinear transform is\nand the inverse mapping is\nThe discrete-time filter behaves at frequency \n\n\n\n\u03c9\n\u00a0\n\n\n{\\displaystyle \\omega \\ }\n\n the same way that the continuous-time filter behaves at frequency \n\n\n\n(\n2\n\n/\n\nT\n)\ntan\n\u2061\n(\n\u03c9\nT\n\n/\n\n2\n)\n\u00a0\n\n\n{\\displaystyle (2/T)\\tan(\\omega T/2)\\ }\n\n. Specifically, the gain and phase shift that the discrete-time filter has at frequency \n\n\n\n\u03c9\n\u00a0\n\n\n{\\displaystyle \\omega \\ }\n\n is the same gain and phase shift that the continuous-time filter has at frequency \n\n\n\n(\n2\n\n/\n\nT\n)\ntan\n\u2061\n(\n\u03c9\nT\n\n/\n\n2\n)\n\u00a0\n\n\n{\\displaystyle (2/T)\\tan(\\omega T/2)\\ }\n\n. This means that every feature, every \"bump\" that is visible in the frequency response of the continuous-time filter is also visible in the discrete-time filter, but at a different frequency. For low frequencies (that is, when \n\n\n\n\u03c9\n\u226a\n2\n\n/\n\nT\n\n\n{\\displaystyle \\omega \\ll 2/T}\n\n or \n\n\n\n\n\u03c9\n\na\n\n\n\u226a\n2\n\n/\n\nT\n\n\n{\\displaystyle \\omega _{a}\\ll 2/T}\n\n), \n\n\n\n\u03c9\n\u2248\n\n\u03c9\n\na\n\n\n\u00a0\n\n\n{\\displaystyle \\omega \\approx \\omega _{a}\\ }\n\n.\nOne can see that the entire continuous frequency range\nis mapped onto the fundamental frequency interval\nThe continuous-time filter frequency \n\n\n\n\n\u03c9\n\na\n\n\n=\n0\n\u00a0\n\n\n{\\displaystyle \\omega _{a}=0\\ }\n\n corresponds to the discrete-time filter frequency \n\n\n\n\u03c9\n=\n0\n\u00a0\n\n\n{\\displaystyle \\omega =0\\ }\n\n and the continuous-time filter frequency \n\n\n\n\n\u03c9\n\na\n\n\n=\n\u00b1\n\u221e\n\u00a0\n\n\n{\\displaystyle \\omega _{a}=\\pm \\infty \\ }\n\n correspond to the discrete-time filter frequency \n\n\n\n\u03c9\n=\n\u00b1\n\u03c0\n\n/\n\nT\n.\n\u00a0\n\n\n{\\displaystyle \\omega =\\pm \\pi /T.\\ }\n\n\nOne can also see that there is a nonlinear relationship between \n\n\n\n\n\u03c9\n\na\n\n\n\u00a0\n\n\n{\\displaystyle \\omega _{a}\\ }\n\n and \n\n\n\n\u03c9\n.\n\u00a0\n\n\n{\\displaystyle \\omega .\\ }\n\n This effect of the bilinear transform is called frequency warping. The continuous-time filter can be designed to compensate for this frequency warping by setting \n\n\n\n\n\u03c9\n\na\n\n\n=\n\n\n2\nT\n\n\ntan\n\u2061\n\n(\n\u03c9\n\n\nT\n2\n\n\n)\n\n\u00a0\n\n\n{\\displaystyle \\omega _{a}={\\frac {2}{T}}\\tan \\left(\\omega {\\frac {T}{2}}\\right)\\ }\n\n for every frequency specification that the designer has control over (such as corner frequency or center frequency). This is called pre-warping the filter design.\nWhen designing a digital filter as an approximation of a continuous time filter, the frequency response (both amplitude and phase) of the digital filter can be made to match the frequency response of the continuous filter at frequency \n\n\n\n\n\u03c9\n\n0\n\n\n\n\n{\\displaystyle \\omega _{0}}\n\n if the following transform is substituted into the continuous filter transfer function.[2] This is a modified version of Tustin's transform shown above. However, note that this transform becomes the above transform as \n\n\n\n\n\u03c9\n\n0\n\n\n\u2192\n0\n\n\n{\\displaystyle \\omega _{0}\\to 0}\n\n. That is to say, the above transform causes the digital filter response to match the analog filter response at DC.\nThe main advantage of the warping phenomenon is the absence of aliasing distortion of the frequency response characteristic, such as observed with Impulse invariance. It is necessary, however, to compensate for the frequency warping by pre-warping the given frequency specifications of the continuous-time system. These pre-warped specifications may then be used in the bilinear transform to obtain the desired discrete-time system.", 
    "dbpedia_url": "http://dbpedia.org/resource/Bilinear_transform", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Bilinear_transform\n"
}
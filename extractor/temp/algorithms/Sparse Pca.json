{
    "about": "Sparse principal component analysis (sparse PCA) is a specialised technique used in statistical analysis and, in particular, in the analysis of multivariate data sets. It extends the classic method of principal component analysis (PCA) for the reduction of dimensionality of data by adding sparsity constraint on the input variables.", 
    "name": "Sparse Pca", 
    "classification": "Machine Learning Algorithms", 
    "full_text": "Sparse principal component analysis (sparse PCA) is a specialised technique used in statistical analysis and, in particular, in the analysis of multivariate data sets. It extends the classic method of principal component analysis (PCA) for the reduction of dimensionality of data by adding sparsity constraint on the input variables.\nOrdinary principal component analysis (PCA) uses a vector space transform to reduce multidimensional data sets to lower dimensions. It finds linear combinations of input variables, and transforms them into new variables (called principal components) that correspond to directions of maximal variance in the data. The number of new variables created by these linear combinations is usually much lower than the number of input variables in the original dataset, while still explaining most of the variance present in the data.\nA particular disadvantage of ordinary PCA is that the principal components are usually linear combinations of all input variables. Sparse PCA overcomes this disadvantage by finding linear combinations that contain just a few input variables.\n\n\nConsider a data matrix, X, where each of the p columns represent an input variable, and each of the n rows represents an independent sample from data population. One assumes each column of X has mean zero, otherwise one can subtract column-wise mean from each element of X.\nLet \u03a3=XTX be the empirical covariance matrix of X, which has dimension p\u00d7p. Given an integer k with 1\u2264k\u2264p, the sparse PCA problem can be formulated as maximizing the variance along a direction represented by vector \n\n\n\nv\n\u2208\n\n\nR\n\n\np\n\n\n\n\n{\\displaystyle v\\in \\mathbb {R} ^{p}}\n\n while constraining its cardinality:\nThe first constraint specifies that v is a unit vector. In the second constraint, \n\n\n\n\n\n\u2225\nv\n\u2225\n\n\n0\n\n\n\n\n{\\displaystyle \\left\\Vert v\\right\\Vert _{0}}\n\n represents the L0 norm of v, which is defined as the number of its non-zero components. So the second constraint specifies that the number of non-zero components in v is less than or equal to k, which is typically an integer that is much smaller than dimension p. The optimal value of Eq. 1 is known as the k-sparse largest eigenvalue.\nIf one takes k=p, the problem reduces to the ordinary PCA, and the optimal value becomes the largest eigenvalue of covariance matrix \u03a3.\nAfter finding the optimal solution v, one deflates \u03a3 to obtain a new matrix\nand iterate this process to obtain further principal components. However, unlike PCA, sparse PCA cannot guarantee that different principal components are orthogonal. In order to achieve orthogonality, additional constraints must be enforced.\nBecause of the cardinality constraint, the maximization problem is hard to solve exactly, especially when dimension p is high. In fact, the sparse PCA problem in Eq. 1 is NP-hard in the strong sense.[1] Several alternative approaches have been proposed, including\nIt has been proposed that sparse PCA can be approximated by semidefinite programming (SDP).[3] Let \n\n\n\nV\n\n\n{\\displaystyle V}\n\n be a p\u00d7p symmetric matrix, one can rewrite the sparse PCA problem as\nTr is the matrix trace, and \n\n\n\n\u2225\nV\n\n\u2225\n\n0\n\n\n\n\n{\\displaystyle \\Vert V\\Vert _{0}}\n\n represents the non-zero elements in matrix V. The last line specifies that V has matrix rank one and is positive semidefinite. The last line means that one has \n\n\n\nV\n=\nv\n\nv\n\nT\n\n\n\n\n{\\displaystyle V=vv^{T}}\n\n, so Eq. 2 is equivalent to Eq. 1. If one drops the rank constraint and relaxes the cardinality constraint by a 1-norm convex constraint, one gets a semidefinite programming relaxation, which can be solved efficiently in polynomial time:\nIn the second constraint, \n\n\n\n\n1\n\n\n\n{\\displaystyle \\mathbf {1} }\n\n is a p\u00d71 vector of ones, and |V| is the matrix whose elements are the absolute values of the elements of V.\nThe optimal solution \n\n\n\nV\n\n\n{\\displaystyle V}\n\n to the relaxed problem Eq. 3 is not guaranteed to have rank one. In that case, \n\n\n\nV\n\n\n{\\displaystyle V}\n\n can be truncated to retain only the dominant eigenvector.\nSuppose ordinary PCA is applied to a dataset where each input variable represents a different asset, it may generate principal components that are weighted combination of all the assets. In contrast, sparse PCA would produce principal components that are weighted combination of only a few input assets, so one can easily interpret its meaning. Furthermore, if one uses a trading strategy based on these principal components, fewer assets imply less transaction costs.\nConsider a dataset where each input variable corresponds to a specific gene. Sparse PCA can produce a principal component that involves only a few genes, so researchers can focus on these specific genes for further analysis.\nContemporary datasets often have the number of input variables (p) comparable with or even much larger than the number of samples (n). It has been shown that if p/n does not converge to zero, the classical PCA is not consistent. In other words, if we let k=p in Eq. 1, then the optimal value does not converge to the largest eigenvalue of data population when the sample size n\u2192\u221e, and the optimal solution does not converge to the direction of maximum variance. But sparse PCA can retain consistency even if \n\n\n\n\np\n\u226b\nn\n.\n\n\n\n{\\displaystyle \\scriptstyle p\\gg n.}\n\n[8]\nMore specifically, the k-sparse largest eigenvalue (the optimal value of Eq. 1) can be used to discriminate an isometric model, where every direction has the same variance, from a spiked covariance model in high-dimensional setting.[9] Consider a hypothesis test where the null hypothesis specifies that data \n\n\n\nX\n\n\n{\\displaystyle X}\n\n are generated from multivariate normal distributuion with mean 0 and covariance equal to an identity matrix, and the alternative hypothesis specifies that data \n\n\n\nX\n\n\n{\\displaystyle X}\n\n is generated from a spiked model with signal strength \n\n\n\n\u03b8\n\n\n{\\displaystyle \\theta }\n\n:\nwhere \n\n\n\nv\n\u2208\n\n\nR\n\n\np\n\n\n\n\n{\\displaystyle v\\in \\mathbb {R} ^{p}}\n\n has only k non-zero coordinates. The largest k-sparse eigenvalue can discriminate the two hypothesis if and only if \n\n\n\n\u03b8\n>\n\u0398\n(\n\n\nk\nlog\n\u2061\n(\np\n)\n\n/\n\nn\n\n\n)\n\n\n{\\displaystyle \\theta >\\Theta ({\\sqrt {k\\log(p)/n}})}\n\n.\nSince computing k-sparse eigenvalue is NP-hard, one can approximate it by the optimal value of semidefinite programming relaxation (Eq. 3). If that case, we can discriminate the two hypotheses if \n\n\n\n\u03b8\n>\n\u0398\n(\n\n\n\nk\n\n2\n\n\nlog\n\u2061\n(\np\n)\n\n/\n\nn\n\n\n)\n\n\n{\\displaystyle \\theta >\\Theta ({\\sqrt {k^{2}\\log(p)/n}})}\n\n. The additional \n\n\n\n\n\nk\n\n\n\n\n{\\displaystyle {\\sqrt {k}}}\n\n term cannot be improved by any other polynomical time algorithm if the planted clique conjecture holds.", 
    "dbpedia_url": "http://dbpedia.org/resource/Sparse_PCA", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Sparse_PCA\n"
}
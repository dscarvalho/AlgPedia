{
    "about": "In error detection and correction, majority logic decoding is a method to decode repetition codes, based on the assumption that the largest number of occurrences of a symbol was the transmitted symbol.", 
    "name": "Majority Logic Decoding", 
    "classification": "Error Detection And Correction", 
    "full_text": "In error detection and correction, majority logic decoding is a method to decode repetition codes, based on the assumption that the largest number of occurrences of a symbol was the transmitted symbol.\n\n\nIn a binary alphabet made of \n\n\n\n0\n,\n1\n\n\n{\\displaystyle 0,1}\n\n, if a \n\n\n\n(\nn\n,\n1\n)\n\n\n{\\displaystyle (n,1)}\n\n repetition code is used, then each input bit is mapped to the code word as a string of \n\n\n\nn\n\n\n{\\displaystyle n}\n\n-replicated input bits. Generally \n\n\n\nn\n=\n2\nt\n+\n1\n\n\n{\\displaystyle n=2t+1}\n\n, an odd number.\nThe repetition codes can detect up to \n\n\n\n[\nn\n\n/\n\n2\n]\n\n\n{\\displaystyle [n/2]}\n\n transmission errors. Decoding errors occur when the more than these transmission errors occur. Thus, assuming bit-transmission errors are independent, the probability of error for a repetition code is given by \n\n\n\n\nP\n\ne\n\n\n=\n\n\u2211\n\nk\n=\n\n\n\nn\n+\n1\n\n2\n\n\n\n\nn\n\n\n\n\n\n(\n\n\nn\nk\n\n\n)\n\n\n\n\n\u03f5\n\nk\n\n\n(\n1\n\u2212\n\u03f5\n\n)\n\n(\nn\n\u2212\nk\n)\n\n\n\n\n{\\displaystyle P_{e}=\\sum _{k={\\frac {n+1}{2}}}^{n}{n \\choose k}\\epsilon ^{k}(1-\\epsilon )^{(n-k)}}\n\n, where \n\n\n\n\u03f5\n\n\n{\\displaystyle \\epsilon }\n\n is the error over the transmission channel.\nThe code word is \n\n\n\n(\nn\n,\n1\n)\n\n\n{\\displaystyle (n,1)}\n\n, where \n\n\n\nn\n=\n2\nt\n+\n1\n\n\n{\\displaystyle n=2t+1}\n\n, an odd number.\nIn a \n\n\n\n(\nn\n,\n1\n)\n\n\n{\\displaystyle (n,1)}\n\n code, if R=[1 0 1 1 0], then it would be decoded as,", 
    "dbpedia_url": "http://dbpedia.org/resource/Majority_logic_decoding", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Majority_logic_decoding\n"
}
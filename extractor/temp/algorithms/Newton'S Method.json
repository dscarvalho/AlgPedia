{
    "about": "In numerical analysis, Newton's method (also known as the Newton\u2013Raphson method), named after Isaac Newton and Joseph Raphson, is a method for finding successively better approximations to the roots (or zeroes) of a real-valued function.", 
    "name": "Newton'S Method", 
    "classification": "Optimization Algorithms And Methods", 
    "full_text": "In numerical analysis, Newton's method (also known as the Newton\u2013Raphson method), named after Isaac Newton and Joseph Raphson, is a method for finding successively better approximations to the roots (or zeroes) of a real-valued function.\nThe Newton\u2013Raphson method in one variable is implemented as follows:\nThe method starts with a function f defined over the real numbers x, the function's derivative f\u2009\u2032, and an initial guess x0 for a root of the function f. If the function satisfies the assumptions made in the derivation of the formula and the initial guess is close, then a better approximation x1 is\nGeometrically, (x1, 0) is the intersection of the x-axis and the tangent of the graph of f at (x0, f\u2009(x0)).\nThe process is repeated as\nuntil a sufficiently accurate value is reached.\nThis algorithm is first in the class of Householder's methods, succeeded by Halley's method. The method can also be extended to complex functions and to systems of equations.\n\n\nThe idea of the method is as follows: one starts with an initial guess which is reasonably close to the true root, then the function is approximated by its tangent line (which can be computed using the tools of calculus), and one computes the x-intercept of this tangent line (which is easily done with elementary algebra). This x-intercept will typically be a better approximation to the function's root than the original guess, and the method can be iterated.\nSuppose f\u00a0: [a, b] \u2192 \u211d is a differentiable function defined on the interval [a, b] with values in the real numbers\u00a0\u211d. The formula for converging on the root can be easily derived. Suppose we have some current approximation xn. Then we can derive the formula for a better approximation, xn + 1 by referring to the diagram on the right. The equation of the tangent line to the curve y = f\u2009(x) at the point x = xn is\nwhere f\u2032 denotes the derivative of the function f.\nThe x-intercept of this line (the value of x such that y = 0) is then used as the next approximation to the root, xn + 1. In other words, setting y to zero and x to xn + 1 gives\nSolving for xn + 1 gives\nWe start the process off with some arbitrary initial value x0. (The closer to the zero, the better. But, in the absence of any intuition about where the zero might lie, a \"guess and check\" method might narrow the possibilities to a reasonably small interval by appealing to the intermediate value theorem.) The method will usually converge, provided this initial guess is close enough to the unknown zero, and that f\u2009\u2032(x0) \u2260 0. Furthermore, for a zero of multiplicity\u00a01, the convergence is at least quadratic (see rate of convergence) in a neighbourhood of the zero, which intuitively means that the number of correct digits roughly at least doubles in every step. More details can be found in the analysis section below.\nThe Householder's methods are similar but have higher order for even faster convergence. However, the extra computations required for each step can slow down the overall performance relative to Newton's method, particularly if f or its derivatives are computationally expensive to evaluate.\nThe name \"Newton's method\" is derived from Isaac Newton's description of a special case of the method in De analysi per aequationes numero terminorum infinitas (written in 1669, published in 1711 by William Jones) and in De metodis fluxionum et serierum infinitarum (written in 1671, translated and published as Method of Fluxions in 1736 by John Colson). However, his method differs substantially from the modern method given above: Newton applies the method only to polynomials. He does not compute the successive approximations xn, but computes a sequence of polynomials, and only at the end arrives at an approximation for the root x. Finally, Newton views the method as purely algebraic and makes no mention of the connection with calculus. Newton may have derived his method from a similar but less precise method by Vieta. The essence of Vieta's method can be found in the work of the Persian mathematician Sharaf al-Din al-Tusi, while his successor Jamsh\u012bd al-K\u0101sh\u012b used a form of Newton's method to solve xP \u2212 N = 0 to find roots of N (Ypma 1995). A special case of Newton's method for calculating square roots was known much earlier and is often called the Babylonian method.\nNewton's method was used by 17th-century Japanese mathematician Seki K\u014dwa to solve single-variable equations, though the connection with calculus was missing.\nNewton's method was first published in 1685 in A Treatise of Algebra both Historical and Practical by John Wallis. In 1690, Joseph Raphson published a simplified description in Analysis aequationum universalis. Raphson again viewed Newton's method purely as an algebraic method and restricted its use to polynomials, but he describes the method in terms of the successive approximations xn instead of the more complicated sequence of polynomials used by Newton. Finally, in 1740, Thomas Simpson described Newton's method as an iterative method for solving general nonlinear equations using calculus, essentially giving the description above. In the same publication, Simpson also gives the generalization to systems of two equations and notes that Newton's method can be used for solving optimization problems by setting the gradient to zero.\nArthur Cayley in 1879 in The Newton-Fourier imaginary problem was the first to notice the difficulties in generalizing Newton's method to complex roots of polynomials with degree greater than 2 and complex initial values. This opened the way to the study of the theory of iterations of rational functions.\nNewton's method is an extremely powerful technique\u2014in general the convergence is quadratic: as the method converges on the root, the difference between the root and the approximation is squared (the number of accurate digits roughly doubles) at each step. However, there are some difficulties with the method.\nNewton's method requires that the derivative be calculated directly. An analytical expression for the derivative may not be easily obtainable and could be expensive to evaluate. In these situations, it may be appropriate to approximate the derivative by using the slope of a line through two nearby points on the function. Using this approximation would result in something like the secant method whose convergence is slower than that of Newton's method.\nIt is important to review the proof of quadratic convergence of Newton's Method before implementing it. Specifically, one should review the assumptions made in the proof. For situations where the method fails to converge, it is because the assumptions made in this proof are not met.\nIf the first derivative is not well behaved in the neighborhood of a particular root, the method may overshoot, and diverge from that root. An example of a function with one root, for which the derivative is not well behaved in the neighborhood of the root, is\nfor which the root will be overshot and the sequence of x will diverge. For a = 1/2, the root will still be overshot, but the sequence will oscillate between two values. For 1/2 < a < 1, the root will still be overshot but the sequence will converge, and for a \u2265 1 the root will not be overshot at all.\nIn some cases, Newton's method can be stabilized by using successive over-relaxation, or the speed of convergence can be increased by using the same method.\nIf a stationary point of the function is encountered, the derivative is zero and the method will terminate due to division by zero.\nA large error in the initial estimate can contribute to non-convergence of the algorithm. To overcome this problem one can often linearise the function that is being optimized using calculus, logs, differentials, or even using evolutionary algorithms, such as the Stochastic Funnel Algorithm. Good initial estimates lie close to the final globally optimal parameter estimate. In nonlinear regression the SSE equation is only \"close to\" parabolic in the region of the final parameter estimates. Initial estimates found here will allow the Newton-Raphson method to quickly converge. It is only here that the Hessian of the SSE is positive and the first derivative of the SSE is close to zero.\nIn a robust implementation of Newton's method, it is common to place limits on the number of iterations, bound the solution to an interval known to contain the root, and combine the method with a more robust root finding method.\nIf the root being sought has multiplicity greater than one, the convergence rate is merely linear (errors reduced by a constant factor at each step) unless special steps are taken. When there are two or more roots that are close together then it may take many iterations before the iterates get close enough to one of them for the quadratic convergence to be apparent. However, if the multiplicity \n\n\n\nm\n\n\n{\\displaystyle m}\n\n of the root is known, one can use the following modified algorithm that preserves the quadratic convergence rate:[1]\nThis is equivalent to using successive over-relaxation. On the other hand, if the multiplicity m of the root is not known, it is possible to estimate \n\n\n\nm\n\n\n{\\displaystyle m}\n\n after carrying out one or two iterations, and then use that value to increase the rate of convergence.\nSuppose that the function f has a zero at \u03b1, i.e., f\u2009(\u03b1) = 0, and f is differentiable in a neighborhood of \u03b1.\nIf f is continuously differentiable and its derivative is nonzero at\u00a0\u03b1, then there exists a neighborhood of \u03b1 such that for all starting values x0 in that neighborhood, the sequence {xn} will converge to \u03b1.[2]\nIf the function is continuously differentiable and its derivative is not 0 at \u03b1 and it has a second derivative at \u03b1 then the convergence is quadratic or faster. If the second derivative is not 0 at \u03b1 then the convergence is merely quadratic. If the third derivative exists and is bounded in a neighborhood of \u03b1, then:\nwhere\nIf the derivative is 0 at \u03b1, then the convergence is usually only linear. Specifically, if f is twice continuously differentiable, f\u2009\u2032(\u03b1) = 0 and f\u2009\u2033(\u03b1) \u2260 0, then there exists a neighborhood of \u03b1 such that for all starting values x0 in that neighborhood, the sequence of iterates converges linearly, with rate log10\u00a02.[3] Alternatively if f\u2009\u2032(\u03b1) = 0 and f\u2009\u2032(x) \u2260 0 for x \u2260 \u03b1, x\u00a0in a neighborhood U of \u03b1, \u03b1 being a zero of multiplicity r, and if f \u2208 Cr(U) then there exists a neighborhood of \u03b1 such that for all starting values x0 in that neighborhood, the sequence of iterates converges linearly.\nHowever, even linear convergence is not guaranteed in pathological situations.\nIn practice these results are local, and the neighborhood of convergence is not known in advance. But there are also some results on global convergence: for instance, given a right neighborhood U+ of \u03b1, if f is twice differentiable in U+ and if f\u2009\u2032 \u2260 0, f \u00b7 f\u2009\u2033 > 0 in U+, then, for each x0 in U+ the sequence xk is monotonically decreasing to \u03b1.\nAccording to Taylor's theorem, any function f\u2009(x) which has a continuous second derivative can be represented by an expansion about a point that is close to a root of f\u2009(x). Suppose this root is \u03b1. Then the expansion of f\u2009(\u03b1) about xn is:\n\n\n\n\nf\n(\n\u03b1\n)\n=\nf\n(\n\nx\n\nn\n\n\n)\n+\n\nf\n\u2032\n\n(\n\nx\n\nn\n\n\n)\n(\n\u03b1\n\u2212\n\nx\n\nn\n\n\n)\n+\n\nR\n\n1\n\n\n\n\n\n{\\displaystyle f(\\alpha )=f(x_{n})+f'(x_{n})(\\alpha -x_{n})+R_{1}\\,}\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n(1)\nwhere the Lagrange form of the Taylor series expansion remainder is\nwhere \u03ben is in between xn and \u03b1.\nSince \u03b1 is the root, (1) becomes:\n\n\n\n\n0\n=\nf\n(\n\u03b1\n)\n=\nf\n(\n\nx\n\nn\n\n\n)\n+\n\nf\n\u2032\n\n(\n\nx\n\nn\n\n\n)\n(\n\u03b1\n\u2212\n\nx\n\nn\n\n\n)\n+\n\n\n\n1\n2\n\n\n\n\nf\n\u2033\n\n(\n\n\u03be\n\nn\n\n\n)\n(\n\u03b1\n\u2212\n\nx\n\nn\n\n\n\n)\n\n2\n\n\n\n\n\n{\\displaystyle 0=f(\\alpha )=f(x_{n})+f'(x_{n})(\\alpha -x_{n})+{\\tfrac {1}{2}}f''(\\xi _{n})(\\alpha -x_{n})^{2}\\,}\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n(2)\nDividing equation (2) by f\u2009\u2032(xn) and rearranging gives\n\n\n\n\n\n\n\nf\n(\n\nx\n\nn\n\n\n)\n\n\n\nf\n\u2032\n\n(\n\nx\n\nn\n\n\n)\n\n\n\n+\n\n(\n\u03b1\n\u2212\n\nx\n\nn\n\n\n)\n\n=\n\n\n\n\u2212\n\nf\n\u2033\n\n(\n\n\u03be\n\nn\n\n\n)\n\n\n2\n\nf\n\u2032\n\n(\n\nx\n\nn\n\n\n)\n\n\n\n\n\n(\n\u03b1\n\u2212\n\nx\n\nn\n\n\n)\n\n\n2\n\n\n\n\n{\\displaystyle {\\frac {f(x_{n})}{f'(x_{n})}}+\\left(\\alpha -x_{n}\\right)={\\frac {-f''(\\xi _{n})}{2f'(x_{n})}}\\left(\\alpha -x_{n}\\right)^{2}}\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n(3)\nRemembering that xn + 1 is defined by\n\n\n\n\n\nx\n\nn\n+\n1\n\n\n=\n\nx\n\nn\n\n\n\u2212\n\n\n\nf\n(\n\nx\n\nn\n\n\n)\n\n\n\nf\n\u2032\n\n(\n\nx\n\nn\n\n\n)\n\n\n\n\n,\n\n\n{\\displaystyle x_{n+1}=x_{n}-{\\frac {f(x_{n})}{f'(x_{n})}}\\,,}\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n(4)\none finds that\nThat is,\n\n\n\n\n\n\u03b5\n\nn\n+\n1\n\n\n=\n\n\n\n\u2212\n\nf\n\u2033\n\n(\n\n\u03be\n\nn\n\n\n)\n\n\n2\n\nf\n\u2032\n\n(\n\nx\n\nn\n\n\n)\n\n\n\n\u22c5\n\n\n\n\u03b5\n\nn\n\n\n\n\n2\n\n\n\n.\n\n\n{\\displaystyle \\varepsilon _{n+1}={\\frac {-f''(\\xi _{n})}{2f'(x_{n})}}\\cdot {\\varepsilon _{n}}^{2}\\,.}\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n(5)\nTaking absolute value of both sides gives\n\n\n\n\n\n|\n\n\n\u03b5\n\nn\n+\n1\n\n\n\n|\n\n=\n\n\n\n|\n\nf\n\u2033\n\n(\n\n\u03be\n\nn\n\n\n)\n|\n\n\n2\n\n|\n\nf\n\u2032\n\n(\n\nx\n\nn\n\n\n)\n|\n\n\n\n\n\u22c5\n\n\n\n\u03b5\n\nn\n\n\n\n\n2\n\n\n\n.\n\n\n{\\displaystyle \\left|{\\varepsilon _{n+1}}\\right|={\\frac {\\left|f''(\\xi _{n})\\right|}{2\\left|f'(x_{n})\\right|}}\\cdot {\\varepsilon _{n}}^{2}\\,.}\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n(6)\nEquation (6) shows that the rate of convergence is quadratic if the following conditions are satisfied:\nThe term sufficiently close in this context means the following:\nFinally, (6) can be expressed in the following way:\nwhere M is the supremum of the variable coefficient of \u03b5n2 on the interval I defined in condition 1, that is:\nThe initial point x0 has to be chosen such that conditions 1 to 3 are satisfied, where the third condition requires that M |\u200a\u03b50\u200a| < 1.\nThe basins of attraction\u2014the regions of the real number line such that within each region iteration from any point leads to one particular root\u2014can be infinite in number and arbitrarily small. For example,[4] for the function f\u2009(x) = x3 \u2212 2x2 \u2212 11x + 12 = (x \u2212 4)(x \u2212 1)(x + 3), the following initial conditions are in successive basins of attraction:\nNewton's method is only guaranteed to converge if certain conditions are satisfied. If the assumptions made in the proof of quadratic convergence are met, the method will converge. For the following subsections, failure of the method to converge indicates that the assumptions made in the proof were not met.\nIn some cases the conditions on the function that are necessary for convergence are satisfied, but the point chosen as the initial point is not in the interval where the method converges. This can happen, for example, if the function whose root is sought approaches zero asymptotically as x goes to \u221e or \u2212\u221e. In such cases a different method, such as bisection, should be used to obtain a better estimate for the zero to use as an initial point.\nConsider the function:\nIt has a maximum at x = 0 and solutions of f\u2009(x) = 0 at x = \u00b11. If we start iterating from the stationary point x0 = 0 (where the derivative is zero), x1 will be undefined, since the tangent at (0,1) is parallel to the x-axis:\nThe same issue occurs if, instead of the starting point, any iteration point is stationary. Even if the derivative is small but not zero, the next iteration will be a far worse approximation.\nFor some functions, some starting points may enter an infinite cycle, preventing convergence. Let\nand take 0 as the starting point. The first iteration produces 1 and the second iteration returns to 0 so the sequence will alternate between the two without converging to a root. In fact, this 2-cycle is stable: there are neighborhoods around 0 and around 1 from which all points iterate asymptotically to the 2-cycle (and hence not to the root of the function). In general, the behavior of the sequence can be very complex (see Newton fractal).The real solution of this equation is 2999823070765000000\u2660\u22121.76929235\u2026.\nIf the function is not continuously differentiable in a neighborhood of the root then it is possible that Newton's method will always diverge and fail, unless the solution is guessed on the first try.\nA simple example of a function where Newton's method diverges is trying to find the cube root of zero. The cube root is continuous and infinitely differentiable, except for x = 0, where its derivative is undefined:\nFor any iteration point xn, the next iteration point will be:\nThe algorithm overshoots the solution and lands on the other side of the y-axis, farther away than it initially was; applying Newton's method actually doubles the distances from the solution at each iteration.\nIn fact, the iterations diverge to infinity for every f\u2009(x) = |\u200ax\u200a|\u03b1, where 0 < \u03b1 < 1/2. In the limiting case of \u03b1 = 1/2 (square root), the iterations will alternate indefinitely between points x0 and \u2212x0, so they do not converge in this case either.\nIf the derivative is not continuous at the root, then convergence may fail to occur in any neighborhood of the root. Consider the function\nIts derivative is:\nWithin any neighborhood of the root, this derivative keeps changing sign as x approaches 0 from the right (or from the left) while f\u2009(x) \u2265 x \u2212 x2 > 0 for 0 < x < 1.\nSo f\u2009(x)/f\u2009\u2032(x) is unbounded near the root, and Newton's method will diverge almost everywhere in any neighborhood of it, even though:\nIn some cases the iterates converge but do not converge as quickly as promised. In these cases simpler methods converge just as quickly as Newton's method.\nIf the first derivative is zero at the root, then convergence will not be quadratic. Let\nthen f\u2009\u2032(x) = 2x and consequently\nSo convergence is not quadratic, even though the function is infinitely differentiable everywhere.\nSimilar problems occur even when the root is only \"nearly\" double. For example, let\nThen the first few iterations starting at x0 = 1 are\nit takes six iterations to reach a point where the convergence appears to be quadratic.\nIf there is no second derivative at the root, then convergence may fail to be quadratic. Let\nThen\nAnd\nexcept when x = 0 where it is undefined. Given xn,\nwhich has approximately 4/3 times as many bits of precision as xn has. This is less than the 2 times as many which would be required for quadratic convergence. So the convergence of Newton's method (in this case) is not quadratic, even though: the function is continuously differentiable everywhere; the derivative is not zero at the root; and f is infinitely differentiable except at the desired root.\nWhen dealing with complex functions, Newton's method can be directly applied to find their zeroes. Each zero has a basin of attraction in the complex plane, the set of all starting values that cause the method to converge to that particular zero. These sets can be mapped as in the image shown. For many complex functions, the boundaries of the basins of attraction are fractals.\nIn some cases there are regions in the complex plane which are not in any of these basins of attraction, meaning the iterates do not converge. For example,[5] if one uses a real initial condition to seek a root of x2 + 1, all subsequent iterates will be real numbers and so the iterations cannot converge to either root, since both roots are non-real. In this case almost all real initial conditions lead to chaotic behavior, while some initial conditions iterate either to infinity or to repeating cycles of any finite length.\nCurt McMullen has shown that for any possible purely iterative algorithm similar to Newton's Method, the algorithm will diverge on some open regions of the complex plane when applied to some polynomial of degree 4 or higher. However, McMullen gave a generally convergent algorithm for polynomials of degree 3.[6]\nOne may also use Newton's method to solve systems of k (nonlinear) equations, which amounts to finding the zeroes of continuously differentiable functions F\u00a0: \u211dk \u2192 \u211dk. In the formulation given above, one then has to left multiply with the inverse of the k \u00d7 k Jacobian matrix JF(xn) instead of dividing by f\u2009\u2032(xn).\nRather than actually computing the inverse of this matrix, one can save time by solving the system of linear equations\nfor the unknown xn + 1 \u2212 xn.\nThe k-dimensional variant of Newton's method can be used to solve systems of greater than k (nonlinear) equations as well if the algorithm uses the generalized inverse of the non-square Jacobian matrix J+ = (JTJ)\u22121JT instead of the inverse of J. If the nonlinear system has no solution, the method attempts to find a solution in the non-linear least squares sense. See Gauss\u2013Newton algorithm for more information.\nAnother generalization is Newton's method to find a root of a functional F defined in a Banach space. In this case the formulation is\nwhere F\u2032(Xn) is the Fr\u00e9chet derivative computed at Xn. One needs the Fr\u00e9chet derivative to be boundedly invertible at each Xn in order for the method to be applicable. A condition for existence of and convergence to a root is given by the Newton\u2013Kantorovich theorem.\nIn p-adic analysis, the standard method to show a polynomial equation in one variable has a p-adic root is Hensel's lemma, which uses the recursion from Newton's method on the p-adic numbers. Because of the more stable behavior of addition and multiplication in the p-adic numbers compared to the real numbers (specifically, the unit ball in the p-adics is a ring), convergence in Hensel's lemma can be guaranteed under much simpler hypotheses than in the classical Newton's method on the real line.\nThe Newton\u2013Fourier method is Joseph Fourier's extension of Newton's method to provide bounds on the absolute error of the root approximation, while still providing quadratic convergence.\nAssume that f\u2009(x) is twice continuously differentiable on [a, b] and that f contains a root in this interval. Assume that f\u2009\u2032(x), f\u2009\u2033(x) \u2260 0 on this interval (this is the case for instance if f\u2009(a) < 0, f\u2009(b) > 0, and f\u2009\u2032(x) > 0, and f\u2009\u2033(x) > 0 on this interval). This guarantees that there is a unique root on this interval, call it \u03b1. If it is concave down instead of concave up then replace f\u2009(x) by \u2212f\u2009(x) since they have the same roots.\nLet x0 = b be the right endpoint of the interval and let z0 = a be the left endpoint of the interval. Given xn, define\nwhich is just Newton's method as before. Then define\nwhere the denominator is f\u2009\u2032(xn) and not f\u2009\u2032(zn). The iterations xn will be strictly decreasing to the root while the iterations zn will be strictly increasing to the root. Also,\nso that distance between xn and zn decreases quadratically.\nWhen the Jacobian is unavailable or too expensive to compute at every iteration, a quasi-Newton method can be used.\nNewton's method can be used to find a minimum or maximum of a function. The derivative is zero at a minimum or maximum, so minima and maxima can be found by applying Newton's method to the derivative. The iteration becomes:\nAn important application is Newton\u2013Raphson division, which can be used to quickly find the reciprocal of a number, using only multiplication and subtraction.\nFinding the reciprocal of a amounts to finding the root of the function\nNewton's iteration is\nTherefore, Newton's iteration needs only two multiplications and one subtraction.\nThis method is also very efficient to compute the multiplicative inverse of a power series.\nMany transcendental equations can be solved using Newton's method. Given the equation\nwith g(x) and/or h(x) a transcendental function, one writes\nThe values of x that solves the original equation are then the roots of f\u2009(x), which may be found via Newton's method.\nConsider the problem of finding the square root of a number. Newton's method is one of many methods of computing square roots.\nFor example, if one wishes to find the square root of 612, this is equivalent to finding the solution to\nThe function to use in Newton's method is then\nwith derivative\nWith an initial guess of 10, the sequence given by Newton's method is\nwhere the correct digits are underlined. With only a few iterations one can obtain a solution accurate to many decimal places.\nConsider the problem of finding the positive number x with cos x = x3. We can rephrase that as finding the zero of f\u2009(x) = cos(x) \u2212 x3. We have f\u2009\u2032(x) = \u2212sin(x) \u2212 3x2. Since cos(x) \u2264 1 for all x and x3 > 1 for x > 1, we know that our solution lies between 0 and 1. We try a starting value of x0 = 0.5. (Note that a starting value of 0 will lead to an undefined result, showing the importance of using a starting point that is close to the solution.)\nThe correct digits are underlined in the above example. In particular, x6 is correct to 12 decimal places. We see that the number of correct digits after the decimal point increases from 2 (for x3) to 5 and 10, illustrating the quadratic convergence.\nThe following is an example of using the Newton's Method to help find a root of a function f which has derivative fprime.\nThe initial guess will be x0 = 1 and the function will be f\u2009(x) = x2 \u2212 2 so that f\u2009\u2032(x) = 2x.\nEach new iterative of Newton's method will be denoted by x1. We will check during the computation whether the denominator (yprime) becomes too small (smaller than epsilon), which would be the case if f\u2009\u2032(xn) \u2248 0, since otherwise a large amount of error could be introduced.", 
    "dbpedia_url": "http://dbpedia.org/resource/Newton's_method", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Newton's_method\n"
}
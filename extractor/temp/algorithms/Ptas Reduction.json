{
    "about": "In computational complexity theory, a PTAS reduction is an approximation-preserving reduction that is often used to perform reductions between solutions to optimization problems. It preserves the property that a problem has a polynomial time approximation scheme (PTAS) and is used to define completeness for certain classes of optimization problems such as APX. Notationally, if there is a PTAS reduction from a problem A to a problem B, we write \n\n\n\n\nA\n\n\n\u2264\n\nPTAS\n\n\n\nB\n\n\n\n{\\displaystyle {\\text{A}}\\leq _{\\text{PTAS}}{\\text{B}}}\n\n.", 
    "name": "Ptas Reduction", 
    "classification": "Approximation Algorithms", 
    "full_text": "In computational complexity theory, a PTAS reduction is an approximation-preserving reduction that is often used to perform reductions between solutions to optimization problems. It preserves the property that a problem has a polynomial time approximation scheme (PTAS) and is used to define completeness for certain classes of optimization problems such as APX. Notationally, if there is a PTAS reduction from a problem A to a problem B, we write \n\n\n\n\nA\n\n\n\u2264\n\nPTAS\n\n\n\nB\n\n\n\n{\\displaystyle {\\text{A}}\\leq _{\\text{PTAS}}{\\text{B}}}\n\n.\nWith ordinary polynomial-time many-one reductions, if we can describe a reduction from a problem A to a problem B, then any polynomial-time solution for B can be composed with that reduction to obtain a polynomial-time solution for the problem A. Similarly, our goal in defining PTAS reductions is so that given a PTAS reduction from an optimization problem A to a problem B, a PTAS for B can be composed with the reduction to obtain a PTAS for the problem A.\nFormally, we define a PTAS reduction from A to B using three polynomial-time computable functions, f, g, and \u03b1, with the following properties:\nFrom the definition it is straightforward to show that:\nL-reductions imply PTAS reductions. As a result, one may show the existence of a PTAS reduction via a L-reduction instead.[1]\nPTAS reductions are used to define completeness in APX, the class of optimization problems with constant-factor approximation algorithms.\n", 
    "dbpedia_url": "http://dbpedia.org/resource/PTAS_reduction", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/PTAS_reduction\n"
}
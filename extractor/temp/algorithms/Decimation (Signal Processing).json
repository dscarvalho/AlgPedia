{
    "about": "In digital signal processing, decimation is the process of reducing the sampling rate of a signal.[1][2][3] Complementary to interpolation, which increases sampling rate, it is a specific case of sample rate conversion in a multi-rate digital signal processing system. Decimation utilises filtering to mitigate aliasing distortion, which can occur when simply downsampling a signal.[3] A system component that performs decimation is called a decimator.[2]", 
    "name": "Decimation (Signal Processing)", 
    "classification": "Digital Signal Processing", 
    "full_text": "In digital signal processing, decimation is the process of reducing the sampling rate of a signal.[1][2][3] Complementary to interpolation, which increases sampling rate, it is a specific case of sample rate conversion in a multi-rate digital signal processing system. Decimation utilises filtering to mitigate aliasing distortion, which can occur when simply downsampling a signal.[3] A system component that performs decimation is called a decimator.[2]\n\n\nDecimation reduces the data rate or the size of the data. The decimation factor is usually an integer or a rational fraction greater than one. This factor multiplies the sampling time or, equivalently, divides the sampling rate. For example, if 16-bit compact disc audio (sampled at 44,100\u00a0Hz) is decimated to 22,050\u00a0Hz, the audio is said to be decimated by a factor of 2. The bit rate is also reduced in half, from 1,411,200 bit/s to 705,600 bit/s, assuming that each sample retains its bit depth of 16 bits.\nDecimation by an integer factor, M, can be explained as a 2-step process, with an equivalent implementation that is more efficient:\nDownsampling alone causes high-frequency signal components to be misinterpreted by subsequent users of the data, which is a form of distortion called aliasing. The first step, if necessary, is to suppress aliasing to an acceptable level. In this application, the filter is called an anti-aliasing filter, and its design is discussed below. Also see undersampling for information about downsampling bandpass functions and signals.\nWhen the anti-aliasing filter is an IIR design, it relies on feedback from output to input, prior to the downsampling step. With FIR filtering, it is an easy matter to compute only every Mth output. The calculation performed by a decimating FIR filter for the nth output sample is a dot product:\nwhere the h[\u2022] sequence is the impulse response, and K is its length.\u00a0 x[\u2022] represents the input sequence being downsampled. In a general purpose processor, after computing y[n], the easiest way to compute y[n+1] is to advance the starting index in the x[\u2022] array by M, and recompute the dot product. In the case M=2, h[\u2022] can be designed as a half-band filter, where almost half of the coefficients are zero and need not be included in the dot products.\nImpulse response coefficients taken at intervals of M form a subsequence, and there are M such subsequences (phases) multiplexed together. The dot product is the sum of the dot products of each subsequence with the corresponding samples of the x[\u2022] sequence. Furthermore, because of downsampling by M, the stream of x[\u2022] samples involved in any one of the M dot products is never involved in the other dot products. Thus M low-order FIR filters are each filtering one of M multiplexed phases of the input stream, and the M outputs are being summed. This viewpoint offers a different implementation that might be advantageous in a multi-processor architecture. In other words, the input stream is demultiplexed and sent through a bank of M filters whose outputs are summed. When implemented that way, it is called a polyphase filter.\nFor completeness, we now mention that a possible, but unlikely, implementation of each phase is to replace the coefficients of the other phases with zeros in a copy of the h[\u2022] array, process the original x[\u2022] sequence at the input rate, and decimate the output by a factor of M. The equivalence of this inefficient method and the implementation described above is known as the first Noble identity.[4]\nThe requirements of the anti-aliasing filter can be deduced from any of the 3 pairs of graphs in Fig. 1. Note that all 3 pairs are identical, except for the units of the abscissa variables. The upper graph of each pair is an example of the periodic frequency distribution of a sampled function, x(t), with Fourier transform, X(f). The lower graph is the new distribution that results when x(t) is sampled 3 times slower, or (equivalently) when the original sample sequence is decimated by a factor of M=3. In all 3 cases, the condition that ensures the copies of X(f) don't overlap each other is the same: \n\n\n\nB\n<\n\n\n\n1\nM\n\n\n\n\u22c5\n\n\n\n1\n\n2\nT\n\n\n\n\n,\n\n\n{\\displaystyle B<{\\tfrac {1}{M}}\\cdot {\\tfrac {1}{2T}},}\n\n\u00a0 where T is the interval between samples, 1/T is the sample-rate, and 1/2T is the Nyquist frequency. The anti-aliasing filter that can ensure the condition is met has a cutoff frequency less than \n\n\n\n\n\n\n1\nM\n\n\n\n\n\n{\\displaystyle {\\tfrac {1}{M}}}\n\n times the Nyquist frequency.[note 1]\nThe abscissa of the top pair of graphs represents the discrete-time Fourier transform (DTFT), which is a Fourier series representation of a periodic summation of X(f):\n\n\n\n\n\n\n\n\n\n\u2211\n\nn\n=\n\u2212\n\u221e\n\n\n\u221e\n\n\n\n\n\n\nx\n(\nn\nT\n)\n\n\u23de\n\n\n\nx\n[\nn\n]\n\n\n\u00a0\n\ne\n\n\u2212\ni\n2\n\u03c0\nf\nn\nT\n\n\n\n\u23df\n\n\n\nDTFT\n\n\n=\n\n\n1\nT\n\n\n\n\u2211\n\nk\n=\n\u2212\n\u221e\n\n\n\u221e\n\n\nX\n(\nf\n\u2212\nk\n\n/\n\nT\n)\n.\n\n\n{\\displaystyle \\underbrace {\\sum _{n=-\\infty }^{\\infty }\\overbrace {x(nT)} ^{x[n]}\\ e^{-i2\\pi fnT}} _{\\text{DTFT}}={\\frac {1}{T}}\\sum _{k=-\\infty }^{\\infty }X(f-k/T).}\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n(Eq.1)\nWhen T has units of seconds, \n\n\n\n\nf\n\n\n\n{\\displaystyle \\scriptstyle f}\n\n has units of hertz. Replacing T with MT in the formulas above gives the DTFT of the decimated sequence, x[nM]:\nThe periodic summation has been reduced in amplitude and periodicity by a factor of M, as depicted in the second graph of Fig. 1.\u00a0 Aliasing occurs when adjacent copies of X(f) overlap. The purpose of the anti-aliasing filter is to ensure that the reduced periodicity does not create overlap.\nIn the middle pair of graphs, the frequency variable, \n\n\n\n\nf\n,\n\n\n\n{\\displaystyle \\scriptstyle f,}\n\n has been replaced by normalized frequency, which creates a periodicity of 1 and a Nyquist frequency of \u00bd. [note 2]\u00a0 A common practice in filter design programs is to assume those values and request only the corresponding cutoff frequency in the same units. In other words, the cutoff frequency \n\n\n\n\nB\n\nm\na\nx\n\n\n=\n\n\n\n1\nM\n\n\n\n\u22c5\n\n\n\n1\n\n2\nT\n\n\n\n\n,\n\n\n{\\displaystyle B_{max}={\\tfrac {1}{M}}\\cdot {\\tfrac {1}{2T}},}\n\n is normalized to \n\n\n\nT\n\nB\n\nm\na\nx\n\n\n=\n\n\n\n1\nM\n\n\n\n\u22c5\n\n\n\n1\n2\n\n\n\n=\n\n\n\n0.5\nM\n\n\n\n.\n\n\n{\\displaystyle TB_{max}={\\tfrac {1}{M}}\\cdot {\\tfrac {1}{2}}={\\tfrac {0.5}{M}}.}\n\n \u00a0 The units of this quantity are (seconds/sample)\u00d7(cycles/second) = cycles/sample.\nThe bottom pair of graphs represent the Z-transforms of the original sequence and the decimated sequence, constrained to values of complex-variable, z, of the form \n\n\n\nz\n=\n\ne\n\ni\n\u03c9\n\n\n.\n\n\n{\\displaystyle z=e^{i\\omega }.}\n\n\u00a0 Then the transform of the x[n] sequence has the form of a Fourier series. By comparison with Eq.1, we deduce:\nwhich is depicted by the fifth graph in Fig. 1.\u00a0 Similarly, the sixth graph depicts:\nLet M/L denote the decimation factor, where: M, L \u2208 \u2124; M\u00a0>\u00a0L.\nInterpolation requires a lowpass filter after increasing the data rate, and decimation requires a lowpass filter before decimation. Therefore, both operations can be accomplished by a single filter with the lower of the two cutoff frequencies. For the M\u00a0>\u00a0L case, the anti-aliasing filter cutoff, \u00a0\n\n\n\n\n\n\n0.5\nM\n\n\n\n\n\n{\\displaystyle {\\tfrac {0.5}{M}}}\n\n cycles per intermediate sample, is the lower frequency.\nTechniques for decimation (and sample-rate conversion in general) by factor R \u2208 \u211d+ include polynomial interpolation and the Farrow structure.[5]", 
    "dbpedia_url": "http://dbpedia.org/resource/Decimation_(signal_processing)", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Decimation_(signal_processing)\n"
}
{
    "about": "In coding theory, concatenated codes form a class of error-correcting codes that are derived by combining an inner code and an outer code. They were conceived in 1966 by Dave Forney as a solution to the problem of finding a code that has both exponentially decreasing error probability with increasing block length and polynomial-time decoding complexity.[1] Concatenated codes became widely used in space communications in the 1970s.", 
    "name": "Concatenated Error Correction Code", 
    "classification": "Error Detection And Correction", 
    "full_text": "In coding theory, concatenated codes form a class of error-correcting codes that are derived by combining an inner code and an outer code. They were conceived in 1966 by Dave Forney as a solution to the problem of finding a code that has both exponentially decreasing error probability with increasing block length and polynomial-time decoding complexity.[1] Concatenated codes became widely used in space communications in the 1970s.\n\n\nThe field of channel coding is concerned with sending a stream of data at the highest possible rate over a given communications channel, and then decoding the original data reliably at the receiver, using encoding and decoding algorithms that are feasible to implement in a given technology.\nShannon's channel coding theorem shows that over many common channels there exist channel coding schemes that are able to transmit data reliably at all rates \n\n\n\nR\n\n\n{\\displaystyle R}\n\n less than a certain threshold \n\n\n\nC\n\n\n{\\displaystyle C}\n\n, called the channel capacity of the given channel. In fact, the probability of decoding error can be made to decrease exponentially as the block length \n\n\n\nN\n\n\n{\\displaystyle N}\n\n of the coding scheme goes to infinity. However, the complexity of a naive optimum decoding scheme that simply computes the likelihood of every possible transmitted codeword increases exponentially with \n\n\n\nN\n\n\n{\\displaystyle N}\n\n, so such an optimum decoder rapidly becomes infeasible.\nIn his doctoral thesis, Dave Forney showed that concatenated codes could be used to achieve exponentially decreasing error probabilities at all data rates less than capacity, with decoding complexity that increases only polynomially with the code block length.\nLet Cin be a [n, k, d] code, that is, a block code of length n, dimension k, minimum Hamming distance d, and rate r = k/n, over an alphabet A:\nLet Cout be a [N, K, D] code over an alphabet B with |B| = |A|k symbols:\nThe inner code Cin takes one of |A|k = |B| possible inputs, encodes into an n-tuple over A, transmits, and decodes into one of |B| possible outputs. We regard this as a (super) channel which can transmit one symbol from the alphabet B. We use this channel N times to transmit each of the N symbols in a codeword of Cout. The concatenation of Cout (as outer code) with Cin (as inner code), denoted Cout\u2218Cin, is thus a code of length Nn over the alphabet A:[1]\nIt maps each input message m = (m1, m2, ..., mK) to a codeword (Cin(m'1), Cin(m'2), ..., Cin(m'N)), where (m'1, m'2, ..., m'N) = Cout(m1, m2, ..., mK).\nThe key insight in this approach is that if Cin is decoded using a maximum-likelihood approach (thus showing an exponentially decreasing error probability with increasing length), and Cout is a code with length N = 2nr that can be decoded in polynomial time of N, then the concatenated code can be decoded in polynomial time of its combined length n2nr = O(N\u22c5log(N)) and shows an exponentially decreasing error probability, even if Cin has exponential decoding complexity.[1] This is discussed in more detail in section Decoding concatenated codes.\nIn a generalization of above concatenation, there are N possible inner codes Cin,i and the i-th symbol in a codeword of Cout is transmitted across the inner channel using the i-th inner code. The Justesen codes are examples of generalized concatenated codes, where the outer code is a Reed\u2013Solomon code.\n1. The distance of the concatenated code Cout\u2218Cin is at least dD, that is, it is a [nN, kK, D'] code with D' \u2265 dD.\nProof: Consider two different messages m1 \u2260 m2 \u2208 BK. Let \u0394 denote the distance between two codewords. Then\nThus, there are at least D positions in which the sequence of N symbols of the codewords Cout(m1) and Cout(m2) differ. For these positions, denoted i, we have\nConsequently, there are at least d\u22c5D positions in the sequence of n\u22c5N symbols taken from the alphabet A in which the two codewords differ, and hence\n2. If Cout and Cin are linear block codes, then Cout\u2218Cin is also a linear block code.\nThis property can be easily shown based on the idea of defining a generator matrix for the concatenated code in terms of the generator matrices of Cout and Cin.\nA natural concept for a decoding algorithm for concatenated codes is to \ufb01rst decode the inner code and then the outer code. For the algorithm to be practical it must be polynomial-time in the final block length. Consider that there is a polynomial-time unique decoding algorithm for the outer code. Now we have to find a polynomial-time decoding algorithm for the inner code. It is understood that polynomial running time here means that running time is polynomial in the final block length. The main idea is that if the inner block length is selected to be logarithmic in the size of the outer code then the decoding algorithm for the inner code may run in exponential time of the inner block length, and we can thus use an exponential-time but optimal maximum likelihood decoder (MLD) for the inner code.\nIn detail, let the input to the decoder be the vector y = (y1, ..., yN) \u2208 (An)N. Then the decoding algorithm is a two-step process:\nNow, the time complexity of the first step is O(N\u22c5exp(n)), where n = O(log(N)) is the inner block length. In other words, it is NO(1) (i.e., polynomial-time) in terms of the outer block length N. As the outer decoding algorithm in step two is assumed to run in polynomial time the complexity of the overall decoding algorithm is polynomial-time as well.\nThe decoding algorithm described above can be used to correct all errors up to less than dD/4 in number. Using minimum distance decoding, the outer decoder can correct all inputs y' with less than D/2 symbols y'i in error. Similarly, the inner code can reliably correct an input yi if less than d/2 inner symbols are erroneous. Thus, for an outer symbol y'i to be incorrect after inner decoding at least d/2 inner symbols must have been in error, and for the outer code to fail this must have happened for at least D/2 outer symbols. Consequently, the total number of inner symbols that must be received incorrectly for the concatenated code to fail must be at least d/2\u22c5D/2 = dD/4.\nThe algorithm also works if the inner codes are different, e.g., for Justesen codes. The generalized minimum distance algorithm, developed by Forney, can be used to correct up to dD/2 errors.[2] It uses erasure information from the inner code to improve performance of the outer code, and was the first example of an algorithm using soft-decision decoding.[3][4]\nAlthough a simple concatenation scheme was implemented already for the 1971 Mariner Mars orbiter mission,[5] concatenated codes were starting to be regularly used for deep space communication with the Voyager program, which launched two space probes in 1977.[6] Since then, concatenated codes became the workhorse for efficient error correction coding, and stayed so at least until the invention of turbo codes and LDPC codes.[5][6]\nTypically, the inner code is not a block code but a soft-decision convolutional Viterbi-decoded code with a short constraint length.[7] For the outer code, a longer hard-decision block code, frequently a Reed-Solomon code with eight-bit symbols, is used.[1][5] The larger symbol size makes the outer code more robust to error bursts that can occur due to channel impairments, and also because erroneous output of the convolutional code itself is bursty.[1][5] An interleaving layer is usually added between the two codes to spread error bursts across a wider range.[5]\nThe combination of an inner Viterbi convolutional code with an outer Reed\u2013Solomon code (known as an RSV code) was first used in Voyager 2,[5][8] and it became a popular construction both within and outside of the space sector. It is still notably used today for satellite communications, such as the DVB-S digital television broadcast standard.[9]\nIn a looser sense, any (serial) combination of two or more codes may be referred to as a concatenated code. For example, within the DVB-S2 standard, a highly efficient LDPC code is combined with an algebraic outer code in order to remove any resilient errors left over from the inner LDPC code due to its inherent error floor.[10]\nA simple concatenation scheme is also used on the compact disc (CD), where an interleaving layer between two Reed\u2013Solomon codes of different sizes spreads errors across various blocks.\nThe description above is given for what is now called a serially concatenated code. Turbo codes, as described first in 1993, implemented a parallel concatenation of two convolutional codes, with an interleaver between the two codes and an iterative decoder that passes information forth and back between the codes.[6] This design has a better performance than any previously conceived concatenated codes.\nHowever, a key aspect of turbo codes is their iterated decoding approach. Iterated decoding is now also applied to serial concatenations in order to achieve higher coding gains, such as within serially concatenated convolutional codes (SCCCs). An early form of iterated decoding was implemented with two to five iterations in the \"Galileo code\" of the Galileo space probe.[5]", 
    "dbpedia_url": "http://dbpedia.org/resource/Concatenated_error_correction_code", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Concatenated_error_correction_code\n"
}
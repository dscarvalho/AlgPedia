{
    "about": "A Combined Linear Congruential Generator (CLCG) is a pseudo-random number generator algorithm based on combining two or more linear congruential generators (LCG). A traditional LCG has a period which is inadequate for complex system simulation.[1] By combining two or more LCGs, random numbers with a longer period and better statistical properties can be created.[1] The algorithm is defined as:[2]", 
    "name": "Combined Linear Congruential Generator", 
    "classification": "Pseudorandom Number Generators", 
    "full_text": "A Combined Linear Congruential Generator (CLCG) is a pseudo-random number generator algorithm based on combining two or more linear congruential generators (LCG). A traditional LCG has a period which is inadequate for complex system simulation.[1] By combining two or more LCGs, random numbers with a longer period and better statistical properties can be created.[1] The algorithm is defined as:[2]\nwhere:\nwith:\nwhere \n\n\n\n\nR\n\ni\n\n\n\n\n{\\displaystyle R_{i}}\n\n is a uniformly distributed random number between 0 and 1.\n\n\nIf Wi,1, Wi,2, ..., Wi,k are any independent, discrete, random-variables and one of them is uniformly distributed from 0 to m1\u00a0\u2212\u00a02, then Zi is uniformly distributed between 0 and m1\u00a0\u2212\u00a02, where:[2]\nLet Xi,1, Xi,2, ..., Xi,k be outputs from k LCGs. If Wi,j is defined as Xi,j\u00a0\u2212\u00a01, then Wi,j will be approximately uniformly distributed from 0 to mj\u00a0\u2212\u00a01.[2] The coefficient \"(\u22121)j\u22121\" implicitly performs the subtraction of one from Xi,j.[1]\nThe CLCG provides an efficient way to calculate pseudo-random numbers. The LCG algorithm is computationally inexpensive to use.[3] The results of multiple LCG algorithms are combined through the CLCG algorithm to create pseudo-random numbers with a longer period than is achievable with the LCG method by itself.[3]\nThe period of a CLCG is dependent on the seed value used to initiate the algorithm. The maximum period of a CLCG is defined by the function:[1]\nThe following is an example algorithm designed for use in 32 bit computers:[2]\nLCGs are used with the following properties:\nThe CLCG algorithm is set up as follows:\n1. The seed for the first LCG, \n\n\n\n\nY\n\n0\n,\n1\n\n\n\n\n{\\displaystyle Y_{0,1}}\n\n, should be selected in the range of [1, 2147483562].\n2. The two LCGs are evaluated as follows:\n3. The CLCG equation is solved as shown below:\n4. Calculate the random number:\n5. Increment the counter (i=i+1) then return to step 2 and repeat.\nThe maximum period of the two LCGs used is calculated using the formula:.[1]\nThis equates to 2.1x109 for the two LCGs used.\nThis CLCG shown in this example has a maximum period of:\nThis represents a tremendous improvement over the period of the individual LCGs. It can be seen that the combined method increases the period by 9 orders of magnitude.\nSurprisingly the period of this CLCG may not be sufficient for all applications:.[1] Other algorithms using the CLCG method have been used to create pseudo-random number generators with periods as long as 3x1057.[4][5][6]", 
    "dbpedia_url": "http://dbpedia.org/resource/Combined_Linear_Congruential_Generator", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Combined_Linear_Congruential_Generator\n"
}
{
    "about": "An expectiminimax tree is a specialized variation of a minimax game tree for use in artificial intelligence systems that play two-player zero-sum games such as backgammon, in which the outcome depends on a combination of the player's skill and chance elements such as dice rolls. In addition to \"min\" and \"max\" nodes of the traditional minimax tree, this variant has \"chance\" (\"move by nature\") nodes, which take the expected value of a random event occurring.[1] In game theory terms, an expectiminimax tree is the game tree of an extensive-form game of perfect, but incomplete information.", 
    "name": "Expectiminimax Tree", 
    "classification": "Search Algorithms", 
    "full_text": "An expectiminimax tree is a specialized variation of a minimax game tree for use in artificial intelligence systems that play two-player zero-sum games such as backgammon, in which the outcome depends on a combination of the player's skill and chance elements such as dice rolls. In addition to \"min\" and \"max\" nodes of the traditional minimax tree, this variant has \"chance\" (\"move by nature\") nodes, which take the expected value of a random event occurring.[1] In game theory terms, an expectiminimax tree is the game tree of an extensive-form game of perfect, but incomplete information.\nIn the traditional minimax method, the levels of the tree alternate from max to min until the depth limit of the tree has been reached. In an expectiminimax tree, the \"chance\" nodes are interleaved with the max and min nodes. Instead of taking the max or min of the utility values of their children, chance nodes take a weighted average, with the weight being the probability that that child is reached.[1]\nThe interleaving depends on the game. Each \"turn\" of the game is evaluated as a \"max\" node (representing the AI player's turn), a \"min\" node (representing a potentially-optimal opponent's turn), or a \"chance\" node (representing a random effect or player).[1]\nFor example, consider a game in which each round consists of a single dice throw, and then decisions made by first the AI player, and then another intelligent opponent. The order of nodes in this game would alternate between \"chance\", \"max\" and then \"min\".[1]\nThe expectiminimax algorithm is a variant of the minimax algorithm and was first proposed by Donald Michie in 1966.[2] Its pseudocode is given below.\nNote that for random nodes, there must be a known probability of reaching each child. (For most games of chance, child nodes will be equally-weighted, which means the return value can simply be the average of all child values.)", 
    "dbpedia_url": "http://dbpedia.org/resource/Expectiminimax_tree", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Expectiminimax_tree\n"
}
{
    "about": "A PLL multibit or multibit PLL is a phase-locked loop (PLL) which achieves improved performance compared to a unibit PLL by using more bits. Unibit PLLs use only the most significant bit (MSB) of each counter's output bus to measure the phase, while multibit PLLs use more bits.[1] PLLs are an essential component in telecommunications.", 
    "name": "Pll Multibit", 
    "classification": "Digital Signal Processing", 
    "full_text": "A PLL multibit or multibit PLL is a phase-locked loop (PLL) which achieves improved performance compared to a unibit PLL by using more bits. Unibit PLLs use only the most significant bit (MSB) of each counter's output bus to measure the phase, while multibit PLLs use more bits.[1] PLLs are an essential component in telecommunications.\nMultibit PLLs achieve improved efficiency and performance: better utilization of the frequency spectrum, to serve more users at a higher quality of service (QoS), reduced RF transmit power, and reduced power consumption in cellular phones and other wireless devices.\n\n\nA phase-locked loop is an electronic component or system comprising a closed loop for controlling the phase of an oscillator while comparing it with the phase of an input or reference signal. An indirect frequency synthesizer uses a PLL. In an all-digital PLL, a voltage-controlled oscillator (VCO) is controlled using a digital, rather than analog, control signal. The phase detector gives a signal proportional to the phase difference between two signals; in a PLL, one signal is the reference, and the other is the output of the controlled oscillator (or a divider driven by the oscillator).\nIn a unibit phase-locked loop, the phase is measured using only one bit of the reference and output counters, the most significant bit (MSB). In a multibit phase-locked loop, the phase is measured using more than one bit of the reference and output counters, usually including the most significant bit.\nIn unibit PLLs, the output frequency is defined by the input frequency and the modulo count of the two counters. In each counter, only the most significant bit (MSB) is used. The other output lines of the counters are ignored; this is wasted information.\nA PLL includes a phase detector, filter and oscillator connected in a closed loop, so the oscillator frequency follows (equals) the input frequency. Although the average output frequency equals the input frequency, the oscillator's frequency fluctuates or vibrates about that average value. The closed loop operates to correct such frequency deviations; higher performance PLL reduces these fluctuations to lower values, however these deviations can never be stopped. See Control theory. Phase noise, spurious emission, and jitter are results of the above phenomena.\nFrequency settling time is the time it takes the PLL to hop to another frequency. Frequency hopping is used in GSM, and still more in modern systems. In CDMA, frequency hopping achieves better performance than phase coding.\nFine frequency resolution is the capability of a PLL to generate closely spaced frequencies. For example, a cellular network may require a mobile phone to set its frequency at any of a plurality of values, spaced 30\u00a0kHz or 10\u00a0kHz.\nThe performance envelope of a PLL defines the interrelation between the above essential criteria of performance - for example improving the frequency resolution will result in a slower PLL and higher phase noise, etc.\nThe PLL Multibit expands the performance envelope of the PLL - it enables to achieve faster settling time together with fine frequency resolution and with lower phase noise.\nAs one progresses from the MSB toward the least significant bit (LSB), the frequency increases. For a binary counter, each next bit is at twice the frequency of the previous one. For modulo counters, the relationship is more complicated.\nOnly the MSB of the two counters are at the same frequency. The other bits in one counter have different frequencies from those in the other counter.\nAll the bits at the output of one counter, together, represent a digital bus. Thus, in a PLL frequency synthesizer there are two buses, one for the reference counter, the other for the output (or VCO) counter. In a uni-bit PLL, of the two digital buses, only one bit (line) of each is used. All the rest of the information is lost.\nPLL design is an interdisciplinary task, difficult even for experts in PLLs. This - for the Unibit PLL, which is simpler than the Multibit PLL. The design should take into account:[2][3][4][5][6][7]\nThe above PLL uses more of the bits in the two counters. There is a difficult problem, of comparing signals at different frequencies, in two digital buses which count to a different final value.\nImproved performance is possible by using the faster bits of the counters, taking into account the additional available information.\nThe operation of the PLL is further disrupted by overflow in the counters. This effect is only relevant in multibit PLLs; for Unibit PLL, there is only the one-bit signal MSB, therefore no overflow is possible.\nThe additional degree of freedom in Multibit PLLs allows to adapt each PLL to specific requirements. This can be effectively implemented with programmable logic devices (PLD), for example those manufactured by Altera Corp.[7] Altera provides both digital components and advanced design tools for using and programming the components.\nEarly multibit PLLs used a microprocessor, a microcontroller or DSP to close the loop in a smart implementation.[8][9][10][11][12][13][14]\nA multibit PLL offers fine frequency resolution and fast frequency hopping, together with lower phase noise and lower power consumption. It thus enhances the overall performance envelope of the PLL.\nThe loop bandwidth can be optimized for phase noise performance and/or frequency settling speed; it depends less on the frequency resolution.\nImproving the PLL performance can make better use of the frequency spectrum and reduce transmit power. And indeed, PLL performance is being constantly improved.[1]", 
    "dbpedia_url": "http://dbpedia.org/resource/PLL_multibit", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/PLL_multibit\n"
}
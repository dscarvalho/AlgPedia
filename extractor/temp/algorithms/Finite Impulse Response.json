{
    "about": "In signal processing, a finite impulse response (FIR) filter is a filter whose impulse response (or response to any finite length input) is of finite duration, because it settles to zero in finite time. This is in contrast to infinite impulse response (IIR) filters, which may have internal feedback and may continue to respond indefinitely (usually decaying).", 
    "name": "Finite Impulse Response", 
    "classification": "Digital Signal Processing", 
    "full_text": "In signal processing, a finite impulse response (FIR) filter is a filter whose impulse response (or response to any finite length input) is of finite duration, because it settles to zero in finite time. This is in contrast to infinite impulse response (IIR) filters, which may have internal feedback and may continue to respond indefinitely (usually decaying).\nThe impulse response (that is, the output in response to a Kronecker delta input) of an Nth-order discrete-time FIR filter lasts exactly N\u00a0+\u00a01 samples (from first nonzero element through last nonzero element) before it then settles to zero.\nFIR filters can be discrete-time or continuous-time, and digital or analog.\n\n\nFor a causal discrete-time FIR filter of order N, each value of the output sequence is a weighted sum of the most recent input values:\nwhere:\nThis computation is also known as discrete convolution.\nThe \n\n\n\n\nx\n[\nn\n\u2212\ni\n]\n\n\n\n{\\displaystyle \\scriptstyle x[n-i]}\n\n in these terms are commonly referred to as taps, based on the structure of a tapped delay line that in many implementations or block diagrams provides the delayed inputs to the multiplication operations. One may speak of a 5th order/6-tap filter, for instance.\nThe impulse response of the filter as defined is nonzero over a finite duration. Including zeros, the impulse response is the infinite sequence:\nIf an FIR filter is non-causal, the range of nonzero values in its impulse response can start before n\u00a0=\u00a00, with the defining formula appropriately generalized.\nAn FIR filter has a number of useful properties which sometimes make it preferable to an infinite impulse response (IIR) filter. FIR filters:\nThe main disadvantage of FIR filters is that considerably more computation power in a general purpose processor is required compared to an IIR filter with similar sharpness or selectivity, especially when low frequency (relative to the sample rate) cutoffs are needed. However many digital signal processors provide specialized hardware features to make FIR filters approximately as efficient as IIR for many applications.\nThe filter's effect on the sequence x[n] is described in the frequency domain by the convolution theorem:\nwhere operators \n\n\n\n\n\nF\n\n\n\n\n{\\displaystyle {\\mathcal {F}}}\n\n and \n\n\n\n\n\n\nF\n\n\n\n\u2212\n1\n\n\n\n\n{\\displaystyle {\\mathcal {F}}^{-1}}\n\n respectively denote the discrete-time Fourier transform (DTFT) and its inverse. Therefore, the complex-valued, multiplicative function \n\n\n\nH\n(\n\u03c9\n)\n\n\n{\\displaystyle H(\\omega )}\n\n is the filter's frequency response. It is defined by a Fourier series:\nwhere the added subscript denotes 2\u03c0-periodicity. Here \n\n\n\n\u03c9\n\n\n{\\displaystyle \\omega }\n\n represents frequency in normalized units (radians/sample). The substitution \n\n\n\n\u03c9\n=\n2\n\u03c0\nf\n,\n\n\n{\\displaystyle \\omega =2\\pi f,}\n\n\u00a0 favored by many filter design programs, changes the units of frequency \n\n\n\n\n(\nf\n)\n\n\n\n{\\displaystyle \\scriptstyle (f)}\n\n to cycles/sample and the periodicity to 1.[note 1]\u00a0 When the x[n] sequence has a known sampling-rate, \n\n\n\n\nf\n\ns\n\n\n\n\n{\\displaystyle f_{s}}\n\n\u00a0 samples/second,\u00a0 the substitution \n\n\n\n\u03c9\n=\n2\n\u03c0\nf\n\n/\n\n\nf\n\ns\n\n\n\n\n{\\displaystyle \\omega =2\\pi f/f_{s}}\n\n\u00a0 changes the units of frequency \n\n\n\n\n(\nf\n)\n\n\n\n{\\displaystyle \\scriptstyle (f)}\n\n to cycles/second (hertz) and the periodicity to \n\n\n\n\nf\n\ns\n\n\n.\n\n\n{\\displaystyle f_{s}.}\n\n\u00a0 The value \n\n\n\n\u03c9\n=\n\u03c0\n\n\n{\\displaystyle \\omega =\\pi }\n\n\u00a0 corresponds to a frequency of \n\n\n\nf\n=\n\n\n\n\nf\n\ns\n\n\n2\n\n\n\n\n\n{\\displaystyle f={\\tfrac {f_{s}}{2}}}\n\n Hz \u00a0\n\n\n\n=\n\n\n\n1\n2\n\n\n\n\n\n{\\displaystyle ={\\tfrac {1}{2}}}\n\n cycles/sample, which is the Nyquist frequency.\nThe frequency response\n\n\n\n,\n\u00a0\n\nH\n\n2\n\u03c0\n\n\n(\n\u03c9\n)\n,\n\n\n{\\displaystyle ,\\ H_{2\\pi }(\\omega ),}\n\n\u00a0 can also be written as \n\n\n\nH\n(\n\ne\n\ni\n\u03c9\n\n\n)\n,\n\n\n{\\displaystyle H(e^{i\\omega }),}\n\n\u00a0 where function \n\n\n\nH\n\n\n{\\displaystyle H}\n\n is the Z-transform of the impulse response:\nz is a complex variable, and H(z) is a surface.\u00a0 One cycle of the periodic frequency response can be found in the region defined by \n\n\n\nz\n=\n\ne\n\ni\n\u03c9\n\n\n,\n\u00a0\n\n\u2212\n\u03c0\n\u2264\n\u03c9\n\u2264\n\u03c0\n,\n\n\n\n{\\displaystyle z=e^{i\\omega },\\ \\scriptstyle -\\pi \\leq \\omega \\leq \\pi ,}\n\n\u00a0 which is the unit circle of the z-plane. Filter transfer functions are often used to verify the stability of IIR designs. As we have already noted, FIR designs are inherently stable.\nAn FIR filter is designed by finding the coefficients and filter order that meet certain specifications, which can be in the time-domain (e.g. a matched filter) and/or the frequency domain (most common). Matched filters perform a cross-correlation between the input signal and a known pulse-shape. The FIR convolution is a cross-correlation between the input signal and a time-reversed copy of the impulse-response. Therefore, the matched-filter's impulse response is \"designed\" by sampling the known pulse-shape and using those samples in reverse order as the coefficients of the filter.[1]\nWhen a particular frequency response is desired, several different design methods are common:\nSoftware packages like MATLAB, GNU Octave, Scilab, and SciPy provide convenient ways to apply these different methods.\nIn the window design method, one first designs an ideal IIR filter and then truncates the infinite impulse response by multiplying it with a finite length window function. The result is a finite impulse response filter whose frequency response is modified from that of the IIR filter. Multiplying the infinite impulse by the window function in the time domain results in the frequency response of the IIR being convolved with the Fourier transform (or DTFT) of the window function. If the window's main lobe is narrow, the composite frequency response remains close to that of the ideal IIR filter.\nThe ideal response is usually rectangular, and the corresponding IIR is a sinc function. The result of the frequency domain convolution is that the edges of the rectangle are tapered, and ripples appear in the passband and stopband. Working backward, one can specify the slope (or width) of the tapered region (transition band) and the height of the ripples, and thereby derive the frequency domain parameters of an appropriate window function. Continuing backward to an impulse response can be done by iterating a filter design program to find the minimum filter order. Another method is to restrict the solution set to the parametric family of Kaiser windows, which provides closed form relationships between the time-domain and frequency domain parameters. In general, that method will not achieve the minimum possible filter order, but it is particularly convenient for automated applications that require dynamic, on-the-fly, filter design.\nThe window design method is also advantageous for creating efficient half-band filters, because the corresponding sinc function is zero at every other sample point (except the center one). The product with the window function does not alter the zeros, so almost half of the coefficients of the final impulse response are zero. An appropriate implementation of the FIR calculations can exploit that property to double the filter's efficiency.\nA moving average filter is a very simple FIR filter. It is sometimes called a boxcar filter, especially when followed by decimation. The filter coefficients, \n\n\n\n\n\nb\n\n0\n\n\n,\n\n\u2026\n,\n\n\nb\n\nN\n\n\n\n\n\n{\\displaystyle \\scriptstyle b_{0},\\,\\dots ,\\,b_{N}}\n\n, are found via the following equation:\nTo provide a more specific example, we select the filter order:\nThe impulse response of the resulting filter is:\nThe Fig. (a) on the right shows the block diagram of a 2nd-order moving-average filter discussed below. The transfer function is:\nFig. (b) on the right shows the corresponding pole\u2013zero diagram. Zero frequency (DC) corresponds to (1,0), positive frequencies advancing counterclockwise around the circle to the Nyquist frequency at (-1,0). Two poles are located at the origin, and two zeros are located at \n\n\n\n\n\nz\n\n1\n\n\n\n=\n\n\u2212\n\n\n1\n2\n\n\n\n+\n\nj\n\n\n\n3\n\n2\n\n\n\n\n\n{\\displaystyle \\scriptstyle z_{1}\\;=\\;-{\\frac {1}{2}}\\,+\\,j{\\frac {\\sqrt {3}}{2}}}\n\n, \n\n\n\n\n\nz\n\n2\n\n\n\n=\n\n\u2212\n\n\n1\n2\n\n\n\n\u2212\n\nj\n\n\n\n3\n\n2\n\n\n\n\n\n{\\displaystyle \\scriptstyle z_{2}\\;=\\;-{\\frac {1}{2}}\\,-\\,j{\\frac {\\sqrt {3}}{2}}}\n\n.\nThe frequency response, in terms of normalized frequency \u03c9, is:\nFig. (c) on the right shows the magnitude and phase components of \n\n\n\n\nH\n\n(\n\ne\n\nj\n\u03c9\n\n\n)\n\n.\n\n\n\n{\\displaystyle \\scriptstyle H\\left(e^{j\\omega }\\right).}\n\n\u00a0 But plots like these can also be generated by doing a discrete Fourier transform (DFT) of the impulse response.[note 2]\u00a0 And because of symmetry, filter design or viewing software often displays only the [0,\u03c0] region. The magnitude plot indicates that the moving-average filter passes low frequencies with a gain near 1 and attenuates high frequencies, and is thus a crude low-pass filter. The phase plot is linear except for discontinuities at the two frequencies where the magnitude goes to zero. The size of the discontinuities is \u03c0, representing a sign reversal. They do not affect the property of linear phase. That fact is illustrated in Fig. (d).", 
    "dbpedia_url": "http://dbpedia.org/resource/Finite_impulse_response", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Finite_impulse_response\n"
}
{
    "about": "The randomized weighted majority algorithm is an algorithm in machine learning theory.[1] It improves the mistake bound of the weighted majority algorithm.", 
    "name": "Randomized Weighted Majority Algorithm", 
    "classification": "Machine Learning Algorithms", 
    "full_text": "The randomized weighted majority algorithm is an algorithm in machine learning theory.[1] It improves the mistake bound of the weighted majority algorithm.\nImagine that every morning before the stock market opens, we get a prediction from each of our \"experts\" about whether the stock market will go up or down. Our goal is to somehow combine this set of predictions into a single prediction that we then use to make a buy or sell decision for the day. The RWMA gives us a way to do this combination such that our prediction record will be nearly as good as that of the single best expert in hindsight.\n\n\nIn machine learning, the weighted majority algorithm (WMA) is a meta-learning algorithm which \"predicts from expert advice\". It is not a randomized algorithm:\nSuppose there are \n\n\n\nn\n\n\n{\\displaystyle n}\n\n experts and the best expert makes \n\n\n\nm\n\n\n{\\displaystyle m}\n\n mistakes. The weighted majority algorithm (WMA) makes at most \n\n\n\n2.4\n(\n\nlog\n\n2\n\n\n\u2061\nn\n+\nm\n)\n\n\n{\\displaystyle 2.4(\\log _{2}n+m)}\n\n mistakes, which is not a very good bound. We can do better by introducing randomization.\nThe nonrandomized weighted majority algorithm (WMA) only guarantees an upper bound of \n\n\n\n2.4\n(\n\nlog\n\n2\n\n\n\u2061\nn\n+\nm\n)\n\n\n{\\displaystyle 2.4(\\log _{2}n+m)}\n\n, which is problematic for highly error-prone experts (e.g. the best expert still makes a mistake 20% of the time.) Suppose we do \n\n\n\nN\n=\n100\n\n\n{\\displaystyle N=100}\n\n rounds using \n\n\n\nn\n=\n10\n\n\n{\\displaystyle n=10}\n\n experts. If the best expert makes \n\n\n\nm\n=\n20\n\n\n{\\displaystyle m=20}\n\n mistakes, we can only guarantee an upper bound of \n\n\n\n2.4\n(\n\nlog\n\n2\n\n\n\u2061\n10\n+\n20\n)\n\u2248\n56\n\n\n{\\displaystyle 2.4(\\log _{2}10+20)\\approx 56}\n\n on our number of mistakes.\nAs this is a known limitation of WMA, attempts to improve this shortcoming have been explored in order to improve the dependence on \n\n\n\nm\n\n\n{\\displaystyle m}\n\n. Instead of predicting based on majority vote, the weights are used as probabilities: hence the name randomized weighted majority. If \n\n\n\n\nw\n\ni\n\n\n\n\n{\\displaystyle w_{i}}\n\n is the weight of expert \n\n\n\ni\n\n\n{\\displaystyle i}\n\n, let \n\n\n\nW\n=\n\n\u2211\n\ni\n\n\n\nw\n\ni\n\n\n\n\n{\\displaystyle W=\\sum _{i}w_{i}}\n\n. We will follow expert \n\n\n\ni\n\n\n{\\displaystyle i}\n\n with probability \n\n\n\n\n\n\nw\n\ni\n\n\nW\n\n\n\n\n{\\displaystyle {\\frac {w_{i}}{W}}}\n\n. The goal is to bound the worst-case expected number of mistakes, assuming that the adversary (the world) has to select one of the answers as correct before we make our coin toss. Why is this better in the worst case? Idea: the worst case for the deterministic algorithm (weighted majority algorithm) was when the weights split 50/50. But, now it is not so bad since we also have a 50/50 chance of getting it right. Also, to trade-off between dependence on \n\n\n\nm\n\n\n{\\displaystyle m}\n\n and \n\n\n\n\nlog\n\n2\n\n\n\u2061\nn\n\n\n{\\displaystyle \\log _{2}n}\n\n, we will generalize to multiply by \n\n\n\n\u03b2\n<\n1\n\n\n{\\displaystyle \\beta <1}\n\n, instead of necessarily by \n\n\n\n\n\n1\n2\n\n\n\n\n{\\displaystyle {\\frac {1}{2}}}\n\n.\nAt the \n\n\n\n\u00a0\nt\n\n\n{\\displaystyle \\ t}\n\n-th round, define \n\n\n\n\u00a0\n\nF\n\nt\n\n\n\n\n{\\displaystyle \\ F_{t}}\n\n to be the fraction of weight on the wrong answers. so, \n\n\n\n\u00a0\n\nF\n\nt\n\n\n\n\n{\\displaystyle \\ F_{t}}\n\n is the probability we make a mistake on the \n\n\n\n\u00a0\nt\n\n\n{\\displaystyle \\ t}\n\n-th round. Let \n\n\n\n\u00a0\nM\n\n\n{\\displaystyle \\ M}\n\n denote the total number of mistakes we made so far. Furthermore, we define \n\n\n\nE\n[\nM\n]\n=\n\u00a0\n\n\u2211\n\nt\n\n\n\nF\n\nt\n\n\n\n\n{\\displaystyle E[M]=\\ \\sum _{t}F_{t}}\n\n, using the fact that expectation is additive. On the \n\n\n\n\u00a0\nt\n\n\n{\\displaystyle \\ t}\n\n-th round, \n\n\n\nW\n\n\n{\\displaystyle W}\n\n becomes \n\n\n\n\u00a0\nW\n(\n1\n\u2212\n(\n1\n\u2212\n\u03b2\n)\n\nF\n\nt\n\n\n)\n\n\n{\\displaystyle \\ W(1-(1-\\beta )F_{t})}\n\n. Reason: on \n\n\n\n\u00a0\n\nF\n\nt\n\n\n\n\n{\\displaystyle \\ F_{t}}\n\n fraction, we are multiplying by \n\n\n\n\u00a0\n\u03b2\n\n\n{\\displaystyle \\ \\beta }\n\n. So, \n\n\n\n\u00a0\n\nW\n\nf\ni\nn\na\nl\n\n\n=\nn\n\u2217\n(\n1\n\u2212\n(\n1\n\u2212\n\u03b2\n)\n\nF\n\n1\n\n\n)\n\u2217\n(\n1\n\u2212\n(\n1\n\u2212\n\u03b2\n)\n\nF\n\n2\n\n\n)\n.\n.\n.\n\n\n{\\displaystyle \\ W_{final}=n*(1-(1-\\beta )F_{1})*(1-(1-\\beta )F_{2})...}\n\n\nLet's say that \n\n\n\n\u00a0\nm\n\n\n{\\displaystyle \\ m}\n\n is the number of mistakes of the best expert so far. We can use the inequality \n\n\n\n\u00a0\nW\n\u2265\n\n\u03b2\n\nm\n\n\n\n\n{\\displaystyle \\ W\\geq \\beta ^{m}}\n\n. Now we solve. First, take the natural log of both sides. We get: \n\n\n\n\u00a0\nm\nl\nn\n\u03b2\n\u2264\nl\nn\n(\nn\n)\n+\n\n\u2211\n\nt\n\n\nl\nn\n(\n1\n\u2212\n(\n1\n\u2212\n\u03b2\n)\n\nF\n\nt\n\n\n)\n\n\n{\\displaystyle \\ mln\\beta \\leq ln(n)+\\sum _{t}ln(1-(1-\\beta )F_{t})}\n\n, Simplify:\n\n\n\n\n\u00a0\nl\nn\n(\n1\n\u2212\nx\n)\n=\n\u2212\nx\n\u2212\n\n\n\nx\n\n2\n\n\n2\n\n\n\u2212\n\n\n\nx\n\n3\n\n\n3\n\n\n\u2212\n.\n.\n.\n\n\n{\\displaystyle \\ ln(1-x)=-x-{\\frac {x^{2}}{2}}-{\\frac {x^{3}}{3}}-...}\n\n, So,\n\n\n\n\n\u00a0\nl\nn\n(\n1\n\u2212\n(\n1\n\u2212\n\u03b2\n)\n\nF\n\nt\n\n\n)\n<\n\u2212\n(\n1\n\u2212\n\u03b2\n)\n\nF\n\nt\n\n\n\n\n{\\displaystyle \\ ln(1-(1-\\beta )F_{t})<-(1-\\beta )F_{t}}\n\n.\n\n\n\n\n\u00a0\nm\nl\nn\n\u03b2\n\u2264\nl\nn\n(\nn\n)\n\u2212\n(\n1\n\u2212\n\u03b2\n)\n\u2217\n\n\u2211\n\nt\n\n\n\nF\n\nt\n\n\n\n\n{\\displaystyle \\ mln\\beta \\leq ln(n)-(1-\\beta )*\\sum _{t}F_{t}}\n\n\nNow, use \n\n\n\n\u00a0\nE\n[\nM\n]\n=\n\u00a0\n\n\u2211\n\nt\n\n\n\nF\n\nt\n\n\n\n\n{\\displaystyle \\ E[M]=\\ \\sum _{t}F_{t}}\n\n, and the result is:\n\n\n\n\n\u00a0\nE\n[\nM\n]\n\u2264\n\n\n\nm\nl\nn\n(\n1\n\n/\n\n\u03b2\n)\n+\nl\nn\n(\nn\n)\n\n\n1\n\u2212\n\u03b2\n\n\n\n\n\n{\\displaystyle \\ E[M]\\leq {\\frac {mln(1/\\beta )+ln(n)}{1-\\beta }}}\n\n\nLet's see if we made any progress:\nIf \n\n\n\n\u00a0\n\u03b2\n=\n\n\n1\n2\n\n\n\n\n{\\displaystyle \\ \\beta ={\\frac {1}{2}}}\n\n, we get, \n\n\n\n\u00a0\n1.39\nm\n+\n2\nl\nn\n(\nn\n)\n.\n\n\n{\\displaystyle \\ 1.39m+2ln(n).}\n\n,\nif \n\n\n\n\u00a0\n\u03b2\n=\n\n\n3\n4\n\n\n\n\n{\\displaystyle \\ \\beta ={\\frac {3}{4}}}\n\n, we get, \n\n\n\n\u00a0\n1.15\nm\n+\n4\nl\nn\n(\nn\n)\n\n\n{\\displaystyle \\ 1.15m+4ln(n)}\n\n.\nso we can see we made progress. Roughly, of the form \n\n\n\n\u00a0\n(\n1\n+\n\u03f5\n)\n\u2217\nm\n+\n\n\u03f5\n\n\u2212\n1\n\n\n\u2217\nl\nn\n(\nn\n)\n\n\n{\\displaystyle \\ (1+\\epsilon )*m+\\epsilon ^{-1}*ln(n)}\n\n.\nCan use to combine multiple algorithms to do nearly as well as best in hindsight.\ncan apply Randomized weighted majority algorithm in situations where experts are making choices that cannot be combined (or can't be combined easily).For instance, repeated game-playing or online shortest path problem.In the online shortest path problem, each expert is telling you a different way to drive to work. You pick one using Randomized weighted majority algorithm. Later you find out how well you would have done, and penalize appropriately. To do this right, we want to generalize from just \"losS\" of 0 to 1 to losses in [0,1]. Goal of having expected loss be not too much worse than loss of best expert.We generalize by penalize \n\n\n\n\n\u03b2\n\nl\no\ns\ns\n\n\n\n\n{\\displaystyle \\beta ^{loss}}\n\n, meaning having two examples of loss \n\n\n\n\u00a0\n\n\n1\n2\n\n\n\n\n{\\displaystyle \\ {\\frac {1}{2}}}\n\n gives same weight as one example of loss 1 and one example of loss 0 (Analysis still oes through).\n- \"Bandit\" problem\n- Efficient algorithm for some cases with many experts.\n- Sleeping experts/\"specialists\" setting.", 
    "dbpedia_url": "http://dbpedia.org/resource/Randomized_weighted_majority_algorithm", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Randomized_weighted_majority_algorithm\n"
}
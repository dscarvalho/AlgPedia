{
    "about": "The Wang and Landau algorithm, proposed by Fugao Wang and David P. Landau,[1] is a Monte Carlo method designed to calculate the density of states of a system. The method performs a non-Markovian random walk to build the density of states by quickly visiting all the available energy spectrum. The Wang and Landau algorithm is an important method to obtain the density of states required to perform a multicanonical simulation.", 
    "name": "Wang And Landau Algorithm", 
    "classification": "Statistical Algorithms", 
    "full_text": "The Wang and Landau algorithm, proposed by Fugao Wang and David P. Landau,[1] is a Monte Carlo method designed to calculate the density of states of a system. The method performs a non-Markovian random walk to build the density of states by quickly visiting all the available energy spectrum. The Wang and Landau algorithm is an important method to obtain the density of states required to perform a multicanonical simulation.\nThe Wang\u2013Landau algorithm can be applied to any system which is characterized by a cost (or energy) function. For instance, it has been applied to the solution of numerical integrals[2] and the folding of proteins.[3][4] The Wang-Landau sampling is related to the metadynamics algorithm.[5]\n\n\nThe Wang and Landau algorithm is used to obtain the density of states of a system characterized by a cost function. It uses a non-Markovian stochastic process which asymptotically converges to a multicanonical ensemble.[1] (I.e. to a Metropolis-Hastings algorithm with sampling distribution inverse to the density of states.) The major consequence is that this sampling distribution leads to a simulation where the energy barriers are invisible. This means that the algorithm visits all the accessible states (favorable and less favorable) much faster than a Metropolis algorithm.[6]\nConsider a system defined on a phase space \n\n\n\n\u03a9\n\n\n{\\displaystyle \\Omega }\n\n, and a cost function, E, (e.g. the energy), bounded on a spectrum \n\n\n\nE\n\u2208\n\u0393\n=\n[\n\nE\n\nmin\n\n\n,\n\nE\n\nmax\n\n\n]\n\n\n{\\displaystyle E\\in \\Gamma =[E_{\\min },E_{\\max }]}\n\n, which has an associated density of states \n\n\n\n\u03c1\n(\nE\n)\n\u2261\nexp\n\u2061\n(\nS\n(\nE\n)\n)\n\n\n{\\displaystyle \\rho (E)\\equiv \\exp(S(E))}\n\n, which is to be computed. Because Wang and Landau algorithm works in discrete spectra,[1] the spectrum \n\n\n\n\u0393\n\n\n{\\displaystyle \\Gamma }\n\n is divided in N discrete values with a difference between them of \n\n\n\n\u0394\n\n\n{\\displaystyle \\Delta }\n\n, such that\nGiven this discrete spectrum, the algorithm is initialized by:\nThe algorithm then performs a multicanonical ensemble simulation:[1] a Metropolis-Hastings random walk in the phase space of the system with a probability distribution given by \n\n\n\nP\n(\n\nr\n\n)\n=\n1\n\n/\n\n\u03c1\n(\nE\n(\n\nr\n\n)\n)\n=\nexp\n\u2061\n(\n\u2212\nS\n(\nE\n(\n\nr\n\n)\n)\n)\n\n\n{\\displaystyle P({\\boldsymbol {r}})=1/\\rho (E({\\boldsymbol {r}}))=\\exp(-S(E({\\boldsymbol {r}})))}\n\n and a probability of proposing a new state given by a probability distribution \n\n\n\ng\n(\n\nr\n\n\u2192\n\n\nr\n\n\u2032\n\n)\n\n\n{\\displaystyle g({\\boldsymbol {r}}\\rightarrow {\\boldsymbol {r}}')}\n\n. A histogram \n\n\n\nH\n(\nE\n)\n\n\n{\\displaystyle H(E)}\n\n of visited energies is stored. Like in the Metropolis-Hastings algorithm, a proposal-acceptance step is performed, and consists in (see Metropolis\u2013Hastings algorithm overview):\nAfter each proposal-acceptance step, the system transits to some value \n\n\n\n\nE\n\ni\n\n\n\n\n{\\displaystyle E_{i}}\n\n, \n\n\n\nH\n(\n\nE\n\ni\n\n\n)\n\n\n{\\displaystyle H(E_{i})}\n\n is incremented by one and the following update is performed:\nThis is the crucial step of the algorithm, and it is what makes the Wang and Landau algorithm non-Markovian: the stochastic process now depends on the history of the process. Hence the next time there is a proposal to a state with that particular energy \n\n\n\n\nE\n\ni\n\n\n\n\n{\\displaystyle E_{i}}\n\n, that proposal is now more likely refused; in this sense, the algorithm forces the system to visit all of the spectrum equally.[1] The consequence is that the histogram \n\n\n\nH\n(\nE\n)\n\n\n{\\displaystyle H(E)}\n\n is more and more flat. However, this flatness depends on how well-approximated the calculated entropy is to the exact entropy, which naturally depends on the value of f.[7] To better and better approximate the exact entropy (and thus histogram's flatness), f is decreased after M proposal-acceptance steps:\nIt was later shown that updating the f by constantly dividing by two can lead to saturation errors.[7] A small modification to the Wang and Landau method to avoid this problem is to use the f factor proportional to \n\n\n\n1\n\n/\n\nt\n\n\n{\\displaystyle 1/t}\n\n, where \n\n\n\nt\n\n\n{\\displaystyle t}\n\n is proportional to the number of steps of the simulation.[7]\nWe want to obtain the DOS for the harmonic oscillator potential.\nThe analytical DOS is given by,\nby performing the last integral we obtain\nIn general, the DOS for a multidimensional harmonic oscillator will be given by some power of E, the exponent will be a function of the dimension of the system.\nHence, we can use a simple harmonic oscillator potential to test the accuracy of Wang\u2013Landau algorithm because we know already the analytic form of the density of states. Therefore, we compare the density of states \n\n\n\n\u03c1\n(\nE\n)\n\n\n{\\displaystyle \\rho (E)}\n\n obtained by the Wang\u2013Landau algorithm with \n\n\n\ng\n(\nE\n)\n\n\n{\\displaystyle g(E)}\n\n.\nThe following is a sample code of the Wang\u2013Landau algorithm in Python, where we assume that a symmetric proposal distribution g is used:\nThe code considers a \"system\" which is the underlying system being studied.\nIt should be noted that the Wang and Landau algorithm can be implemented not only in a Monte Carlo simulation but also in a molecular dynamics simulation. To do this would require an escalation of the temperature of the system as follows:\nwhere \n\n\n\nS\n(\nE\n)\n\n\n{\\displaystyle S(E)}\n\n is the entropy of the system, \n\n\n\nT\n(\nE\n)\n\n\n{\\displaystyle T(E)}\n\n the micro-canonical temperature and \n\n\n\n\nT\n\u2032\n\n(\nE\n)\n\n\n{\\displaystyle T'(E)}\n\n is the \"scaled\" temperature used in the simulation.", 
    "dbpedia_url": "http://dbpedia.org/resource/Wang_and_Landau_algorithm", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Wang_and_Landau_algorithm\n"
}
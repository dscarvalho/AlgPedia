{
    "about": "In mathematics, Graeffe's method or Dandelin\u2013Lobachesky\u2013Graeffe method is an algorithm for finding all of the roots of a polynomial. It was developed independently by Germinal Pierre Dandelin in 1826 and Lobachevsky in 1834. In 1837 Karl Heinrich Gr\u00e4ffe also discovered the principal idea of the method.[1] The method separates the roots of a polynomial by squaring them repeatedly. This squaring of the roots is done implicitly, that is, only working on the coefficients of the polynomial. Finally, Vi\u00e8te's formulas are used in order to approximate the roots.", 
    "name": "Graeffe'S Method", 
    "classification": "Root-Finding Algorithms", 
    "full_text": "In mathematics, Graeffe's method or Dandelin\u2013Lobachesky\u2013Graeffe method is an algorithm for finding all of the roots of a polynomial. It was developed independently by Germinal Pierre Dandelin in 1826 and Lobachevsky in 1834. In 1837 Karl Heinrich Gr\u00e4ffe also discovered the principal idea of the method.[1] The method separates the roots of a polynomial by squaring them repeatedly. This squaring of the roots is done implicitly, that is, only working on the coefficients of the polynomial. Finally, Vi\u00e8te's formulas are used in order to approximate the roots.\n\n\nLet p(x) be a polynomial of degree n\nThen\nLet q(x) be the polynomial which has the squares \n\n\n\n\nx\n\n1\n\n\n2\n\n\n,\n\u22ef\n,\n\nx\n\nn\n\n\n2\n\n\n\n\n{\\displaystyle x_{1}^{2},\\cdots ,x_{n}^{2}}\n\n as its roots,\nThen we can write:\nq(x) can now be computed by algebraic operations on the coefficients of the polynomial p(x) alone. Let:\nthen the coefficients are related by\nGraeffe observed that if one separates p(x) into its odd and even parts:\nthen one obtains a simplified algebraic expression for q(x):\nThis expression involves the squaring of two polynomials of only half the degree, and is therefore used in most implementations of the method.\nIterating this procedure several times separates the roots with respect to their magnitudes. Repeating k times gives a polynomial of degree n:\nwith roots\nIf the magnitudes of the roots of the original polynomial were separated by some factor \n\n\n\n\u03c1\n>\n1\n\n\n{\\displaystyle \\rho >1}\n\n, that is, \n\n\n\n\n|\n\n\nx\n\nk\n\n\n\n|\n\n\u2265\n\u03c1\n\n|\n\n\nx\n\nk\n+\n1\n\n\n\n|\n\n\n\n{\\displaystyle |x_{k}|\\geq \\rho |x_{k+1}|}\n\n, then the roots of the k-th iterate are separated by a fast growing factor\nNext the Vieta relations are used\nIf the roots \n\n\n\n\nx\n\n1\n\n\n,\n\u2026\n,\n\nx\n\nn\n\n\n\n\n{\\displaystyle x_{1},\\dots ,x_{n}}\n\n are sufficiently separated, say by a factor \n\n\n\n\u03c1\n>\n1\n\n\n{\\displaystyle \\rho >1}\n\n, \n\n\n\n\n|\n\n\nx\n\nm\n\n\n\n|\n\n\u2265\n\u03c1\n\n|\n\n\nx\n\nm\n+\n1\n\n\n\n|\n\n\n\n{\\displaystyle |x_{m}|\\geq \\rho |x_{m+1}|}\n\n, then the iterated powers \n\n\n\n\ny\n\n1\n\n\n,\n\ny\n\n2\n\n\n,\n.\n.\n.\n,\n\ny\n\nn\n\n\n\n\n{\\displaystyle y_{1},y_{2},...,y_{n}}\n\n of the roots are separated by the factor \n\n\n\n\n\u03c1\n\n\n2\n\nk\n\n\n\n\n\n\n{\\displaystyle \\rho ^{2^{k}}}\n\n, which quickly becomes very big.\nThe coefficients of the iterated polynomial can then be approximated by their leading term,\nimplying\nFinally, logarithms are used in order to find the absolute values of the roots of the original polynomial. These magnitudes alone are already useful to generate meaningful starting points for other root-finding methods.\nTo also obtain the angle of these roots, a multitude of methods has been proposed, the most simple one being to successively compute the square root of a (possibly complex) root of \n\n\n\n\nq\n\nm\n\n\n(\ny\n)\n\n\n{\\displaystyle q^{m}(y)}\n\n, m ranging from k to 1, and testing which of the two sign variants is a root of \n\n\n\n\nq\n\nm\n\u2212\n1\n\n\n(\nx\n)\n\n\n{\\displaystyle q^{m-1}(x)}\n\n. Before continuing to the roots of \n\n\n\n\nq\n\nm\n\u2212\n2\n\n\n(\nx\n)\n\n\n{\\displaystyle q^{m-2}(x)}\n\n, it might be necessary to numerically improve the accuracy of the root approximations for \n\n\n\n\nq\n\nm\n\u2212\n1\n\n\n(\nx\n)\n\n\n{\\displaystyle q^{m-1}(x)}\n\n, for instance by Newton's method.\nGraeffe's method works best for polynomials with simple real roots, though it can be adapted for polynomials with complex roots and coefficients, and roots with higher multiplicity. For instance, it has been observed[2] that for a root \n\n\n\n\nx\n\n\u2113\n+\n1\n\n\n=\n\nx\n\n\u2113\n+\n2\n\n\n=\n\u22ef\n=\n\nx\n\n\u2113\n+\nd\n\n\n\n\n{\\displaystyle x_{\\ell +1}=x_{\\ell +2}=\\dots =x_{\\ell +d}}\n\n with multiplicity d, the fractions\nfor \n\n\n\ni\n=\n0\n,\n1\n,\n\u2026\n,\nd\n\n\n{\\displaystyle i=0,1,\\dots ,d}\n\n. This allows to estimate the multiplicity structure of the set of roots.\nFrom a numerical point of view, this method is problematic since the coefficients of the iterated polynomials span very quickly many orders of magnitude, which implies serious numerical errors. One second, but minor concern is that many different polynomials lead to the same Graeffe iterates.\nThis method replaces the numbers by truncated power series of degree 1, also known as dual numbers. Symbolically, this is achieved by introducing an \"algebraic infinitesimal\" \n\n\n\n\u03b5\n\n\n{\\displaystyle \\varepsilon }\n\n with the defining property \n\n\n\n\n\u03b5\n\n2\n\n\n=\n0\n\n\n{\\displaystyle \\varepsilon ^{2}=0}\n\n. Then the polynomial \n\n\n\np\n(\nx\n+\n\u03b5\n)\n=\np\n(\nx\n)\n+\n\u03b5\n\n\np\n\u2032\n\n(\nx\n)\n\n\n{\\displaystyle p(x+\\varepsilon )=p(x)+\\varepsilon \\,p'(x)}\n\n has roots \n\n\n\n\nx\n\nm\n\n\n\u2212\n\u03b5\n\n\n{\\displaystyle x_{m}-\\varepsilon }\n\n, with powers\nThus the value of \n\n\n\n\nx\n\nm\n\n\n\n\n{\\displaystyle x_{m}}\n\n is easily obtained as fraction \n\n\n\n\nx\n\nm\n\n\n=\n\u2212\n\n\n\n\n\n2\n\nk\n\n\n\n\ny\n\nm\n\n\n\n\n\n\n\ny\n\u02d9\n\n\n\n\nm\n\n\n\n\n\n.\n\n\n{\\displaystyle x_{m}=-{\\tfrac {2^{k}\\,y_{m}}{{\\dot {y}}_{m}}}.}\n\n\nThis kind of computation with infinitesimals is easy to implement analogous to the computation with complex numbers. If one assumes complex coordinates or an initial shift by some randomly chosen complex number, then all roots of the polynomial will be distinct and consequently recoverable with the iteration.\nEvery polynomial can be scaled in domain and range such that in the resulting polynomial the first and the last coefficient have size one. If the size of the inner coefficients is bounded by M, then the size of the inner coefficients after one stage of the Graeffe iteration is bounded by \n\n\n\nn\n\nM\n\n2\n\n\n\n\n{\\displaystyle nM^{2}}\n\n. After k stages one gets the bound \n\n\n\n\nn\n\n\n2\n\nk\n\n\n\u2212\n1\n\n\n\nM\n\n\n2\n\nk\n\n\n\n\n\n\n{\\displaystyle n^{2^{k}-1}M^{2^{k}}}\n\n for the inner coefficients.\nTo overcome the limit posed by the growth of the powers, Malajovich\u2013Zubelli propose to represent coefficients and intermediate results in the kth stage of the algorithm by a scaled polar form\nwhere \n\n\n\n\u03b1\n=\n\n\nc\n\n\n|\n\nc\n\n|\n\n\n\n\n\n\n{\\displaystyle \\alpha ={\\frac {c}{|c|}}}\n\n is a complex number of unit length and \n\n\n\nr\n=\n\u2212\n\n2\n\n\u2212\nk\n\n\nlog\n\u2061\n\n|\n\nc\n\n|\n\n\n\n{\\displaystyle r=-2^{-k}\\log |c|}\n\n is a positive real. Splitting off the power \n\n\n\n\n2\n\nk\n\n\n\n\n{\\displaystyle 2^{k}}\n\n in the exponent reduces the absolute value of c to the corresponding dyadic root. Since this preserves the magnitude of the (representation of the) initial coefficients, this process was named renormalization.\nMultiplication of two numbers of this type is straightforward, whereas addition is performed following the factorization \n\n\n\n\nc\n\n3\n\n\n=\n\nc\n\n1\n\n\n+\n\nc\n\n2\n\n\n=\n\n|\n\n\nc\n\n1\n\n\n\n|\n\n\u22c5\n\n(\n\n\u03b1\n\n1\n\n\n+\n\n\u03b1\n\n2\n\n\n\n\n\n\n\n|\n\n\nc\n\n2\n\n\n\n|\n\n\n\n\n|\n\n\nc\n\n1\n\n\n\n|\n\n\n\n\n\n)\n\n\n\n{\\displaystyle c_{3}=c_{1}+c_{2}=|c_{1}|\\cdot \\left(\\alpha _{1}+\\alpha _{2}{\\tfrac {|c_{2}|}{|c_{1}|}}\\right)}\n\n, where \n\n\n\n\nc\n\n1\n\n\n\n\n{\\displaystyle c_{1}}\n\n is chosen as the larger of both numbers, that is, \n\n\n\n\nr\n\n1\n\n\n<\n\nr\n\n2\n\n\n\n\n{\\displaystyle r_{1}<r_{2}}\n\n. Thus\nThe coefficients \n\n\n\n\na\n\n0\n\n\n,\n\na\n\n1\n\n\n,\n\u2026\n,\n\na\n\nn\n\n\n\n\n{\\displaystyle a_{0},a_{1},\\dots ,a_{n}}\n\n of the final stage k of the Graeffe iteration, for some reasonably large value of k, are represented by pairs \n\n\n\n(\n\n\u03b1\n\nm\n\n\n,\n\nr\n\nm\n\n\n)\n\n\n{\\displaystyle (\\alpha _{m},r_{m})}\n\n, \n\n\n\nm\n=\n0\n,\n\u2026\n,\nn\n\n\n{\\displaystyle m=0,\\dots ,n}\n\n. By identifying the corners of the convex envelope of the point set \n\n\n\n{\n(\nm\n,\n\nr\n\nm\n\n\n)\n:\n\nm\n=\n0\n,\n\u2026\n,\nn\n}\n\n\n{\\displaystyle \\{(m,r_{m}):\\;m=0,\\dots ,n\\}}\n\n one can determine the multiplicities of the roots of the polynomial. Combining this renormalization with the tangent iteration one can extract directly from the coefficients at the corners of the envelope the roots of the original polynomial.", 
    "dbpedia_url": "http://dbpedia.org/resource/Graeffe's_method", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Graeffe's_method\n"
}
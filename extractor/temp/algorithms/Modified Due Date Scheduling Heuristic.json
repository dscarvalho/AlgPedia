{
    "about": "The modified due-date (MDD) scheduling heuristic is a greedy heuristic used to solve the single machine total weighted tardiness problem (SMTWTP).", 
    "classification": "Scheduling Algorithms", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Modified_due-date_scheduling_heuristic\n", 
    "full_text": "The modified due-date (MDD) scheduling heuristic is a greedy heuristic used to solve the single machine total weighted tardiness problem (SMTWTP).\n\n\nThe modified due date scheduling is a scheduling heuristic, created in 1982 by Baker and Bertrand,[1] used to solve the NP-hard single machine total-weighted tardiness problem. This problem is centered around reducing the global tardiness of a list of tasks which are characterized by their processing time, due date and weight by re-ordering them.\nThis heuristic works the same way as other greedy algorithms. At each iteration, it finds the next job to schedule and add it to the list. This operation is repeated until no jobs are left unscheduled. MDD is similar to the earliest due date (|EDD) heuristic except that MDD takes into account the partial sequence of job that have been already constructed, whereas EDD only looks at the jobs' due dates.\nHere is an implementation of the MDD algorithm in pseudo-code. It takes in an unsorted list of tasks and return the list sorted by increasing modified due date:\nIn this example we will schedule flight departures. Each flight is characterized by:\nWe need to find an order for the flight to take off that will result in the smallest total weighted tardiness. For this example we will use the following values:\nIn the default order, the total weighted tardiness is 136.\nThe first step is to compute the modified due date for each flight. Since the current time is 0 and, in our example, we don\u2019t have any flight whose due date is smaller than its processing time, the mdd of each flight is equal to its due date:\nThe flight with the smallest MDD (Flight n\u00b0 3) is then processed, and the new modified due date is computed. The current time is now 5.\nThe operation is repeated until no more flights are left unscheduled.\nWe obtain the following results:\nIn this order, the total weighted tardiness is 92.\nThis example can be generalized to schedule any list of job characterized by a due date and a processing time.\nApplying this heuristic will result in a sorted list of tasks which tardiness cannot be reduced by adjacent pair-wise interchange.[2] MDD\u2019s complexity is \n\n\n\nO\n(\nn\n)\n\n\n{\\displaystyle O(n)}\n\n.\nThere is a version of MDD called weighted modified due date (WMDD)[3] which takes into account the weights. In such a case, the evaluation function is replaced by:", 
    "name": "Modified Due Date Scheduling Heuristic"
}
{
    "about": "Kernel density estimation is a nonparametric technique for density estimation i.e., estimation of probability density functions, which is one of the fundamental questions in statistics. It can be viewed as a generalisation of histogram density estimation with improved statistical properties. Apart from histograms, other types of density estimators include parametric, spline, wavelet and Fourier series. Kernel density estimators were first introduced in the scientific literature for univariate data in the 1950s and 1960s[1][2] and subsequently have been widely adopted. It was soon recognised that analogous estimators for multivariate data would be an important addition to multivariate statistics. Based on research carried out in the 1990s and 2000s, multivariate kernel density estimation has reached a level of maturity comparable to its univariate counterparts.[3]", 
    "name": "Multivariate Kernel Density Estimation", 
    "classification": "Computational Statistics", 
    "full_text": "Kernel density estimation is a nonparametric technique for density estimation i.e., estimation of probability density functions, which is one of the fundamental questions in statistics. It can be viewed as a generalisation of histogram density estimation with improved statistical properties. Apart from histograms, other types of density estimators include parametric, spline, wavelet and Fourier series. Kernel density estimators were first introduced in the scientific literature for univariate data in the 1950s and 1960s[1][2] and subsequently have been widely adopted. It was soon recognised that analogous estimators for multivariate data would be an important addition to multivariate statistics. Based on research carried out in the 1990s and 2000s, multivariate kernel density estimation has reached a level of maturity comparable to its univariate counterparts.[3]\n\n\nWe take an illustrative synthetic bivariate data set of 50 points to illustrate the construction of histograms. This requires the choice of an anchor point (the lower left corner of the histogram grid). For the histogram on the left, we choose (\u22121.5,\u00a0\u22121.5): for the one on the right, we shift the anchor point by 0.125 in both directions to (\u22121.625,\u00a0\u22121.625). Both histograms have a binwidth of 0.5, so any differences are due to the change in the anchor point only. The colour-coding indicates the number of data points which fall into a bin: 0=white, 1=pale yellow, 2=bright yellow, 3=orange, 4=red. The left histogram appears to indicate that the upper half has a higher density than the lower half, whereas the reverse is the case for the right-hand histogram, confirming that histograms are highly sensitive to the placement of the anchor point.[4]\nOne possible solution to this anchor point placement problem is to remove the histogram binning grid completely. In the left figure below, a kernel (represented by the grey lines) is centred at each of the 50 data points above. The result of summing these kernels is given on the right figure, which is a kernel density estimate. The most striking difference between kernel density estimates and histograms is that the former are easier to interpret since they do not contain artifices induced by a binning grid. The coloured contours correspond to the smallest region which contains the respective probability mass: red = 25%, orange + red = 50%, yellow + orange + red = 75%, thus indicating that a single central region contains the highest density.\nThe goal of density estimation is to take a finite sample of data and to make inferences about the underlying probability density function everywhere, including where no data are observed. In kernel density estimation, the contribution of each data point is smoothed out from a single point into a region of space surrounding it. Aggregating the individually smoothed contributions gives an overall picture of the structure of the data and its density function. In the details to follow, we show that this approach leads to a reasonable estimate of the underlying density function.\nThe previous figure is a graphical representation of kernel density estimate, which we now define in an exact manner. Let x1, x2, \u2026, xn be a sample of d-variate random vectors drawn from a common distribution described by the density function \u0192. The kernel density estimate is defined to be\nwhere\nThe choice of the kernel function K is not crucial to the accuracy of kernel density estimators, so we use the standard multivariate normal kernel throughout: \n\n\n\n\nK\n\n\nH\n\n\n\n(\n\nx\n\n)\n=\n\n(\n2\n\u03c0\n\n)\n\n\u2212\nd\n\n/\n\n2\n\n\n\n\n\n\n|\n\nH\n\n|\n\n\n\n\u2212\n1\n\n/\n\n2\n\n\n\ne\n\n\u2212\n\n\n1\n2\n\n\n\n\nx\n\nT\n\n\n\n\n\nH\n\n\u2212\n1\n\n\n\n\nx\n\n\n\n\n\n{\\textstyle K_{\\mathbf {H} }(\\mathbf {x} )={(2\\pi )^{-d/2}}\\mathbf {|H|} ^{-1/2}e^{-{\\frac {1}{2}}\\mathbf {x^{T}} \\mathbf {H^{-1}} \\mathbf {x} }}\n\n, where H plays the role of the covariance matrix. On the other hand, the choice of the bandwidth matrix H is the single most important factor affecting its accuracy since it controls the amount and orientation of smoothing induced.[5]:36\u201339 That the bandwidth matrix also induces an orientation is a basic difference between multivariate kernel density estimation from its univariate analogue since orientation is not defined for 1D kernels. This leads to the choice of the parametrisation of this bandwidth matrix. The three main parametrisation classes (in increasing order of complexity) are S, the class of positive scalars times the identity matrix; D, diagonal matrices with positive entries on the main diagonal; and F, symmetric positive definite matrices. The S class kernels have the same amount of smoothing applied in all coordinate directions, D kernels allow different amounts of smoothing in each of the coordinates, and F kernels allow arbitrary amounts and orientation of the smoothing. Historically S and D kernels are the most widespread due to computational reasons, but research indicates that important gains in accuracy can be obtained using the more general F class kernels.[6][7]\nThe most commonly used optimality criterion for selecting a bandwidth matrix is the MISE or mean integrated squared error\nThis in general does not possess a closed-form expression, so it is usual to use its asymptotic approximation (AMISE) as a proxy\nwhere\nThe quality of the AMISE approximation to the MISE[5]:97 is given by\nwhere o indicates the usual small o notation. Heuristically this statement implies that the AMISE is a 'good' approximation of the MISE as the sample size n \u2192 \u221e.\nIt can be shown that any reasonable bandwidth selector H has H = O(n\u22122/(d+4)) where the big O notation is applied elementwise. Substituting this into the MISE formula yields that the optimal MISE is O(n\u22124/(d+4)).[5]:99\u2013100 Thus as n \u2192 \u221e, the MISE \u2192 0, i.e. the kernel density estimate converges in mean square and thus also in probability to the true density f. These modes of convergence are confirmation of the statement in the motivation section that kernel methods lead to reasonable density estimators. An ideal optimal bandwidth selector is\nSince this ideal selector contains the unknown density function \u0192, it cannot be used directly. The many different varieties of data-based bandwidth selectors arise from the different estimators of the AMISE. We concentrate on two classes of selectors which have been shown to be the most widely applicable in practise: smoothed cross validation and plug-in selectors.\nThe plug-in (PI) estimate of the AMISE is formed by replacing \u03a84 by its estimator \n\n\n\n\n\n\n\n\n\u03a8\n\n^\n\n\n\n\n4\n\n\n\n\n{\\displaystyle {\\hat {\\mathbf {\\Psi }}}_{4}}\n\n\nwhere \n\n\n\n\n\n\n\n\n\u03a8\n\n^\n\n\n\n\n4\n\n\n(\n\n\nG\n\n\n)\n=\n\nn\n\n\u2212\n2\n\n\n\n\u2211\n\ni\n=\n1\n\n\nn\n\n\n\n\u2211\n\nj\n=\n1\n\n\nn\n\n\n[\n(\nvec\n\n\nD\n\n2\n\n\n)\n(\n\nvec\n\nT\n\n\n\u2061\n\nD\n\n2\n\n\n)\n]\n\nK\n\n\nG\n\n\n\n(\n\n\n\nX\n\n\n\ni\n\n\n\u2212\n\n\n\nX\n\n\n\nj\n\n\n)\n\n\n{\\displaystyle {\\hat {\\mathbf {\\Psi }}}_{4}({\\mathbf {G}})=n^{-2}\\sum _{i=1}^{n}\\sum _{j=1}^{n}[(\\operatorname {vec} \\,\\operatorname {D} ^{2})(\\operatorname {vec} ^{T}\\operatorname {D} ^{2})]K_{\\mathbf {G}}({\\mathbf {X}}_{i}-{\\mathbf {X}}_{j})}\n\n. Thus \n\n\n\n\n\n\n\n\nH\n\n^\n\n\n\n\nPI\n\n\n=\n\nargmin\n\n\n\nH\n\n\n\u2208\nF\n\n\n\nPI\n\u2061\n(\n\n\nH\n\n\n)\n\n\n{\\displaystyle {\\hat {\\mathbf {H}}}_{\\operatorname {PI} }=\\operatorname {argmin} _{{\\mathbf {H}}\\in F}\\,\\operatorname {PI} ({\\mathbf {H}})}\n\n is the plug-in selector.[8][9] These references also contain algorithms on optimal estimation of the pilot bandwidth matrix G and establish that \n\n\n\n\n\n\n\n\nH\n\n^\n\n\n\n\nPI\n\n\n\n\n{\\displaystyle {\\hat {\\mathbf {H}}}_{\\operatorname {PI} }}\n\n converges in probability to HAMISE.\nSmoothed cross validation (SCV) is a subset of a larger class of cross validation techniques. The SCV estimator differs from the plug-in estimator in the second term\nThus \n\n\n\n\n\n\n\n\nH\n\n^\n\n\n\n\nSCV\n\n\n=\n\nargmin\n\n\n\nH\n\n\n\u2208\nF\n\n\n\nSCV\n\u2061\n(\n\n\nH\n\n\n)\n\n\n{\\displaystyle {\\hat {\\mathbf {H}}}_{\\operatorname {SCV} }=\\operatorname {argmin} _{{\\mathbf {H}}\\in F}\\,\\operatorname {SCV} ({\\mathbf {H}})}\n\n is the SCV selector.[9][10] These references also contain algorithms on optimal estimation of the pilot bandwidth matrix G and establish that \n\n\n\n\n\n\n\n\nH\n\n^\n\n\n\n\nSCV\n\n\n\n\n{\\displaystyle {\\hat {\\mathbf {H}}}_{\\operatorname {SCV} }}\n\n converges in probability to HAMISE.\nSilverman's rule of thumb suggests using \n\n\n\n\n\n\n\nH\n\n\ni\ni\n\n\n\n\n=\n\n\n(\n\n\n4\n\nd\n+\n2\n\n\n\n)\n\n\n\n1\n\nd\n+\n4\n\n\n\n\n\nn\n\n\n\n\u2212\n1\n\n\nd\n+\n4\n\n\n\n\n\n\u03c3\n\ni\n\n\n\n\n{\\displaystyle {\\sqrt {\\mathbf {H} _{ii}}}=\\left({\\frac {4}{d+2}}\\right)^{\\frac {1}{d+4}}n^{\\frac {-1}{d+4}}\\sigma _{i}}\n\n where \n\n\n\n\n\u03c3\n\ni\n\n\n\n\n{\\displaystyle \\sigma _{i}}\n\n is the standard deviation of the ith variable and \n\n\n\n\n\nH\n\n\ni\nj\n\n\n=\n0\n,\ni\n\u2260\nj\n\n\n{\\displaystyle \\mathbf {H} _{ij}=0,i\\neq j}\n\n. Scott's rule is \n\n\n\n\n\n\n\nH\n\n\ni\ni\n\n\n\n\n=\n\nn\n\n\n\n\u2212\n1\n\n\nd\n+\n4\n\n\n\n\n\n\u03c3\n\ni\n\n\n\n\n{\\displaystyle {\\sqrt {\\mathbf {H} _{ii}}}=n^{\\frac {-1}{d+4}}\\sigma _{i}}\n\n.\nIn the optimal bandwidth selection section, we introduced the MISE. Its construction relies on the expected value and the variance of the density estimator[5]:97\nwhere * is the convolution operator between two functions, and\nFor these two expressions to be well-defined, we require that all elements of H tend to 0 and that n\u22121 |H|\u22121/2 tends to 0 as n tends to infinity. Assuming these two conditions, we see that the expected value tends to the true density f i.e. the kernel density estimator is asymptotically unbiased; and that the variance tends to zero. Using the standard mean squared value decomposition\nwe have that the MSE tends to 0, implying that the kernel density estimator is (mean square) consistent and hence converges in probability to the true density f. The rate of convergence of the MSE to 0 is the necessarily the same as the MISE rate noted previously O(n\u22124/(d+4)), hence the covergence rate of the density estimator to f is Op(n\u22122/(d+4)) where Op denotes order in probability. This establishes pointwise convergence. The functional covergence is established similarly by considering the behaviour of the MISE, and noting that under sufficient regularity, integration does not affect the convergence rates.\nFor the data-based bandwidth selectors considered, the target is the AMISE bandwidth matrix. We say that a data-based selector converges to the AMISE selector at relative rate Op(n\u2212\u03b1), \u03b1 > 0 if\nIt has been established that the plug-in and smoothed cross validation selectors (given a single pilot bandwidth G) both converge at a relative rate of Op(n\u22122/(d+6)) [9][11] i.e., both these data-based selectors are consistent estimators.\nThe ks package[12] in R implements the plug-in and smoothed cross validation selectors (amongst others). This dataset (included in the base distribution of R) contains 272 records with two measurements each: the duration time of an eruption (minutes) and the waiting time until the next eruption (minutes) of the Old Faithful Geyser in Yellowstone National Park, USA.\nThe code fragment computes the kernel density estimate with the plug-in bandwidth matrix \n\n\n\n\n\n\n\n\nH\n\n^\n\n\n\n\nPI\n\n\n=\n\n\n[\n\n\n\n0.052\n\n\n0.510\n\n\n\n\n0.510\n\n\n8.882\n\n\n\n]\n\n\n.\n\n\n{\\displaystyle {\\hat {\\mathbf {H}}}_{\\operatorname {PI} }={\\begin{bmatrix}0.052&0.510\\\\0.510&8.882\\end{bmatrix}}.}\n\n Again, the coloured contours correspond to the smallest region which contains the respective probability mass: red = 25%, orange + red = 50%, yellow + orange + red = 75%. To compute the SCV selector, Hpi is replaced with Hscv. This is not displayed here since it is mostly similar to the plug-in estimate for this example.\nWe consider estimating the density of the Gaussian mixture (4\u03c0)\u22121\u2009exp(\u2212\u200a1\u20442 (x12 + x22)) + (4\u03c0)\u22121\u2009exp(\u2212\u200a1\u20442 ((x1 - 3.5)2 + x22)), from 500 randomly generated points. We employ the Matlab routine for 2-dimensional data. The routine is an automatic bandwidth selection method specifically designed for a second order Gaussian kernel.[13] The figure shows the joint density estimate that results from using the automatically selected bandwidth.\nMatlab script for the example\nType the following commands in Matlab after downloading and saving the function kde2d.m in the current directory.\nThe MISE is the expected integrated L2 distance between the density estimate and the true density function f. It is the most widely used, mostly due to its tractability and most software implement MISE-based bandwidth selectors. There are alternative optimality criteria, which attempt to cover cases where MISE is not an appropriate measure.[3]:34\u201337,78 The equivalent L1 measure, Mean Integrated Absolute Error, is\nIts mathematical analysis is considerably more difficult than the MISE ones. In practise, the gain appears not to be significant.[14] The L\u221e norm is the Mean Uniform Absolute Error\nwhich has been investigated only briefly.[15] Likelihood error criteria include those based on the Mean Kullback-Leibler distance\nand the Mean Hellinger distance\nThe KL can be estimated using a cross-validation method, although KL cross-validation selectors can be sub-optimal even if it remains consistent for bounded density functions.[16] MH selectors have been briefly examined in the literature.[17]\nAll these optimality criteria are distance based measures, and do not always correspond to more intuitive notions of closeness, so more visual criteria have been developed in response to this concern.[18]\nRecent research has shown that the kernel and its bandwidth can both be optimally and objectively chosen from the input data itself without making any assumptions about the form of the distribution.[19] The resulting kernel density estimate converges rapidly to the true probability distribution as samples are added: at a rate close to the \n\n\n\n\nn\n\n\u2212\n1\n\n\n\n\n{\\displaystyle n^{-1}}\n\n expected for parametric estimators.[19][20][21] This kernel estimator works for univariate and multivariate samples alike. The optimal kernel is defined in Fourier space\u2014as the optimal damping function \n\n\n\n\n\n\n\n\u03c8\n\nh\n\n\n^\n\n\n\n(\n\n\n\nt\n\u2192\n\n\n\n)\n\n\n{\\displaystyle {\\hat {\\psi _{h}}}({\\vec {t}})}\n\n (the Fourier transform of the kernel \n\n\n\n\n\n\nK\n^\n\n\n\n(\n\n\n\nx\n\u2192\n\n\n\n)\n\n\n{\\displaystyle {\\hat {K}}({\\vec {x}})}\n\n )-- in terms of the Fourier transform of the data \n\n\n\n\n\n\n\u03c6\n^\n\n\n\n(\n\n\n\nt\n\u2192\n\n\n\n)\n\n\n{\\displaystyle {\\hat {\\varphi }}({\\vec {t}})}\n\n, the empirical characteristic function (see Kernel density estimation):\n\n\n\n\n\n\n\n\n\u03c8\n\nh\n\n\n^\n\n\n\n(\n\n\n\nt\n\u2192\n\n\n\n)\n\u2261\n\n\nN\n\n2\n(\nN\n\u2212\n1\n)\n\n\n\n\n[\n1\n+\n\n\n1\n\u2212\n\n\n\n4\n(\nN\n\u2212\n1\n)\n\n\n\nN\n\n2\n\n\n\n|\n\n\n\n\n\u03c6\n^\n\n\n\n(\n\n\n\nt\n\u2192\n\n\n\n)\n\n\n|\n\n\n2\n\n\n\n\n\n\n\n\nI\n\n\n\nA\n\u2192\n\n\n\n\n(\n\n\n\nt\n\u2192\n\n\n\n)\n]\n\n\n\n{\\displaystyle {\\hat {\\psi _{h}}}({\\vec {t}})\\equiv {\\frac {N}{2(N-1)}}\\left[1+{\\sqrt {1-{\\frac {4(N-1)}{N^{2}|{\\hat {\\varphi }}({\\vec {t}})|^{2}}}}}I_{\\vec {A}}({\\vec {t}})\\right]}\n\n [21]\n\n\n\n\n\n\n\nf\n^\n\n\n\n(\nx\n)\n=\n\n\n1\n\n(\n2\n\u03c0\n\n)\n\nd\n\n\n\n\n\n\u222b\n\n\n\n\u03c6\n^\n\n\n\n(\n\n\n\nt\n\u2192\n\n\n\n)\n\n\u03c8\n\nh\n\n\n(\n\n\n\nt\n\u2192\n\n\n\n)\n\ne\n\n\u2212\ni\n\n\n\nt\n\u2192\n\n\n\n\u22c5\n\n\n\nx\n\u2192\n\n\n\n\n\nd\n\n\n\nt\n\u2192\n\n\n\n\n\n{\\displaystyle {\\hat {f}}(x)={\\frac {1}{(2\\pi )^{d}}}\\int {\\hat {\\varphi }}({\\vec {t}})\\psi _{h}({\\vec {t}})e^{-i{\\vec {t}}\\cdot {\\vec {x}}}d{\\vec {t}}}\n\n\nwhere, N is the number of data points, d is the number of dimensions (variables), and \n\n\n\n\nI\n\n\n\nA\n\u2192\n\n\n\n\n(\n\n\n\nt\n\u2192\n\n\n\n)\n\n\n{\\displaystyle I_{\\vec {A}}({\\vec {t}})}\n\n is a filter that is equal to 1 for 'accepted frequencies' and 0 otherwise. There are various ways to define this filter function, and a simple one that works for univariate or multivariate samples is called the 'lowest contiguous hypervolume filter'; \n\n\n\n\nI\n\n\n\nA\n\u2192\n\n\n\n\n(\n\n\n\nt\n\u2192\n\n\n\n)\n\n\n{\\displaystyle I_{\\vec {A}}({\\vec {t}})}\n\n is chosen such that the only accepted frequencies are a contiguous subset of frequencies surrounding the origin for which \n\n\n\n\n|\n\n\n\n\n\u03c6\n^\n\n\n\n(\n\n\n\nt\n\u2192\n\n\n\n)\n\n\n|\n\n\n2\n\n\n\u2265\n4\n(\nN\n\u2212\n1\n)\n\nN\n\n\u2212\n2\n\n\n\n\n{\\displaystyle |{\\hat {\\varphi }}({\\vec {t}})|^{2}\\geq 4(N-1)N^{-2}}\n\n (see [21] for a discussion of this and other filter functions).\nNote that direct calculation of the empirical characteristic function (ECF) is slow, since it essentially involves a direct Fourier transform of the data samples. However, it has been found that the ECF can be approximated accurately using a non-uniform fast Fourier transform (nuFFT) method,[20][21] which increases the calculation speed by several orders of magnitude (depending on the dimensionality of the problem). The combination of this objective KDE method and the nuFFT-based ECF approximation has been referred to as fastKDE in the literature.[21]", 
    "dbpedia_url": "http://dbpedia.org/resource/Multivariate_kernel_density_estimation", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Multivariate_kernel_density_estimation\n"
}
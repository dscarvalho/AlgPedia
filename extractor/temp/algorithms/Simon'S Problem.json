{
    "about": "In computational complexity theory and quantum computing, Simon's problem is a computational problem conceived to showcase the efficiency increase a quantum algorithm could have over a classic one. Although the problem itself is of little practical value, it is interesting because it provides an exponential speedup over any classical algorithm (in a black box model).[1]", 
    "name": "Simon'S Problem", 
    "classification": "Quantum Algorithms", 
    "full_text": "In computational complexity theory and quantum computing, Simon's problem is a computational problem conceived to showcase the efficiency increase a quantum algorithm could have over a classic one. Although the problem itself is of little practical value, it is interesting because it provides an exponential speedup over any classical algorithm (in a black box model).[1]\nThe problem deals with the model of decision tree complexity or query complexity and was conceived by Daniel Simon in 1994.[2] Simon exhibited a quantum algorithm, usually called Simon's algorithm, that solves the problem exponentially faster than any deterministic or probabilistic classical algorithm, requiring exponentially less computational power than the best classical probabilistic algorithm.\nThis problem yields an oracle separation between BPP and BQP, unlike the separation provided by the Deutsch-Jozsa algorithm, which separates P and EQP.\nSimon's algorithm was also the inspiration for Shor's algorithm. Both problems are special cases of the abelian hidden subgroup problem, which is now known to have efficient quantum algorithms.\n\n\nThe input to the problem is a function (implemented by a black box) \n\n\n\nf\n:\n{\n0\n,\n1\n\n}\n\nn\n\n\n\u2192\n{\n0\n,\n1\n\n}\n\nn\n\n\n\n\n{\\displaystyle f:\\{0,1\\}^{n}\\rightarrow \\{0,1\\}^{n}}\n\n, promised to satisfy the property that for some \n\n\n\ns\n\u2208\n{\n0\n,\n1\n\n}\n\nn\n\n\n\n\n{\\displaystyle s\\in \\{0,1\\}^{n}}\n\n we have for all \n\n\n\ny\n,\nz\n\u2208\n{\n0\n,\n1\n\n}\n\nn\n\n\n\n\n{\\displaystyle y,z\\in \\{0,1\\}^{n}}\n\n, \n\n\n\nf\n(\ny\n)\n=\nf\n(\nz\n)\n\n\n{\\displaystyle f(y)=f(z)}\n\n if and only if \n\n\n\ny\n=\nz\n\n\n{\\displaystyle y=z}\n\n or \n\n\n\ny\n\u2295\nz\n=\ns\n\n\n{\\displaystyle y\\oplus z=s}\n\n. Note that the case of \n\n\n\ns\n=\n\n0\n\nn\n\n\n\n\n{\\displaystyle s=0^{n}}\n\n is allowed, and corresponds to \n\n\n\nf\n\n\n{\\displaystyle f}\n\n being a permutation. The problem then is to find \n\n\n\ns\n\n\n{\\displaystyle s}\n\n.\nThe set of n-bit strings is a \n\n\n\n\n\nZ\n\n\n2\n\n\n\n\n{\\displaystyle \\mathbb {Z} _{2}}\n\n vector space under bitwise XOR. Given the promise, the preimage of f is either empty, or forms cosets with n-1 dimensions. Using quantum algorithms, we can, with arbitrarily high probability determine the basis vectors spanning this n-1 subspace since s is a vector orthogonal to all of the basis vectors.\nConsider the Hilbert space consisting of the tensor product of the Hilbert space of input strings, and output strings. Using Hadamard operations, we can prepare the initial state\nand then call the oracle to transform this state to\nHadamard transforms convert this state to\nWe perform a simultaneous measurement of both registers. If \n\n\n\ns\n\u22c5\ny\n=\n1\n\n\n{\\displaystyle s\\cdot y=1}\n\n, we have destructive interference. So, only the subspace \n\n\n\ns\n\u22c5\ny\n=\n0\n\n\n{\\displaystyle s\\cdot y=0}\n\n is picked out. Given enough samples of y, we can figure out the n-1 basis vectors, and compute s.\nSimon's algorithm requires \n\n\n\nO\n(\nn\n)\n\n\n{\\displaystyle O(n)}\n\n queries to the black box, whereas a classical algorithm would need at least \n\n\n\n\u03a9\n(\n\n2\n\nn\n\n/\n\n2\n\n\n)\n\n\n{\\displaystyle \\Omega (2^{n/2})}\n\n queries. It is also known that Simon's algorithm is optimal in the sense that any quantum algorithm to solve this problem requires \n\n\n\n\u03a9\n(\nn\n)\n\n\n{\\displaystyle \\Omega (n)}\n\n queries.[3][4]", 
    "dbpedia_url": "http://dbpedia.org/resource/Simon's_problem", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Simon's_problem\n"
}
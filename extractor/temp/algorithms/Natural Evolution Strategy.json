{
    "about": "Natural evolution strategies (NES) are a family of numerical optimization algorithms for black-box problems. Similar in spirit to evolution strategies, they iteratively update the (continuous) parameters of a search distribution by following the natural gradient towards higher expected fitness.", 
    "name": "Natural Evolution Strategy", 
    "classification": "Evolutionary Algorithms", 
    "full_text": "Natural evolution strategies (NES) are a family of numerical optimization algorithms for black-box problems. Similar in spirit to evolution strategies, they iteratively update the (continuous) parameters of a search distribution by following the natural gradient towards higher expected fitness.\n\n\nThe general procedure is as follows: the parameterized search distribution is used to produce a batch of search points, and the fitness function is evaluated at each such point. The distribution\u2019s parameters (which include strategy parameters) allow the algorithm to adaptively capture the (local) structure of the fitness function. For example, in the case of a Gaussian distribution, this comprises the mean and the covariance matrix. From the samples, NES estimates a search gradient on the parameters towards higher expected fitness. NES then performs a gradient ascent step along the natural gradient, a second order method which, unlike the plain gradient, renormalizes the update w.r.t. uncertainty. This step is crucial, since it prevents oscillations, premature convergence, and undesired effects stemming from a given parameterization. The entire process reiterates until a stopping criterion is met.\nAll members of the NES family operate based on the same principles. They differ in the type of probability distribution and the gradient approximation method used. Different search spaces require different search distributions; for example, in low dimensionality it can be highly beneficial to model the full covariance matrix. In high dimensions, on the other hand, a more scalable alternative is to limit the covariance to the diagonal only. In addition, highly multi-modal search spaces may benefit from more heavy-tailed distributions (such as Cauchy, as opposed to the Gaussian). A last distinction arises between distributions where we can analytically compute the natural gradient, and more general distributions where we need to estimate it from samples.\nLet \n\n\n\n\u03b8\n\n\n{\\displaystyle \\theta }\n\n denote the parameters of the search distribution \n\n\n\n\u03c0\n(\nx\n\n\n|\n\n\n\u03b8\n)\n\n\n{\\displaystyle \\pi (x\\,|\\,\\theta )}\n\n and \n\n\n\nf\n(\nx\n)\n\n\n{\\displaystyle f(x)}\n\n the fitness function evaluated at \n\n\n\nx\n\n\n{\\displaystyle x}\n\n. NES then pursues the objective of maximizing the expected fitness under the search distribution\nthrough gradient ascent. The gradient can be rewritten as\nthat is, the expected value of \n\n\n\nf\n(\nx\n)\n\n\n{\\displaystyle f(x)}\n\n times the log-derivatives at \n\n\n\nx\n\n\n{\\displaystyle x}\n\n. In practice, it is possible to use the Monte Carlo approximation based on a finite number of \n\n\n\n\u03bb\n\n\n{\\displaystyle \\lambda }\n\n samples\nFinally, the parameters of the search distribution can be updated iteratively\nInstead of using the plain stochastic gradient for updates, NES follows the natural gradient, which has been shown to possess numerous advantages over the plain (vanilla) gradient, e.g.:\nThe NES update is therefore\nwhere \n\n\n\n\nF\n\n\n\n{\\displaystyle \\mathbf {F} }\n\n is the Fisher information matrix. The Fisher matrix can sometimes be computed exactly, otherwise it is estimated from samples, reusing the log-derivatives \n\n\n\n\n\u2207\n\n\u03b8\n\n\nlog\n\u2061\n\u03c0\n(\nx\n\n|\n\n\u03b8\n)\n\n\n{\\displaystyle \\nabla _{\\theta }\\log \\pi (x|\\theta )}\n\n.\nNES utilizes rank-based fitness shaping in order to render the algorithm more robust, and invariant under monotonically increasing transformations of the fitness function. For this purpose, the fitness of the population is transformed into a set of utility values \n\n\n\n\nu\n\n1\n\n\n\u2265\n\u22ef\n\u2265\n\nu\n\n\u03bb\n\n\n\n\n{\\displaystyle u_{1}\\geq \\dots \\geq u_{\\lambda }}\n\n. Let \n\n\n\n\nx\n\ni\n\n\n\n\n{\\displaystyle x_{i}}\n\n denote the ith best individual. Replacing fitness with utility, the gradient estimate becomes\nThe choice of utility function is a free parameter of the algorithm.", 
    "dbpedia_url": "http://dbpedia.org/resource/Natural_evolution_strategy", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Natural_evolution_strategy\n"
}
{
    "about": "A successive approximation ADC is a type of analog-to-digital converter that converts a continuous analog waveform into a discrete digital representation via a binary search through all possible quantization levels before finally converging upon a digital output for each conversion.", 
    "name": "Successive Approximation Adc", 
    "classification": "Digital Signal Processing", 
    "full_text": "A successive approximation ADC is a type of analog-to-digital converter that converts a continuous analog waveform into a discrete digital representation via a binary search through all possible quantization levels before finally converging upon a digital output for each conversion.\n\n\nKey\nThe successive approximation analog-to-digital converter circuit typically consists of four chief subcircuits:\nThe successive approximation register is initialized so that the most significant bit (MSB) is equal to a digital 1. This code is fed into the DAC, which then supplies the analog equivalent of this digital code (Vref/2) into the comparator circuit for comparison with the sampled input voltage. If this analog voltage exceeds Vin the comparator causes the SAR to reset this bit; otherwise, the bit is left a 1. Then the next bit is set to 1 and the same test is done, continuing this binary search until every bit in the SAR has been tested. The resulting code is the digital approximation of the sampled input voltage and is finally output by the SAR at the end of the conversion (EOC).\nMathematically, let Vin = xVref, so x in [\u22121,\u00a01] is the normalized input voltage. The objective is to approximately digitize x to an accuracy of 1/2n. The algorithm proceeds as follows:\n\nwhere, s(x) is the signum-function (sgn(x)) (+1 for x \u2265 0, \u22121 for x < 0). It follows using mathematical induction that |xn \u2212 x| \u2264 1/2n.\nAs shown in the above algorithm, a SAR ADC requires:\nExample: The ten steps to converting an analog input to 10 bit digital, using successive approximation, is shown here, for all voltages from 5V to 0V in 0.1V iterations. Since the reference voltage is 5V, when the input voltage is also 5V all bits are set. As the voltage is decreased to 4.9V, only some of the least significant bits are cleared. The MSB will remain set until the input is one half the reference voltage, 2.5V.\nThe binary weights assigned to each bit, starting with the MSB, are 2.5, 1.25, 0.625, 0.3125, 0.15625, 0.078125, 0.0390625, 0.01953125, 0.009765625, 0.0048828125. All of these add up to 4.9951171875, meaning binary 1111111111, and is one LSB less than 5.\nWhen the analog input is being compared to the internal DAC output, it effectively is being compared to each of these binary weights, starting with the 2.5V and either keeping it or clearing it as a result. Then by adding the next weight to the previous result, comparing again, and repeating until all the bits and their weights have been compared to the input, the end result, a binary number, representing the analog input, is found.\nOne of the most common implementations of the successive approximation ADC, the charge-redistribution successive approximation ADC, uses a charge scaling DAC. The charge scaling DAC simply consists of an array of individually switched binary-weighted capacitors. The amount of charge upon each capacitor in the array is used to perform the aforementioned binary search in conjunction with a comparator internal to the DAC and the successive approximation register.\nWhen implemented as an analog circuit \u2013 where the value of each successive bit is not perfectly 2N (e.g. 1.1, 2.12, 4.05, 8.01, etc.) \u2013 a successive approximation approach might not output the ideal value because the binary search algorithm incorrectly removes what it believes to be half of the values the unknown input cannot be. Depending on the difference between actual and ideal performance, the maximum error can easily exceed several LSBs, especially as the error between the actual and ideal 2N becomes large for one or more bits. Since we don't know the actual unknown input, it is therefore very important that accuracy of the analog circuit used to implement a SAR ADC be very close to the ideal 2N values; otherwise, we cannot guarantee a best match search.", 
    "dbpedia_url": "http://dbpedia.org/resource/Successive_approximation_ADC", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Successive_approximation_ADC\n"
}
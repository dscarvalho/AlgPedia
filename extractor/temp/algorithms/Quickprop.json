{
    "about": "Quickprop is an iterative method for determining the minimum of the loss function of an artificial neural network, following an algorithm inspired by the Newton's method. Sometimes, the algorithm is classified to the group of the second order learning methods. It follows a quadratic approximation of the previous gradient step and the current gradient, which is expected to be closed to the minimum of the loss function, under the assumption that the loss function is locally approximately square, trying to describe it by means of an upwardly open parabola. The minimum is sought in the vertex of the parabola. The procedure requires only local information of the artificial neuron to which it is applied. The k-th approximation step is given by:", 
    "name": "Quickprop", 
    "classification": "Machine Learning Algorithms", 
    "full_text": "Quickprop is an iterative method for determining the minimum of the loss function of an artificial neural network, following an algorithm inspired by the Newton's method. Sometimes, the algorithm is classified to the group of the second order learning methods. It follows a quadratic approximation of the previous gradient step and the current gradient, which is expected to be closed to the minimum of the loss function, under the assumption that the loss function is locally approximately square, trying to describe it by means of an upwardly open parabola. The minimum is sought in the vertex of the parabola. The procedure requires only local information of the artificial neuron to which it is applied. The k-th approximation step is given by:\n\n\n\n\n\n\u0394\n\n(\nk\n)\n\n\n\n\nw\n\ni\nj\n\n\n=\n\n\u0394\n\n(\nk\n\u2212\n1\n)\n\n\n\n\nw\n\ni\nj\n\n\n\n(\n\n\n\n\n\u2207\n\ni\nj\n\n\n\n\nE\n\n(\nk\n)\n\n\n\n\n\n\u2207\n\ni\nj\n\n\n\n\nE\n\n(\nk\n\u2212\n1\n)\n\n\n\u2212\n\n\u2207\n\ni\nj\n\n\n\n\nE\n\n(\nk\n)\n\n\n\n\n\n)\n\n\n\n{\\displaystyle \\Delta ^{(k)}\\,w_{ij}=\\Delta ^{(k-1)}\\,w_{ij}\\left({\\frac {\\nabla _{ij}\\,E^{(k)}}{\\nabla _{ij}\\,E^{(k-1)}-\\nabla _{ij}\\,E^{(k)}}}\\right)}\n\n\nBeing \n\n\n\n\nw\n\ni\nj\n\n\n\n\n{\\displaystyle w_{ij}}\n\n the neuron j weight of its i input and E is the loss function.\nThe Quickprop algorithm is an implementation of the error backpropagation algorithm, but the network can behave chaotically during the learning phase due to large step sizes.", 
    "dbpedia_url": "http://dbpedia.org/resource/Quickprop", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Quickprop\n"
}
{
    "about": "A sanity test or sanity check is a basic test to quickly evaluate whether a claim or the result of a calculation can possibly be true. It is a simple check to see if the produced material is rational (that the material's creator was thinking rationally, applying sanity). The point of a sanity test is to rule out certain classes of obviously false results, not to catch every possible error. A rule-of-thumb may be checked to perform the test. The advantage of a sanity test, over performing a complete or rigorous test, is speed.", 
    "name": "Sanity Check", 
    "classification": "Error Detection And Correction", 
    "full_text": "A sanity test or sanity check is a basic test to quickly evaluate whether a claim or the result of a calculation can possibly be true. It is a simple check to see if the produced material is rational (that the material's creator was thinking rationally, applying sanity). The point of a sanity test is to rule out certain classes of obviously false results, not to catch every possible error. A rule-of-thumb may be checked to perform the test. The advantage of a sanity test, over performing a complete or rigorous test, is speed.\nIn arithmetic, for example, when multiplying by 9, using the divisibility rule for 9 to verify that the sum of digits of the result is divisible by 9 is a sanity test\u2014it will not catch every multiplication error, however it's a quick and simple method to discover many possible errors.\nIn computer science, a sanity test is a very brief run-through of the functionality of a computer program, system, calculation, or other analysis, to assure that part of the system or methodology works roughly as expected. This is often prior to a more exhaustive round of testing.\n\n\nA sanity test can refer to various orders of magnitude and other simple rule-of-thumb devices applied to cross-check mathematical calculations. For example:\nIn software development, the sanity test (a form of software testing which offers \"quick, broad, and shallow testing\"[1]) determines whether it is possible and reasonable to proceed with further testing.\nSoftware sanity tests are synonymous with smoke tests.[2] [3] A sanity or smoke test determines whether it is possible and reasonable to continue testing. It exercises the smallest subset of application functions needed to determine whether the systems are accessible and the application logic is responsive. If the sanity test fails, it is not reasonable to attempt more rigorous testing. Sanity tests are ways to avoid wasting time and effort by quickly determining whether an application is too flawed to merit any rigorous testing. Many companies run sanity tests on an automated build as part of their software development life cycle.[4]\nSanity testing may be a tool used while manually debugging software. An overall piece of software likely involves multiple subsystems between the input and the output. When the overall system is not working as expected, a sanity test can be used to make the decision on what to test next. If one subsystem is not giving the expected result, the other subsystems can be eliminated from further investigation until the problem with that one is solved.\nA \"Hello, World!\" program is often used as a sanity test for a development environment. If the program fails to compile or execute, the supporting environment likely has a configuration problem. If it works, any problem being diagnosed likely lies in the actual application in question.\nAnother, possibly more common usage of 'sanity test' is to denote checks which are performed within program code, usually on arguments to functions or returns therefrom, to see if the answers can be assumed to be correct. The more complicated the routine, the more important that its response be checked. The trivial case is checking to see that a file opened, written to, or closed, did not fail on these activities\u00a0\u2013 which is a sanity check often ignored by programmers.[5] But more complex items can also be sanity-checked for various reasons.\nExamples of this include bank account management systems which check that withdrawals are sane in not requesting more than the account contains, and that deposits or purchases are sane in fitting in with patterns established by historical data\u00a0\u2013 large deposits may be more closely scrutinized for accuracy, large purchase transactions may be double-checked with a card holder for validity against fraud, ATM withdrawals in foreign locations never before visited by the card holder might be cleared up with him, etc.; these are \"runtime\" sanity checks, as opposed to the \"development\" sanity checks mentioned above.", 
    "dbpedia_url": "http://dbpedia.org/resource/Sanity_check", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Sanity_check\n"
}
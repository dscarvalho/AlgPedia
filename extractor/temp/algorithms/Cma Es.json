{
    "about": "CMA-ES stands for Covariance Matrix Adaptation Evolution Strategy. Evolution strategies (ES) are stochastic, derivative-free methods for numerical optimization of non-linear or non-convex continuous optimization problems. They belong to the class of evolutionary algorithms and evolutionary computation. An evolutionary algorithm is broadly based on the principle of biological evolution, namely the repeated interplay of variation (via recombination and mutation) and selection: in each generation (iteration) new individuals (candidate solutions, denoted as \n\n\n\nx\n\n\n{\\displaystyle x}\n\n) are generated by variation, usually in a stochastic way, of the current parental individuals. Then, some individuals are selected to become the parents in the next generation based on their fitness or objective function value \n\n\n\nf\n(\nx\n)\n\n\n{\\displaystyle f(x)}\n\n. Like this, over the generation sequence, individuals with better and better \n\n\n\nf\n\n\n{\\displaystyle f}\n\n-values are generated.", 
    "classification": "Evolutionary Algorithms", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/CMA-ES\n", 
    "full_text": "CMA-ES stands for Covariance Matrix Adaptation Evolution Strategy. Evolution strategies (ES) are stochastic, derivative-free methods for numerical optimization of non-linear or non-convex continuous optimization problems. They belong to the class of evolutionary algorithms and evolutionary computation. An evolutionary algorithm is broadly based on the principle of biological evolution, namely the repeated interplay of variation (via recombination and mutation) and selection: in each generation (iteration) new individuals (candidate solutions, denoted as \n\n\n\nx\n\n\n{\\displaystyle x}\n\n) are generated by variation, usually in a stochastic way, of the current parental individuals. Then, some individuals are selected to become the parents in the next generation based on their fitness or objective function value \n\n\n\nf\n(\nx\n)\n\n\n{\\displaystyle f(x)}\n\n. Like this, over the generation sequence, individuals with better and better \n\n\n\nf\n\n\n{\\displaystyle f}\n\n-values are generated.\nIn an evolution strategy, new candidate solutions are sampled according to a multivariate normal distribution in the \n\n\n\n\n\nR\n\n\nn\n\n\n\n\n{\\displaystyle \\mathbb {R} ^{n}}\n\n. Recombination amounts to selecting a new mean value for the distribution. Mutation amounts to adding a random vector, a perturbation with zero mean. Pairwise dependencies between the variables in the distribution are represented by a covariance matrix. The covariance matrix adaptation (CMA) is a method to update the covariance matrix of this distribution. This is particularly useful, if the function \n\n\n\nf\n\n\n{\\displaystyle f}\n\n is ill-conditioned.\nAdaptation of the covariance matrix amounts to learning a second order model of the underlying objective function similar to the approximation of the inverse Hessian matrix in the Quasi-Newton method in classical optimization. In contrast to most classical methods, fewer assumptions on the nature of the underlying objective function are made. Only the ranking between candidate solutions is exploited for learning the sample distribution and neither derivatives nor even the function values themselves are required by the method.\n\n\nTwo main principles for the adaptation of parameters of the search distribution are exploited in the CMA-ES algorithm.\nFirst, a maximum-likelihood principle, based on the idea to increase the probability of successful candidate solutions and search steps. The mean of the distribution is updated such that the likelihood of previously successful candidate solutions is maximized. The covariance matrix of the distribution is updated (incrementally) such that the likelihood of previously successful search steps is increased. Both updates can be interpreted as a natural gradient descent. Also, in consequence, the CMA conducts an iterated principal components analysis of successful search steps while retaining all principal axes. Estimation of distribution algorithms and the Cross-Entropy Method are based on very similar ideas, but estimate (non-incrementally) the covariance matrix by maximizing the likelihood of successful solution points instead of successful search steps.\nSecond, two paths of the time evolution of the distribution mean of the strategy are recorded, called search or evolution paths. These paths contain significant information about the correlation between consecutive steps. Specifically, if consecutive steps are taken in a similar direction, the evolution paths become long. The evolution paths are exploited in two ways. One path is used for the covariance matrix adaptation procedure in place of single successful search steps and facilitates a possibly much faster variance increase of favorable directions. The other path is used to conduct an additional step-size control. This step-size control aims to make consecutive movements of the distribution mean orthogonal in expectation. The step-size control effectively prevents premature convergence yet allowing fast convergence to an optimum.\nIn the following the most commonly used (\u03bc/\u03bcw, \u03bb)-CMA-ES is outlined, where in each iteration step a weighted combination of the \u03bc best out of \u03bb new candidate solutions is used to update the distribution parameters. The main loop consists of three main parts: 1) sampling of new solutions, 2) re-ordering of the sampled solutions based on their fitness, 3) update of the internal state variables based on the re-ordered samples. A pseudocode of the algorithm looks as follows.\nThe order of the five update assignments is relevant. In the following, the update equations for the five state variables are specified.\nGiven are the search space dimension \n\n\n\nn\n\n\n{\\displaystyle n}\n\n and the iteration step \n\n\n\nk\n\n\n{\\displaystyle k}\n\n. The five state variables are\nThe iteration starts with sampling \n\n\n\n\u03bb\n>\n1\n\n\n{\\displaystyle \\lambda >1}\n\n candidate solutions \n\n\n\n\nx\n\ni\n\n\n\u2208\n\n\nR\n\n\nn\n\n\n\n\n{\\displaystyle x_{i}\\in \\mathbb {R} ^{n}}\n\n from a multivariate normal distribution \n\n\n\n\n\n\nN\n\n\n(\n\nm\n\nk\n\n\n,\n\n\u03c3\n\nk\n\n\n2\n\n\n\nC\n\nk\n\n\n)\n\n\n\n{\\displaystyle \\textstyle {\\mathcal {N}}(m_{k},\\sigma _{k}^{2}C_{k})}\n\n, i.e. for \n\n\n\ni\n=\n1\n,\n.\n.\n.\n,\n\u03bb\n\n\n{\\displaystyle i=1,...,\\lambda }\n\n\nThe second line suggests the interpretation as perturbation (mutation) of the current favorite solution vector \n\n\n\n\nm\n\nk\n\n\n\n\n{\\displaystyle m_{k}}\n\n (the distribution mean vector). The candidate solutions \n\n\n\n\nx\n\ni\n\n\n\n\n{\\displaystyle x_{i}}\n\n are evaluated on the objective function \n\n\n\nf\n:\n\n\nR\n\n\nn\n\n\n\u2192\n\nR\n\n\n\n{\\displaystyle f:\\mathbb {R} ^{n}\\to \\mathbb {R} }\n\n to be minimized. Denoting the \n\n\n\nf\n\n\n{\\displaystyle f}\n\n-sorted candidate solutions as\nthe new mean value is computed as\nwhere the positive (recombination) weights \n\n\n\n\nw\n\n1\n\n\n\u2265\n\nw\n\n2\n\n\n\u2265\n\u22ef\n\u2265\n\nw\n\n\u03bc\n\n\n>\n0\n\n\n{\\displaystyle w_{1}\\geq w_{2}\\geq \\dots \\geq w_{\\mu }>0}\n\n sum to one. Typically, \n\n\n\n\u03bc\n\u2264\n\u03bb\n\n/\n\n2\n\n\n{\\displaystyle \\mu \\leq \\lambda /2}\n\n and the weights are chosen such that \n\n\n\n\n\n\u03bc\n\nw\n\n\n:=\n1\n\n/\n\n\n\u2211\n\ni\n=\n1\n\n\n\u03bc\n\n\n\nw\n\ni\n\n\n2\n\n\n\u2248\n\u03bb\n\n/\n\n4\n\n\n\n{\\displaystyle \\textstyle \\mu _{w}:=1/\\sum _{i=1}^{\\mu }w_{i}^{2}\\approx \\lambda /4}\n\n. The only feedback used from the objective function here and in the following is an ordering of the sampled candidate solutions due to the indices \n\n\n\ni\n:\n\u03bb\n\n\n{\\displaystyle i:\\lambda }\n\n.\nThe step-size \n\n\n\n\n\u03c3\n\nk\n\n\n\n\n{\\displaystyle \\sigma _{k}}\n\n is updated using cumulative step-size adaptation (CSA), sometimes also denoted as path length control. The evolution path (or search path) \n\n\n\n\np\n\n\u03c3\n\n\n\n\n{\\displaystyle p_{\\sigma }}\n\n is updated first.\nwhere\nThe step-size \n\n\n\n\n\u03c3\n\nk\n\n\n\n\n{\\displaystyle \\sigma _{k}}\n\n is increased if and only if \n\n\n\n\u2225\n\np\n\n\u03c3\n\n\n\u2225\n\n\n{\\displaystyle \\|p_{\\sigma }\\|}\n\n is larger than the expected value\nand decreased if it is smaller. For this reason, the step-size update tends to make consecutive steps \n\n\n\n\nC\n\nk\n\n\n\u2212\n1\n\n\n\n\n{\\displaystyle C_{k}^{-1}}\n\n-conjugate, in that after the adaptation has been successful \n\n\n\n\n\n\n(\n\n\n\n\nm\n\nk\n+\n2\n\n\n\u2212\n\nm\n\nk\n+\n1\n\n\n\n\n\u03c3\n\nk\n+\n1\n\n\n\n\n)\n\n\nT\n\n\n\n\nC\n\nk\n\n\n\u2212\n1\n\n\n\n\n\n\nm\n\nk\n+\n1\n\n\n\u2212\n\nm\n\nk\n\n\n\n\n\u03c3\n\nk\n\n\n\n\n\u2248\n0\n\n\n\n{\\displaystyle \\textstyle \\left({\\frac {m_{k+2}-m_{k+1}}{\\sigma _{k+1}}}\\right)^{T}\\!C_{k}^{-1}{\\frac {m_{k+1}-m_{k}}{\\sigma _{k}}}\\approx 0}\n\n.[1]\nFinally, the covariance matrix is updated, where again the respective evolution path is updated first.\nwhere \n\n\n\nT\n\n\n{\\displaystyle T}\n\n denotes the transpose and\nThe covariance matrix update tends to increase the likelihood for \n\n\n\n\np\n\nc\n\n\n\n\n{\\displaystyle p_{c}}\n\n and for \n\n\n\n(\n\nx\n\ni\n:\n\u03bb\n\n\n\u2212\n\nm\n\nk\n\n\n)\n\n/\n\n\n\u03c3\n\nk\n\n\n\n\n{\\displaystyle (x_{i:\\lambda }-m_{k})/\\sigma _{k}}\n\n to be sampled from \n\n\n\n\n\nN\n\n\n(\n0\n,\n\nC\n\nk\n+\n1\n\n\n)\n\n\n{\\displaystyle {\\mathcal {N}}(0,C_{k+1})}\n\n. This completes the iteration step.\nThe number of candidate samples per iteration, \n\n\n\n\u03bb\n\n\n{\\displaystyle \\lambda }\n\n, is not determined a priori and can vary in a wide range. Smaller values, for example \n\n\n\n\u03bb\n=\n10\n\n\n{\\displaystyle \\lambda =10}\n\n, lead to more local search behavior. Larger values, for example \n\n\n\n\u03bb\n=\n10\nn\n\n\n{\\displaystyle \\lambda =10n}\n\n with default value \n\n\n\n\n\u03bc\n\nw\n\n\n\u2248\n\u03bb\n\n/\n\n4\n\n\n{\\displaystyle \\mu _{w}\\approx \\lambda /4}\n\n, render the search more global. Sometimes the algorithm is repeatedly restarted with increasing \n\n\n\n\u03bb\n\n\n{\\displaystyle \\lambda }\n\n by a factor of two for each restart.[2] Besides of setting \n\n\n\n\u03bb\n\n\n{\\displaystyle \\lambda }\n\n (or possibly \n\n\n\n\u03bc\n\n\n{\\displaystyle \\mu }\n\n instead, if for example \n\n\n\n\u03bb\n\n\n{\\displaystyle \\lambda }\n\n is predetermined by the number of available processors), the above introduced parameters are not specific to the given objective function and therefore not meant to be modified by the user.\nGiven the distribution parameters\u2014mean, variances and covariances\u2014the normal probability distribution for sampling new candidate solutions is the maximum entropy probability distribution over \n\n\n\n\n\nR\n\n\nn\n\n\n\n\n{\\displaystyle \\mathbb {R} ^{n}}\n\n, that is, the sample distribution with the minimal amount of prior information built into the distribution. More considerations on the update equations of CMA-ES are made in the following.\nThe CMA-ES implements a stochastic variable-metric method. In the very particular case of a convex-quadratic objective function\nthe covariance matrix \n\n\n\n\nC\n\nk\n\n\n\n\n{\\displaystyle C_{k}}\n\n adapts to the inverse of the Hessian matrix \n\n\n\nH\n\n\n{\\displaystyle H}\n\n, up to a scalar factor and small random fluctuations. More general, also on the function \n\n\n\ng\n\u2218\nf\n\n\n{\\displaystyle g\\circ f}\n\n, where \n\n\n\ng\n\n\n{\\displaystyle g}\n\n is strictly increasing and therefore order preserving and \n\n\n\nf\n\n\n{\\displaystyle f}\n\n is convex-quadratic, the covariance matrix \n\n\n\n\nC\n\nk\n\n\n\n\n{\\displaystyle C_{k}}\n\n adapts to \n\n\n\n\nH\n\n\u2212\n1\n\n\n\n\n{\\displaystyle H^{-1}}\n\n, up to a scalar factor and small random fluctuations.\nThe update equations for mean and covariance matrix maximize a likelihood while resembling an expectation-maximization algorithm. The update of the mean vector \n\n\n\nm\n\n\n{\\displaystyle m}\n\n maximizes a log-likelihood, such that\nwhere\ndenotes the log-likelihood of \n\n\n\nx\n\n\n{\\displaystyle x}\n\n from a multivariate normal distribution with mean \n\n\n\nm\n\n\n{\\displaystyle m}\n\n and any positive definite covariance matrix \n\n\n\nC\n\n\n{\\displaystyle C}\n\n. To see that \n\n\n\n\nm\n\nk\n+\n1\n\n\n\n\n{\\displaystyle m_{k+1}}\n\n is independent of \n\n\n\nC\n\n\n{\\displaystyle C}\n\n remark first that this is the case for any diagonal matrix \n\n\n\nC\n\n\n{\\displaystyle C}\n\n, because the coordinate-wise maximizer is independent of a scaling factor. Then, rotation of the data points or choosing \n\n\n\nC\n\n\n{\\displaystyle C}\n\n non-diagonal are equivalent.\nThe rank-\n\n\n\n\u03bc\n\n\n{\\displaystyle \\mu }\n\n update of the covariance matrix, that is, the right most summand in the update equation of \n\n\n\n\nC\n\nk\n\n\n\n\n{\\displaystyle C_{k}}\n\n, maximizes a log-likelihood in that\nfor \n\n\n\n\u03bc\n\u2265\nn\n\n\n{\\displaystyle \\mu \\geq n}\n\n (otherwise \n\n\n\nC\n\n\n{\\displaystyle C}\n\n is singular, but substantially the same result holds for \n\n\n\n\u03bc\n<\nn\n\n\n{\\displaystyle \\mu <n}\n\n). Here, \n\n\n\n\np\n\n\nN\n\n\n\n(\nx\n\n|\n\nC\n)\n\n\n{\\displaystyle p_{\\mathcal {N}}(x|C)}\n\n denotes the likelihood of \n\n\n\nx\n\n\n{\\displaystyle x}\n\n from a multivariate normal distribution with zero mean and covariance matrix \n\n\n\nC\n\n\n{\\displaystyle C}\n\n. Therefore, for \n\n\n\n\nc\n\n1\n\n\n=\n0\n\n\n{\\displaystyle c_{1}=0}\n\n and \n\n\n\n\nc\n\n\u03bc\n\n\n=\n1\n\n\n{\\displaystyle c_{\\mu }=1}\n\n, \n\n\n\n\nC\n\nk\n+\n1\n\n\n\n\n{\\displaystyle C_{k+1}}\n\n is the above maximum-likelihood estimator. See estimation of covariance matrices for details on the derivation.\nAkimoto et al.[3] and Glasmachers et al.[4] discovered independently that the update of the distribution parameters resembles the descend in direction of a sampled natural gradient of the expected objective function value E f (x) (to be minimized), where the expectation is taken under the sample distribution. With the parameter setting of \n\n\n\n\nc\n\n\u03c3\n\n\n=\n0\n\n\n{\\displaystyle c_{\\sigma }=0}\n\n and \n\n\n\n\nc\n\n1\n\n\n=\n0\n\n\n{\\displaystyle c_{1}=0}\n\n, i.e. without step-size control and rank-one update, CMA-ES can thus be viewed as an instantiation of Natural Evolution Strategies (NES).[3][4] The natural gradient is independent of the parameterization of the distribution. Taken with respect to the parameters \u03b8 of the sample distribution p, the gradient of E f (x) can be expressed as\nwhere \n\n\n\np\n(\nx\n)\n=\np\n(\nx\n\n|\n\n\u03b8\n)\n\n\n{\\displaystyle p(x)=p(x|\\theta )}\n\n depends on the parameter vector \n\n\n\n\u03b8\n\n\n{\\displaystyle \\theta }\n\n, the so-called score function, \n\n\n\n\n\u2207\n\n\n\u03b8\n\n\nln\n\u2061\np\n(\nx\n\n|\n\n\u03b8\n)\n=\n\n\n\n\n\u2207\n\n\n\u03b8\n\n\np\n(\nx\n)\n\n\np\n(\nx\n)\n\n\n\n\n\n{\\displaystyle \\nabla _{\\!\\theta }\\ln p(x|\\theta )={\\frac {\\nabla _{\\!\\theta }p(x)}{p(x)}}}\n\n, indicates the relative sensitivity of p w.r.t. \u03b8, and the expectation is taken with respect to the distribution p. The natural gradient of E f (x), complying with the Fisher information metric (an informational distance measure between probability distributions and the curvature of the relative entropy), now reads\nwhere the Fisher information matrix \n\n\n\n\nF\n\n\u03b8\n\n\n\n\n{\\displaystyle F_{\\theta }}\n\n is the expectation of the Hessian of -lnp and renders the expression independent of the chosen parameterization. Combining the previous equalities we get\nA Monte Carlo approximation of the latter expectation takes the average over \u03bb samples from p\nwhere the notation \n\n\n\ni\n:\n\u03bb\n\n\n{\\displaystyle i:\\lambda }\n\n from above is used and therefore \n\n\n\n\nw\n\ni\n\n\n\n\n{\\displaystyle w_{i}}\n\n are monotonously decreasing in \n\n\n\ni\n\n\n{\\displaystyle i}\n\n.\nOllivier et al.[5] finally found a rigorous derivation for the more robust weights, \n\n\n\n\nw\n\ni\n\n\n\n\n{\\displaystyle w_{i}}\n\n, as they are defined in the CMA-ES (weights are often zero for i > \u03bc). They are formulated as the consistent estimator for the CDF of \n\n\n\nf\n(\nX\n)\n,\nX\n\u223c\np\n(\n.\n\n|\n\n\u03b8\n)\n\n\n{\\displaystyle f(X),X\\sim p(.|\\theta )}\n\n at the point \n\n\n\nf\n(\n\nx\n\ni\n:\n\u03bb\n\n\n)\n\n\n{\\displaystyle f(x_{i:\\lambda })}\n\n, composed with a fixed monotonous decreased transformation \n\n\n\nw\n\n\n{\\displaystyle w}\n\n, i.e.,\nLet\nsuch that \n\n\n\np\n(\n.\n\n|\n\n\u03b8\n)\n\n\n{\\displaystyle p(.|\\theta )}\n\n is the density of the multivariate normal distribution \n\n\n\n\n\nN\n\n\n(\n\nm\n\nk\n\n\n,\n\n\u03c3\n\nk\n\n\n2\n\n\n\nC\n\nk\n\n\n)\n\n\n{\\displaystyle {\\mathcal {N}}(m_{k},\\sigma _{k}^{2}C_{k})}\n\n. Then, we have an explicit expression for the inverse of the Fisher information matrix where \n\n\n\n\n\u03c3\n\nk\n\n\n\n\n{\\displaystyle \\sigma _{k}}\n\n is fixed\nand for\nand, after some calculations, the updates in the CMA-ES turn out as[3]\n\nand\n\nwhere mat forms the proper matrix from the respective natural gradient sub-vector. That means, setting \n\n\n\n\nc\n\n1\n\n\n=\n\nc\n\n\u03c3\n\n\n=\n0\n\n\n{\\displaystyle c_{1}=c_{\\sigma }=0}\n\n, the CMA-ES updates descend in direction of the approximation \n\n\n\n\n\n\n\u2207\n~\n\n\n\n\n\n\n\nE\n^\n\n\n\n\n\u03b8\n\n\n(\nf\n)\n\n\n{\\displaystyle {\\tilde {\\nabla }}{\\widehat {E}}_{\\theta }(f)}\n\n of the natural gradient while using different step-sizes (learning rates 1 and \n\n\n\n\nc\n\n\u03bc\n\n\n\n\n{\\displaystyle c_{\\mu }}\n\n) for the orthogonal parameters \n\n\n\nm\n\n\n{\\displaystyle m}\n\n and \n\n\n\nC\n\n\n{\\displaystyle C}\n\n respectively. The most recent version of CMA-ES also use a different function \n\n\n\nw\n\n\n{\\displaystyle w}\n\n for \n\n\n\nm\n\n\n{\\displaystyle m}\n\n and \n\n\n\nC\n\n\n{\\displaystyle C}\n\n with negative values only for the latter (so-called active CMA).\nIt is comparatively easy to see that the update equations of CMA-ES satisfy some stationarity conditions, in that they are essentially unbiased. Under neutral selection, where \n\n\n\n\nx\n\ni\n:\n\u03bb\n\n\n\u223c\n\n\nN\n\n\n(\n\nm\n\nk\n\n\n,\n\n\u03c3\n\nk\n\n\n2\n\n\n\nC\n\nk\n\n\n)\n\n\n{\\displaystyle x_{i:\\lambda }\\sim {\\mathcal {N}}(m_{k},\\sigma _{k}^{2}C_{k})}\n\n, we find that\nand under some mild additional assumptions on the initial conditions\nand with an additional minor correction in the covariance matrix update for the case where the indicator function evaluates to zero, we find\nInvariance properties imply uniform performance on a class of objective functions. They have been argued to be an advantage, because they allow to generalize and predict the behavior of the algorithm and therefore strengthen the meaning of empirical results obtained on single functions. The following invariance properties have been established for CMA-ES.\nAny serious parameter optimization method should be translation invariant, but most methods do not exhibit all the above described invariance properties. A prominent example with the same invariance properties is the Nelder\u2013Mead method, where the initial simplex must be chosen respectively.\nConceptual considerations like the scale-invariance property of the algorithm, the analysis of simpler evolution strategies, and overwhelming empirical evidence suggest that the algorithm converges on a large class of functions fast to the global optimum, denoted as \n\n\n\n\nx\n\n\u2217\n\n\n\n\n{\\displaystyle x^{*}}\n\n. On some functions, convergence occurs independently of the initial conditions with probability one. On some functions the probability is smaller than one and typically depends on the initial \n\n\n\n\nm\n\n0\n\n\n\n\n{\\displaystyle m_{0}}\n\n and \n\n\n\n\n\u03c3\n\n0\n\n\n\n\n{\\displaystyle \\sigma _{0}}\n\n. Empirically, the fastest possible convergence rate in \n\n\n\nk\n\n\n{\\displaystyle k}\n\n for rank-based direct search methods can often be observed (depending on the context denoted as linear or log-linear or exponential convergence). Informally, we can write\nfor some \n\n\n\nc\n>\n0\n\n\n{\\displaystyle c>0}\n\n, and more rigorously\nor similarly,\nThis means that on average the distance to the optimum decreases in each iteration by a \"constant\" factor, namely by \n\n\n\nexp\n\u2061\n(\n\u2212\nc\n)\n\n\n{\\displaystyle \\exp(-c)}\n\n. The convergence rate \n\n\n\nc\n\n\n{\\displaystyle c}\n\n is roughly \n\n\n\n0.1\n\u03bb\n\n/\n\nn\n\n\n{\\displaystyle 0.1\\lambda /n}\n\n, given \n\n\n\n\u03bb\n\n\n{\\displaystyle \\lambda }\n\n is not much larger than the dimension \n\n\n\nn\n\n\n{\\displaystyle n}\n\n. Even with optimal \n\n\n\n\u03c3\n\n\n{\\displaystyle \\sigma }\n\n and \n\n\n\nC\n\n\n{\\displaystyle C}\n\n, the convergence rate \n\n\n\nc\n\n\n{\\displaystyle c}\n\n cannot largely exceed \n\n\n\n0.25\n\u03bb\n\n/\n\nn\n\n\n{\\displaystyle 0.25\\lambda /n}\n\n, given the above recombination weights \n\n\n\n\nw\n\ni\n\n\n\n\n{\\displaystyle w_{i}}\n\n are all non-negative. The actual linear dependencies in \n\n\n\n\u03bb\n\n\n{\\displaystyle \\lambda }\n\n and \n\n\n\nn\n\n\n{\\displaystyle n}\n\n are remarkable and they are in both cases the best one can hope for in this kind of algorithm. Yet, a rigorous proof of convergence is missing.\nUsing a non-identity covariance matrix for the multivariate normal distribution in evolution strategies is equivalent to a coordinate system transformation of the solution vectors,[6] mainly because the sampling equation\ncan be equivalently expressed in an \"encoded space\" as\nThe covariance matrix defines a bijective transformation (encoding) for all solution vectors into a space, where the sampling takes place with identity covariance matrix. Because the update equations in the CMA-ES are invariant under linear coordinate system transformations, the CMA-ES can be re-written as an adaptive encoding procedure applied to a simple evolution strategy with identity covariance matrix.[6] This adaptive encoding procedure is not confined to algorithms that sample from a multivariate normal distribution (like evolution strategies), but can in principle be applied to any iterative search method.\nIn contrast to most other evolutionary algorithms, the CMA-ES is, from the users perspective, quasi parameter-free. The user has to choose an initial solution point, \n\n\n\n\nm\n\n0\n\n\n\u2208\n\n\nR\n\n\nn\n\n\n\n\n{\\displaystyle m_{0}\\in \\mathbb {R} ^{n}}\n\n, and the initial step-size, \n\n\n\n\n\u03c3\n\n0\n\n\n>\n0\n\n\n{\\displaystyle \\sigma _{0}>0}\n\n. Optionally, the number of candidate samples \u03bb (population size) can be modified by the user in order to change the characteristic search behavior (see above) and termination conditions can or should be adjusted to the problem at hand.\nThe CMA-ES has been empirically successful in hundreds of applications and is considered to be useful in particular on non-convex, non-separable, ill-conditioned, multi-modal or noisy objective functions[citation needed]. The search space dimension ranges typically between two and a few hundred. Assuming a black-box optimization scenario, where gradients are not available (or not useful) and function evaluations are the only considered cost of search, the CMA-ES method is likely to be outperformed by other methods in the following conditions:\nOn separable functions, the performance disadvantage is likely to be most significant in that CMA-ES might not be able to find at all comparable solutions. On the other hand, on non-separable functions that are ill-conditioned or rugged or can only be solved with more than \n\n\n\n100\nn\n\n\n{\\displaystyle 100n}\n\n function evaluations, the CMA-ES shows most often superior performance.\nThe (1+1)-CMA-ES[7] generates only one candidate solution per iteration step which becomes the new distribution mean if it is better than the current mean. For \n\n\n\n\nc\n\nc\n\n\n=\n1\n\n\n{\\displaystyle c_{c}=1}\n\n the (1+1)-CMA-ES is a close variant of Gaussian adaptation. Some Natural Evolution Strategies are close variants of the CMA-ES with specific parameter settings. Natural Evolution Strategies do not utilize evolution paths (that means in CMA-ES setting \n\n\n\n\nc\n\nc\n\n\n=\n\nc\n\n\u03c3\n\n\n=\n1\n\n\n{\\displaystyle c_{c}=c_{\\sigma }=1}\n\n) and they formalize the update of variances and covariances on a Cholesky factor instead of a covariance matrix. The CMA-ES has also been extended to multiobjective optimization as MO-CMA-ES.[8] Another remarkable extension has been the addition of a negative update of the covariance matrix with the so-called active CMA.[9]\nWith the advent of niching methods in evolutionary strategies, the question of an optimal niche radius arises. An \"adaptive individual niche radius\" is introduced in [10]", 
    "name": "Cma Es"
}
{
    "about": "Generalized processor sharing (GPS) is an ideal scheduling algorithm for network schedulers.", 
    "name": "Generalized Processor Sharing", 
    "classification": "Scheduling Algorithms", 
    "full_text": "Generalized processor sharing (GPS) is an ideal scheduling algorithm for network schedulers.\nIt is related to the Fair queuing principle, that groups the packets into classes, and share the service capacity between them. The GPS shares this capacity according to some fixed weights.[1]\nIn processor scheduling, generalized processor sharing is \"an idealized scheduling algorithm that achieves perfect fairness. All practical schedulers approximate GPS and use it as a reference to measure fairness.\"[2] Generalized processor sharing assumes that traffic is fluid (infinitesimal packet sizes), and can be arbitrarily split. There are several service disciplines which track the performance of GPS quite closely such as weighted fair queuing (WFQ),[3] also known as packet-by-packet generalized processor sharing (PGPS).\n\n\nIn a network such as the internet, different application types require different levels of performance. For example, email is a genuinely store and forward kind of application, but videoconferencing isn't since it requires low latency. When packets are queued up on one end of a congested link, the node usually has some freedom in deciding the order in which it should send the queued packets. One example ordering is simply first-come, first-served, which works fine if the sizes of the queues are small, but can result in problems if there are latency sensitive packets being blocked by packets from bursty, higher bandwidth applications.\nIn GPS, a scheduler handling N flows (also called \"classes\", or \"sessions\") is configured with one weight \n\n\n\n\nw\n\ni\n\n\n\n\n{\\displaystyle w_{i}}\n\n for each flow. Then, the GPS ensures that, considering one flows \n\n\n\ni\n\n\n{\\displaystyle i}\n\n, and some time interval \n\n\n\n(\ns\n,\nt\n]\n\n\n{\\displaystyle (s,t]}\n\n such that the flow \n\n\n\ni\n\n\n{\\displaystyle i}\n\n is continuously backlogged on this interval (i.e. the queue is never empty), then, for any other flow \n\n\n\nj\n\n\n{\\displaystyle j}\n\n, the following relation holds\nwhere \n\n\n\n\nO\n\nk\n\n\n(\ns\n,\nt\n)\n\n\n{\\displaystyle O_{k}(s,t)}\n\n denotes the amount of bits of the flow \n\n\n\nk\n\n\n{\\displaystyle k}\n\n outputted on interval \n\n\n\n(\ns\n,\nt\n]\n\n\n{\\displaystyle (s,t]}\n\n.\nThen, it can be proved that each flow \n\n\n\ni\n\n\n{\\displaystyle i}\n\n will receive at least a rate\nwhere \n\n\n\nR\n\n\n{\\displaystyle R}\n\n is the rate of the server.\nThis is a minimal rate. If some flow does not use its bandwidth during some period, this remaining capacity is shared by the active flows wrt their respective weights. For example, consider a GPS server with \n\n\n\n\nw\n\n1\n\n\n=\n2\n,\n\nw\n\n2\n\n\n=\n\nw\n\n3\n\n\n=\n1\n\n\n{\\displaystyle w_{1}=2,w_{2}=w_{3}=1}\n\n. The first flow will receive at least half of the capacity, whereas the other two only get 1/4. Nevertheless, if on some time interval \n\n\n\n(\ns\n,\nt\n]\n\n\n{\\displaystyle (s,t]}\n\n, only the second and third flows are active, they will receive each one half of the capacity.\nIn GPS, and all protocols inspired by GPS, the choice of the weights is left to the network administrator.\nGeneralized processor sharing assumes that the traffic is fluid, i.e., infinitely divisible so that whenever an application type has packets in the queue, it will receive exactly the fraction of the server given by the formula above. However, traffic is not fluid and consists of packets, possibly of variable sizes. Therefore, GPS is mostly a theoretical idea, and several scheduling algorithms have been developed to approximate this GPS ideal: PGPS, aka Weighted fair queuing, is the most known implementation of GPS, but its has some drawbacks, and several other implementations have been proposed, as Deficit round robin or WF2Q.[4]\nGPS is considered as a fair ideal, and all its approximations \"use it as a reference to measure fairness.\"[2] Nevertheless, several Fairness measures exist.\nGPS is insensible to packet sizes, since it assumes a fluid model.", 
    "dbpedia_url": "http://dbpedia.org/resource/Generalized_processor_sharing", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Generalized_processor_sharing\n"
}
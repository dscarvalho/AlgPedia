{
    "about": "The Suzuki-Kasami algorithm[1] is a token-based algorithm for achieving mutual exclusion in distributed systems. The process holding the token is the only process able to enter its critical section.", 
    "classification": "Distributed Algorithms", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Suzuki-Kasami_algorithm\n", 
    "full_text": "The Suzuki-Kasami algorithm[1] is a token-based algorithm for achieving mutual exclusion in distributed systems. The process holding the token is the only process able to enter its critical section.\nThis is a modification to Ricart\u2013Agrawala algorithm[2] in which a REQUEST and REPLY message are used for attaining the critical section. but in this algorithm they introduced a method in which a seniority vise and also by handing over the critical section to other node by sending a single PRIVILEGE message to other node. So, the node which has the privilege it can use the critical section and if it does not have one it cannot. If a process wants to enter its critical section and it does not have the token, it broadcasts a request message to all other processes in the system. The process that has the token, if it is not currently in a critical section, will then send the token to the requesting process. The algorithm makes use of increasing Request Numbers to allow messages to arrive out-of-order.\n\n\nLet \n\n\n\nn\n\n\n{\\displaystyle n}\n\n be the number of processes. Each process is identified by an integer in \n\n\n\n1\n,\n.\n.\n.\n,\nn\n\n\n{\\displaystyle 1,...,n}\n\n.\nEach process maintains one data structure:\nThe token contains two data structures:\nWhen process \n\n\n\ni\n\n\n{\\displaystyle i}\n\n wants to enter the CS, if it does not have the token, it:\nWhen process \n\n\n\ni\n\n\n{\\displaystyle i}\n\n leaves the CS, it:\nWhen process \n\n\n\ni\n\n\n{\\displaystyle i}\n\n receives a request from \n\n\n\nj\n\n\n{\\displaystyle j}\n\n with sequence number \n\n\n\ns\n\n\n{\\displaystyle s}\n\n, it:\nA process enters the CS when it has acquired the token.\nThe main design issues of the algorithm:\nData structures used to deal with these two aspects:\nThe token contains two data structures:", 
    "name": "Suzuki Kasami Algorithm"
}
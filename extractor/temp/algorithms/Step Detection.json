{
    "about": "In statistics and signal processing, step detection (also known as step smoothing, step filtering, shift detection, jump detection or edge detection) is the process of finding abrupt changes (steps, jumps, shifts) in the mean level of a time series or signal. It is usually considered as a special case of the statistical method known as change detection or change point detection. Often, the step is small and the time series is corrupted by some kind of noise, and this makes the problem challenging because the step may be hidden by the noise. Therefore, statistical and/or signal processing algorithms are often required.", 
    "name": "Step Detection", 
    "classification": "Signal Processing", 
    "full_text": "In statistics and signal processing, step detection (also known as step smoothing, step filtering, shift detection, jump detection or edge detection) is the process of finding abrupt changes (steps, jumps, shifts) in the mean level of a time series or signal. It is usually considered as a special case of the statistical method known as change detection or change point detection. Often, the step is small and the time series is corrupted by some kind of noise, and this makes the problem challenging because the step may be hidden by the noise. Therefore, statistical and/or signal processing algorithms are often required.\nThe step detection problem occurs in multiple scientific and engineering contexts, for example in statistical process control[1] (the control chart being the most directly related method), in exploration geophysics (where the problem is to segment a well-log recording into stratigraphic zones[2]), in genetics (the problem of separating microarray data into similar copy-number regimes[3]), and in biophysics (detecting state transitions in a molecular machine as recorded in time-position traces[4]). For 2D signals, the related problem of edge detection has been studied intensively for image processing.[5]\n\n\nWhen the step detection must be performed as and when the data arrives, then online algorithms are usually used,[6] and it becomes a special case of sequential analysis. Such algorithms include the classical CUSUM method applied to changes in mean. [7]\nBy contrast, offline algorithms are applied to the data potentially long after it has been received. Most offline algorithms for step detection in digital data can be categorised as top-down, bottom-up, sliding window, or global methods.\nThese algorithms start with the assumption that there are no steps and introduce possible candidate steps one at a time, testing each candidate to find the one that minimizes some criteria (such as the least-squares fit of the estimated, underlying piecewise constant signal). An example is the stepwise jump placement algorithm, first studied in geophysical problems,[2] that has found recent uses in modern biophysics.[8]\nBottom-up algorithms take the \"opposite\" approach to top-down methods, first assuming that there is a step in between every sample in the digital signal, and then successively merging steps based on some criteria tested for every candidate merge.\nBy considering a small \"window\" of the signal, these algorithms look for evidence of a step occurring within the window. The window \"slides\" across the time series, one time step at a time. The evidence for a step is tested by statistical procedures, for example, by use of the two-sample Student's t-test. Alternatively, a nonlinear filter such as the median filter is applied to the signal. Filters such as these attempt to remove the noise whilst preserving the abrupt steps.\nGlobal algorithms consider the entire signal in one go, and attempt to find the steps in the signal by some kind of optimization procedure. Algorithms include wavelet methods,[9] and total variation denoising which uses methods from convex optimization. Where the steps can be modelled as a Markov chain, then Hidden Markov Models are also often used (a popular approach in the biophysics community[10]). When there are only a few unique values of the mean, then k-means clustering can also be used.\nBecause steps and (independent) noise have theoretically infinite bandwidth and so overlap in the Fourier basis, signal processing approaches to step detection generally do not use classical smoothing techniques such as the low pass filter. Instead, most algorithms are explicitly nonlinear or time-varying.[11]\nBecause the aim of step detection is to find a series of instantaneous jumps in the mean of a signal, the wanted, underlying, mean signal is piecewise constant. For this reason, step detection can be profitably viewed as the problem of recovering a piecewise constant signal corrupted by noise. There are two complementary models for piecewise constant signals: as 0-degree splines with a few knots, or as level sets with a few unique levels. Many algorithms for step detection are therefore best understood as either 0-degree spline fitting, or level set recovery, methods.\nWhen there are only a few unique values of the mean, clustering techniques such as k-means clustering or mean-shift are appropriate. These techniques are best understood as methods for finding a level set description of the underlying piecewise constant signal.\nMany algorithms explicitly fit 0-degree splines to the noisy signal in order to detect steps (including stepwise jump placement methods[2][8]), but there are other popular algorithms that can also be seen to be spline fitting methods after some transformation, for example total variation denoising.[12]\nAll the algorithms mentioned above have certain advantages and disadvantages in particular circumstances, yet, a surprisingly large number of these step detection algorithms are special cases of a more general algorithm.[11] This algorithm involves the minimization of a global functional:[13]\n\n\n\n\nH\n[\nm\n]\n=\n\n\u2211\n\ni\n=\n1\n\n\nN\n\n\n\n\u2211\n\nj\n=\n1\n\n\nN\n\n\n\u039b\n(\n\nx\n\ni\n\n\n\u2212\n\nm\n\nj\n\n\n,\n\nm\n\ni\n\n\n\u2212\n\nm\n\nj\n\n\n,\n\nx\n\ni\n\n\n\u2212\n\nx\n\nj\n\n\n,\ni\n\u2212\nj\n)\n\n\n{\\displaystyle H[m]=\\sum _{i=1}^{N}\\sum _{j=1}^{N}\\Lambda (x_{i}-m_{j},m_{i}-m_{j},x_{i}-x_{j},i-j)}\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n(1)\nHere, xi for i\u00a0=\u00a01,\u00a0....,\u00a0N is the discrete-time input signal of length N, and mi is the signal output from the algorithm. The goal is to minimize H[m] with respect to the output signal\u00a0m. The form of the function \n\n\n\n\n\u039b\n\n\n\n{\\displaystyle \\scriptstyle \\Lambda }\n\n determines the particular algorithm. For example, choosing:\nwhere I(S)\u00a0=\u00a00 if the condition S is false, and one otherwise, obtains the total variation denoising algorithm with regularization parameter \n\n\n\n\u03b3\n\n\n{\\displaystyle \\gamma }\n\n. Similarly:\nleads to the mean shift algorithm, when using an adaptive step size Euler integrator initialized with the input signal\u00a0x.[13] Here W\u00a0>\u00a00 is a parameter that determines the support of the mean shift kernel. Another example is:\nleading to the bilateral filter, where \n\n\n\n\n\u03b2\n>\n0\n\n\n\n{\\displaystyle \\scriptstyle \\beta >0}\n\n is the tonal kernel parameter, and W is the spatial kernel support. Yet another special case is:\nspecifying a group of algorithms that attempt to greedily fit 0-degree splines to the signal.[2][8] Here, \n\n\n\n\n\n\n|\nx\n|\n\n\n0\n\n\n\n\n\n{\\displaystyle \\scriptstyle \\left|x\\right|^{0}}\n\n is defined as zero if x\u00a0=\u00a00, and one otherwise.\nMany of the functionals in equation (1) defined by the particular choice of \n\n\n\n\n\u039b\n\n\n\n{\\displaystyle \\scriptstyle \\Lambda }\n\n are convex: they can be minimized using methods from convex optimization. Still others are non-convex but a range of algorithms for minimizing these functionals have been devised.[13]\nA classical variational method for step detection is the Potts model. It is given by the non-convex optimization problem\nThe term \n\n\n\n\u2225\n\u2207\nu\n\n\u2225\n\n0\n\n\n=\n#\n{\ni\n:\n\nu\n\ni\n\n\n\u2260\n\nu\n\ni\n+\n1\n\n\n}\n\n\n{\\displaystyle \\|\\nabla u\\|_{0}=\\#\\{i:u_{i}\\neq u_{i+1}\\}}\n\n penalizes the number of jumps and the term \n\n\n\n\u2225\nu\n\u2212\nx\n\n\u2225\n\np\n\n\np\n\n\n=\n\n\u2211\n\ni\n=\n1\n\n\nN\n\n\n\n|\n\n\nu\n\ni\n\n\n\u2212\n\nx\n\ni\n\n\n\n\n|\n\n\np\n\n\n\n\n{\\displaystyle \\|u-x\\|_{p}^{p}=\\sum _{i=1}^{N}|u_{i}-x_{i}|^{p}}\n\n measures fidelity to data x. The parameter \u03b3 > 0 controls the tradeoff between regularity and data fidelity. Since the minimizer \n\n\n\n\nu\n\n\u2217\n\n\n\n\n{\\displaystyle u^{*}}\n\n is piecewise constant the steps are given by the non-zero locations of the gradient \n\n\n\n\u2207\n\nu\n\n\u2217\n\n\n\n\n{\\displaystyle \\nabla u^{*}}\n\n. For \n\n\n\np\n=\n2\n\n\n{\\displaystyle p=2}\n\n and \n\n\n\np\n=\n1\n\n\n{\\displaystyle p=1}\n\n there are fast algorithms which give an exact solution of the Potts problem in \n\n\n\nO\n(\n\nN\n\n2\n\n\n)\n\n\n{\\displaystyle O(N^{2})}\n\n. [14][15][16]", 
    "dbpedia_url": "http://dbpedia.org/resource/Step_detection", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Step_detection\n"
}
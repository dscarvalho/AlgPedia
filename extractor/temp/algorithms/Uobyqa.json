{
    "about": "UOBYQA (Unconstrained Optimization BY Quadratic Approximation)[1][2][3] is a numerical optimization algorithm by Michael J. D. Powell. It is also the name of Powell's Fortran 77 implementation of the algorithm.", 
    "name": "Uobyqa", 
    "classification": "Optimization Algorithms And Methods", 
    "full_text": "UOBYQA (Unconstrained Optimization BY Quadratic Approximation)[1][2][3] is a numerical optimization algorithm by Michael J. D. Powell. It is also the name of Powell's Fortran 77 implementation of the algorithm.\nUOBYQA solves unconstrained optimization problems without using derivatives, which makes it a derivative-free algorithm. The algorithm is iterative and exploits trust-region technique. On each iteration, the algorithm establishes a quadratic model \n\n\n\n\nQ\n\nk\n\n\n\n\n{\\displaystyle Q_{k}}\n\n by interpolating the objective function at \n\n\n\n(\nn\n+\n1\n)\n(\nn\n+\n2\n)\n\n/\n\n2\n\n\n{\\displaystyle (n+1)(n+2)/2}\n\n points and then minimizes \n\n\n\n\nQ\n\nk\n\n\n\n\n{\\displaystyle Q_{k}}\n\n within a trust region.\nAfter UOBYQA, Powell developed NEWUOA, which also solves unconstrained optimization problems without using derivatives. In general, NEWUOA is much more efficient than UOBYQA and is capable of solving much larger problems (with up to several hundreds of variables). A major difference between them is that NEWUOA constructs quadratic models by interpolating the objective function at much less than \n\n\n\n(\nn\n+\n1\n)\n(\nn\n+\n2\n)\n\n/\n\n2\n\n\n{\\displaystyle (n+1)(n+2)/2}\n\n points (\n\n\n\n2\nn\n+\n1\n\n\n{\\displaystyle 2n+1}\n\n by default[4]). For general usage, NEWUOA is recommended to replace UOBYQA.\nThe UOBYQA software is distributed under The GNU Lesser General Public License (LGPL).[3]", 
    "dbpedia_url": "http://dbpedia.org/resource/UOBYQA", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/UOBYQA\n"
}
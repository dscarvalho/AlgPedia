{
    "about": "Particle filters or Sequential Monte Carlo (SMC) methods are a set of genetic-type particle Monte Carlo methodologies to solve the filtering problem. The term \"particle filters\" was first coined in 1996 by Del Moral[1] in reference to mean field interacting particle methods used in fluid mechanics since the beginning of the 1960s. The terminology \"sequential Monte Carlo\" was proposed by Liu and Chen in 1998.", 
    "name": "Particle Filter", 
    "classification": "Computational Statistics", 
    "full_text": "Particle filters or Sequential Monte Carlo (SMC) methods are a set of genetic-type particle Monte Carlo methodologies to solve the filtering problem. The term \"particle filters\" was first coined in 1996 by Del Moral[1] in reference to mean field interacting particle methods used in fluid mechanics since the beginning of the 1960s. The terminology \"sequential Monte Carlo\" was proposed by Liu and Chen in 1998.\nFrom the statistical and probabilistic point of view, particle filters can be interpreted as mean field particle interpretations of Feynman-Kac probability measures.[2][3][4][5][6] These particle integration techniques were developed in molecular chemistry and computational physics by Theodore E. Harris and Herman Kahn in 1951, Marshall. N. Rosenbluth and Arianna. W. Rosenbluth in 1955[7] and more recently by Jack H. Hetherington in 1984.[8] In computational physics, these Feynman-Kac type path particle integration methods are also used in Quantum Monte Carlo, and more specifically Diffusion Monte Carlo methods.[9][10][11] Feynman-Kac interacting particle methods are also strongly related to mutation-selection genetic algorithms currently used in evolutionary computing to solve complex optimization problems.\nThe particle filter methodology is used to solve Hidden Markov Chain (HMM) and nonlinear filtering problems arising in signal processing and Bayesian statistical inference. The filtering problem consists of estimating the internal states in dynamical systems when partial observations are made, and random perturbations are present in the sensors as well as in the dynamical system. The objective is to compute the conditional probability (a.k.a. posterior distributions) of the states of some Markov process, given some noisy and partial observations. With the notable exception of linear-Gaussian signal-observation models (Kalman filter) or wider classes of models (Benes filter[12]) Mireille Chaleyat-Maurel and Dominique Michel proved in 1984 that the sequence of posterior distributions of the random states of the signal given the observations (a.k.a. optimal filter) have no finitely recursive recursion.[13] Various numerical methods based on fixed grid approximations, Markov Chain Monte Carlo techniques (MCMC), conventional linearization, extended Kalman filters, or determining the best linear system (in expect cost-error sense) have never really coped with large scale systems, unstable processes or when the nonlinearities are not sufficiently smooth.\nParticle filtering methodology uses a genetic type mutation-selection sampling approach, with a set of particles (also called individuals, or samples) to represent the posterior distribution of some stochastic process given some noisy and/or partial observations. The state-space model can be nonlinear and the initial state and noise distributions can take any form required. Particle filter techniques provide a well-established methodology[1][14][15] for generating samples from the required distribution without requiring assumptions about the state-space model or the state distributions. However, these methods do not perform well when applied to very high-dimensional systems.\nParticle filters implement the prediction-updating transitions of the filtering equation directly by using a genetic type mutation-selection particle algorithm. The samples from the distribution are represented by a set of particles; each particle has a likelihood weight assigned to it that represents the probability of that particle being sampled from the probability density function. Weight disparity leading to weight collapse is a common issue encountered in these filtering algorithms; however it can be mitigated by including a resampling step before the weights become too uneven. Several adaptive resampling criteria can be used, including the variance of the weights and the relative entropy w.r.t. the uniform distribution.[16] In the resampling step, the particles with negligible weights are replaced by new particles in the proximity of the particles with higher weights.\nParticle filters and Feynman-Kac particle methodologies find application in signal and image processing, Bayesian inference, machine learning, risk analysis and rare event sampling, engineering and robotics, artificial intelligence, bioinformatics, phylogenetics, computational science, Economics and mathematical finance, molecular chemistry, computational physics, pharmacokinetic and other fields.\n\n\nFrom the statistical and probabilistic viewpoint, particle filters belong to the class of branching/genetic type algorithms, and mean field type interacting particle methodologies. The interpretations of these particle methods depends on the scientific discipline. In Evolutionary Computing, mean field genetic type particle methodologies are often used as a heuristic and natural search algorithms (a.k.a. Metaheuristic). In computational physics and molecular chemistry they are used to solve Feynman-Kac path integration problems, or the compute Boltzmann-Gibbs measures, top eigenvalues and ground states of Schr\u00f6dinger operators. In Biology and Genetics they also represent the evolution of a population of individuals or genes in some environment.\nThe origins of mean field type evolutionary computational techniques can be traced to 1950 and 1954 with the seminal work of Alan Turing on genetic type mutation-selection learning machines[17] and the articles by Nils Aall Barricelli at the Institute for Advanced Study in Princeton, New Jersey.[18][19] The first trace of particle filters in statistical methodology dates back to the mid-50's; the 'Poor Man's Monte Carlo',[20] that was proposed by Hammersley et al., in 1954, contained hints of the genetic type particle filtering methods used today. In 1963, Nils Aall Barricelli simulated a genetic type algorithm to mimic the ability of individuals to play a simple game.[21] In evolutionary computing literature, genetic type mutation-selection algorithms became popular through the seminal work of John Holland in the early 1970s, and particularly his book[22] published in 1975.\nIn Biology and Genetics, the Australian geneticist Alex Fraser also published in 1957 a series of papers on the genetic type simulation of artificial selection of organisms.[23] The computer simulation of evolution by biologists became more common in the early 1960s, and the methods were described in books by Fraser and Burnell (1970)[24] and Crosby (1973).[25] Fraser's simulations included all of the essential elements of modern mutation-selection genetic particle algorithms.\nFrom the mathematical viewpoint, the conditional distribution of the random states of a signal given some partial and noisy observations is described by a Feynman-Kac probability on the random trajectories of the signal weighted by a sequence of likelihood potential functions.[2][3] Quantum Monte Carlo, and more specifically Diffusion Monte Carlo methods can also be interpreted as a mean field genetic type particle approximation of Feynman-Kac path integrals.[2][3][4][8][9][26][27] The origins of Quantum Monte Carlo methods are often attributed to Enrico Fermi and Robert Richtmyer who developed in 1948 a mean field particle interpretation of neutron-chain reactions,[28] but the first heuristic-like and genetic type particle algorithm (a.k.a. Resampled or Reconfiguration Monte Carlo methods) for estimating ground state energies of quantum systems (in reduced matrix models) is due to Jack H. Hetherington in 1984.[8] We also quote an earlier seminal works of Theodore E. Harris and Herman Kahn in particle physics, published in 1951, using mean field but heuristic-like genetic methods for estimating particle transmission energies.[29] In molecular chemistry, the use of genetic heuristic-like particle methodologies (a.k.a. pruning and enrichment strategies) can be traced back to 1955 with the seminal work of Marshall. N. Rosenbluth and Arianna. W. Rosenbluth.[7]\nThe use of genetic particle algorithms in advanced signal processing and Bayesian inference is more recent. It was in 1993, that Gordon et al., published in their seminal work[30] the first application of genetic type algorithm in Bayesian statistical inference. The authors named their algorithm 'the bootstrap filter', and demonstrated that compared to other filtering methods, their bootstrap algorithm does not require any assumption about that state-space or the noise of the system. We also quote another pioneering article in this field of Genshiro Kitagawa on a related \"Monte Carlo filter\",[31] and the ones by Pierre Del Moral[1] and Himilcon Carvalho, Pierre Del Moral, Andr\u00e9 Monin and G\u00e9rard Salut[32] on particle filters published in the mid-1990s. Particle filters were also developed in signal processing in the early 1989-1992 by P. Del Moral, J.C. Noyer, G. Rigal, and G. Salut in the LAAS-CNRS in a series of restricted and classified research reports with STCAN (Service Technique des Constructions et Armes Navales), the IT company DIGILOG, and the LAAS-CNRS (the Laboratory for Analysis and Architecture of Systems) on RADAR/SONAR and GPS signal processing problems.[33][34][35][36][37][38]\nFrom 1950 to 1996, all the publications on particle filters, genetic algorithms, including the pruning and resample Monte Carlo methods introduced in computational physics and molecular chemistry, present natural and heuristic-like algorithms applied to different situations without a single proof of their consistency, nor a discussion on the bias of the estimates and on genealogical and ancestral tree based algorithms.\nThe mathematical foundations and the first rigorous analysis of these particle algorithms are due to Pierre Del Moral[1][14] in 1996. The article[1] also contains a proof of the unbiased properties of a particle approximations of likelihood functions and unnormalized conditional probability measures. The unbiased particle estimator of the likelihood functions presented in this article is used today in Bayesian statistical inference.\nBranching type particle methodologies with varying population sizes were also developed toward the end of the 1990s by Dan Crisan, Jessica Gaines and Terry Lyons,[39][40][41] and by Dan Crisan, Pierre Del Moral and Terry Lyons.[42] Further developments in this field were developed in 2000 by P. Del Moral, A. Guionnet and L. Miclo.[3][43][44] The first central limit theorems are due to Pierre Del Moral and Alice Guionnet[45] in 1999 and Pierre Del Moral and Laurent Miclo[3] in 2000. The first uniform convergence results with respect to the time parameter for particle filters were developed in the end of the 1990s by Pierre Del Moral and Alice Guionnet.[43][44] The first rigorous analysis of genealogical tree based particle filter smoothers is due to P. Del Moral and L. Miclo in 2001[46]\nThe theory on Feynman-Kac particle methodologies and related particle filters algorithms has been developed in 2000 and 2004 in the books.[3][15] These abstract probabilistic models encapsulate genetic type algorithms, particle and bootstrap filters, interacting Kalman filters (a.k.a. Rao\u2013Blackwellized particle filter[47]), importance sampling and resampling style particle filter techniques, including genealogical tree based and particle backward methodologies for solving filtering and smoothing problems. Other classes of particle filtering methodologies includes genealogical tree based models,[5][15][48] backward Markov particle models,[5][49] adaptive mean field particle models,[16] island type particle models,[50][51] and particle Markov chain Monte Carlo methodologies.[52][53]\nThe objective of a particle filter is to estimate the posterior density of the state variables given the observation variables. The particle filter is designed for a hidden Markov Model, where the system consists of hidden and observable variables. The observable variables (observation process) are related to the hidden variables (state-process) by some functional form that is known. Similarly the dynamical system describing the evolution of the state variables is also known probabilistically.\nA generic particle filter estimates the posterior distribution of the hidden states using the observation measurement process. Consider a state-space shown in the diagram below.\nThe filtering problem is to estimate sequentially the values of the hidden states \n\n\n\n\nX\n\nk\n\n\n\n\n{\\displaystyle X_{k}}\n\n, given the values of the observation process \n\n\n\n\nY\n\n0\n\n\n,\n\u22ef\n,\n\nY\n\nk\n\n\n,\n\n\n{\\displaystyle Y_{0},\\cdots ,Y_{k},}\n\n at any time step k.\nAll Bayesian estimates of \n\n\n\n\nX\n\nk\n\n\n\n\n{\\displaystyle X_{k}}\n\n follow from the posterior density p(xk\u00a0|\u00a0y0,y1,\u2026,yk). The particle filter methodology provides an approximation of these conditional probabilities using the empirical measure associated with a genetic type particle algorithm. In contrast, the MCMC or importance sampling approach would model the full posterior p(x0,x1,\u2026,xk\u00a0|\u00a0y0,y1,\u2026,yk).\nParticle methods often assume \n\n\n\n\nX\n\nk\n\n\n\n\n{\\displaystyle X_{k}}\n\n and the observations \n\n\n\n\nY\n\nk\n\n\n\n\n{\\displaystyle Y_{k}}\n\n can be modeled in this form:\nAn example of system with these properties is:\nwhere both \n\n\n\n\nW\n\nk\n\n\n\n\n{\\displaystyle W_{k}}\n\n and \n\n\n\n\nV\n\nk\n\n\n\n\n{\\displaystyle V_{k}}\n\n are mutually independent sequences with known probability density functions and g and h are known functions. These two equations can be viewed as state space equations and look similar to the state space equations for the Kalman filter. If the functions g and h in the above example are linear, and if both \n\n\n\n\nW\n\nk\n\n\n\n\n{\\displaystyle W_{k}}\n\n and \n\n\n\n\nV\n\nk\n\n\n\n\n{\\displaystyle V_{k}}\n\n are Gaussian, the Kalman filter finds the exact Bayesian filtering distribution. If not, Kalman filter based methods are a first-order approximation (EKF) or a second-order approximation (UKF in general, but if probability distribution is Gaussian a third-order approximation is possible).\nThe assumption that the initial distribution and the transitions of the Markov chain are absolutely continuous with respect to the Lebesgue measure can be relaxed. To design a particle filter we simply need to assume that we can sample the transitions \n\n\n\n\nX\n\nk\n\u2212\n1\n\n\n\u2192\n\nX\n\nk\n\n\n\n\n{\\displaystyle X_{k-1}\\to X_{k}}\n\n of the Markov chain \n\n\n\n\nX\n\nk\n\n\n,\n\n\n{\\displaystyle X_{k},}\n\n and to compute the likelihood function \n\n\n\n\nx\n\nk\n\n\n\u21a6\np\n(\n\ny\n\nk\n\n\n\n|\n\n\nx\n\nk\n\n\n)\n\n\n{\\displaystyle x_{k}\\mapsto p(y_{k}|x_{k})}\n\n (see for instance the genetic selection mutation description of the particle filter given below). The absolutely continuous assumption on the Markov transitions of \n\n\n\n\nX\n\nk\n\n\n\n\n{\\displaystyle X_{k}}\n\n are only used to derive in an informal (and rather abusive) way different formulae between posterior distributions using the Bayes' rule for conditional densities.\nIn some important problems, the conditional distribution of the observations given the random states of the signal may fail to have a density or may be impossible or too complex to compute. In this situation, we need to resort to an additional level of approximation. One strategy is to replace the signal \n\n\n\n\nX\n\nk\n\n\n\n\n{\\displaystyle X_{k}}\n\n by the Markov chain \n\n\n\n\n\n\nX\n\n\n\nk\n\n\n=\n\n(\n\nX\n\nk\n\n\n,\n\nY\n\nk\n\n\n)\n\n\n\n{\\displaystyle {\\mathcal {X}}_{k}=\\left(X_{k},Y_{k}\\right)}\n\n and to introduce a virtual observation of the form\nfor some sequence of independent sequences with known probability density functions. The central idea is to observe that\nThe particle filter associated with the Markov process \n\n\n\n\n\n\nX\n\n\n\nk\n\n\n=\n\n(\n\nX\n\nk\n\n\n,\n\nY\n\nk\n\n\n)\n\n\n\n{\\displaystyle {\\mathcal {X}}_{k}=\\left(X_{k},Y_{k}\\right)}\n\n given the partial observations \n\n\n\n\n\n\nY\n\n\n\n0\n\n\n=\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\n\n\nY\n\n\n\nk\n\n\n=\n\ny\n\nk\n\n\n,\n\n\n{\\displaystyle {\\mathcal {Y}}_{0}=y_{0},\\cdots ,{\\mathcal {Y}}_{k}=y_{k},}\n\n is defined in terms of particles evolving in \n\n\n\n\n\nR\n\n\n\nd\n\nx\n\n\n+\n\nd\n\ny\n\n\n\n\n\n\n{\\displaystyle \\mathbb {R} ^{d_{x}+d_{y}}}\n\n with a likelihood function given with some obvious abusive notation by \n\n\n\np\n(\n\n\n\nY\n\n\n\nk\n\n\n\n|\n\n\n\n\nX\n\n\n\nk\n\n\n)\n\n\n{\\displaystyle p({\\mathcal {Y}}_{k}|{\\mathcal {X}}_{k})}\n\n. These probabilistic techniques are closely related to Approximate Bayesian Computation (ABC). In the context of particle filters, these ABC particle filtering techniques were introduced in 1998 by P. Del Moral, J. Jacod and P. Protter in the article.[54] They were further developed by P. Del Moral, A. Doucet and A. Jasra.[55][56]\nThe Bayes' rule for conditional probability gives:\nwhere\nParticle filters are also an approximation, but with enough particles they can be much more accurate.[1][14][15][43][44] The nonlinear filtering equation is given by the recursion\n\n\n\n\n\n\n\n\n\np\n(\n\nx\n\nk\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\u2212\n1\n\n\n)\n\n\n\n\n\n\n\n\u27f6\n\n\nupdating\n\n\n\n\np\n(\n\nx\n\nk\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\n\n)\n=\n\n\n\np\n(\n\ny\n\nk\n\n\n\n|\n\n\nx\n\nk\n\n\n)\np\n(\n\nx\n\nk\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\u2212\n1\n\n\n)\n\n\n\u222b\np\n(\n\ny\n\nk\n\n\n\n|\n\n\nx\n\nk\n\n\u2032\n\n)\np\n(\n\nx\n\nk\n\n\u2032\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\u2212\n1\n\n\n)\nd\n\nx\n\nk\n\n\u2032\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u27f6\n\n\nprediction\n\n\n\n\np\n(\n\nx\n\nk\n+\n1\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\n\n)\n=\n\u222b\np\n(\n\nx\n\nk\n+\n1\n\n\n\n|\n\n\nx\n\nk\n\n\n)\np\n(\n\nx\n\nk\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\n\n)\nd\n\nx\n\nk\n\n\n\n\n\n\n\n\n{\\displaystyle {\\begin{aligned}p(x_{k}|y_{0},\\cdots ,y_{k-1})&{\\stackrel {\\text{updating}}{\\longrightarrow }}p(x_{k}|y_{0},\\cdots ,y_{k})={\\frac {p(y_{k}|x_{k})p(x_{k}|y_{0},\\cdots ,y_{k-1})}{\\int p(y_{k}|x'_{k})p(x'_{k}|y_{0},\\cdots ,y_{k-1})dx'_{k}}}\\\\&{\\stackrel {\\text{prediction}}{\\longrightarrow }}p(x_{k+1}|y_{0},\\cdots ,y_{k})=\\int p(x_{k+1}|x_{k})p(x_{k}|y_{0},\\cdots ,y_{k})dx_{k}\\end{aligned}}}\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n(Eq. 1)\nwith the convention \n\n\n\np\n(\n\nx\n\n0\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\n\u2212\n1\n\n\n)\n=\np\n(\n\nx\n\n0\n\n\n)\n\n\n{\\displaystyle p(x_{0}|y_{0},\\cdots ,y_{-1})=p(x_{0})}\n\n for k = 0. The nonlinear filtering problem consists of computing sequentially these sequence of conditional distributions.\nWe fix a time horizon n and a sequence of observations \n\n\n\n\nY\n\n0\n\n\n=\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\nY\n\nn\n\n\n=\n\ny\n\nn\n\n\n\n\n{\\displaystyle Y_{0}=y_{0},\\cdots ,Y_{n}=y_{n}}\n\n, and for each k = 0, ..., n we set:\nIn this notation, for any bounded function F on the set of trajectories of \n\n\n\n\nX\n\nk\n\n\n\n\n{\\displaystyle X_{k}}\n\n from the origin k = 0 up to time k = n, we have the Feynman-Kac formula\nThese Feynman-Kac path integration models arise in a variety of scientific disciplines, including in computational physics, biology, information theory and computer sciences.[3][5][15] Their interpretations depend on the application domain. For instance, if we choose the indicator function \n\n\n\n\nG\n\nn\n\n\n(\n\nx\n\nn\n\n\n)\n=\n\n1\n\nA\n\n\n(\n\nx\n\nn\n\n\n)\n\n\n{\\displaystyle G_{n}(x_{n})=1_{A}(x_{n})}\n\n of some subset of the state space, they represent the conditional distribution of a Markov chain given it stays in a given tube; that is, we have:\nand\nas soon as the normalizing constant is strictly positive.\nInitially we start with N independent random variables \n\n\n\n\n\n(\n\n\u03be\n\n0\n\n\ni\n\n\n)\n\n\n1\n\u2a7d\ni\n\u2a7d\nN\n\n\n\n\n{\\displaystyle \\left(\\xi _{0}^{i}\\right)_{1\\leqslant i\\leqslant N}}\n\n with common probability density \n\n\n\np\n(\n\nx\n\n0\n\n\n)\n\n\n{\\displaystyle p(x_{0})}\n\n. The genetic algorithm selection-mutation transitions\nmimic/approximate the updating-prediction transitions of the optimal filter evolution (Eq. 1):\nIn the above displayed formulae \n\n\n\np\n(\n\ny\n\nk\n\n\n\n|\n\n\n\u03be\n\nk\n\n\ni\n\n\n)\n\n\n{\\displaystyle p(y_{k}|\\xi _{k}^{i})}\n\n stands for the likelihood function \n\n\n\n\nx\n\nk\n\n\n\u21a6\np\n(\n\ny\n\nk\n\n\n\n|\n\n\nx\n\nk\n\n\n)\n\n\n{\\displaystyle x_{k}\\mapsto p(y_{k}|x_{k})}\n\n evaluated at \n\n\n\n\nx\n\nk\n\n\n=\n\n\u03be\n\nk\n\n\ni\n\n\n\n\n{\\displaystyle x_{k}=\\xi _{k}^{i}}\n\n, and \n\n\n\np\n(\n\nx\n\nk\n+\n1\n\n\n\n|\n\n\n\n\n\n\u03be\n^\n\n\n\n\nk\n\n\ni\n\n\n)\n\n\n{\\displaystyle p(x_{k+1}|{\\widehat {\\xi }}_{k}^{i})}\n\n stands for the conditional density \n\n\n\np\n(\n\nx\n\nk\n+\n1\n\n\n\n|\n\n\nx\n\nk\n\n\n)\n\n\n{\\displaystyle p(x_{k+1}|x_{k})}\n\n evaluated at \n\n\n\n\nx\n\nk\n\n\n=\n\n\n\n\n\u03be\n^\n\n\n\n\nk\n\n\ni\n\n\n\n\n{\\displaystyle x_{k}={\\widehat {\\xi }}_{k}^{i}}\n\n.\nAt each time k, we have the particle approximations\nand\nA detailed proof of these convergence results can be found in,[1][14] see also the more recent developments provided in the books.[5][15] In Genetic algorithms and Evolutionary computing community, the mutation-selection Markov chain described above is often called the genetic algorithm with proportional selection. Several branching variants, including with random population sizes have also been proposed in the articles.[15][39][42]\nParticle methods, like all sampling-based approaches (e.g., MCMC), generate a set of samples that approximate the filtering density\nFor example, we may have N samples from the approximate posterior distribution of \n\n\n\n\nX\n\nk\n\n\n\n\n{\\displaystyle X_{k}}\n\n, where the samples are labeled with superscripts as\nThen, expectations with respect to the filtering distribution are approximated by\n\n\n\n\n\u222b\nf\n(\n\nx\n\nk\n\n\n)\np\n(\n\nx\n\nk\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\n\n)\n\nd\n\nx\n\nk\n\n\n\n\u2248\n\nN\n\u2191\n\u221e\n\n\n\n\n1\nN\n\n\n\n\u2211\n\ni\n=\n1\n\n\nN\n\n\nf\n\n(\n\n\n\n\n\u03be\n^\n\n\n\n\nk\n\n\ni\n\n\n)\n\n=\n\u222b\nf\n(\n\nx\n\nk\n\n\n)\n\n\n\np\n^\n\n\n\n(\nd\n\nx\n\nk\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\n\n)\n\n\n{\\displaystyle \\int f(x_{k})p(x_{k}|y_{0},\\cdots ,y_{k})\\,dx_{k}\\approx _{N\\uparrow \\infty }{\\frac {1}{N}}\\sum _{i=1}^{N}f\\left({\\widehat {\\xi }}_{k}^{i}\\right)=\\int f(x_{k}){\\widehat {p}}(dx_{k}|y_{0},\\cdots ,y_{k})}\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n(Eq. 2)\nwith\nwhere \n\n\n\n\n\u03b4\n\na\n\n\n\n\n{\\displaystyle \\delta _{a}}\n\n stands for the Dirac measure at a given state a. The function f, in the usual way for Monte Carlo, can give all the moments etc. of the distribution up to some degree of approximation. When the approximation equation (Eq. 2) is satisfied for any bounded function f we write\nParticle filters can be interpreted as a genetic type particle algorithm evolving with mutation and selection transitions. We can keep track of the ancestral lines\nof the particles \n\n\n\ni\n=\n1\n,\n\u22ef\n,\nN\n\n\n{\\displaystyle i=1,\\cdots ,N}\n\n. The random states \n\n\n\n\n\n\n\n\u03be\n^\n\n\n\n\nl\n,\nk\n\n\ni\n\n\n\n\n{\\displaystyle {\\widehat {\\xi }}_{l,k}^{i}}\n\n, with the lower indices l=0,...,k, stands for the ancestor of the individual \n\n\n\n\n\n\n\n\u03be\n^\n\n\n\n\nk\n,\nk\n\n\ni\n\n\n=\n\n\n\n\n\u03be\n^\n\n\n\n\nk\n\n\ni\n\n\n\n\n{\\displaystyle {\\widehat {\\xi }}_{k,k}^{i}={\\widehat {\\xi }}_{k}^{i}}\n\n at level l=0,...,k. In his situation, we have the approximation formula\n\n\n\n\n\n\n\n\n\u222b\nF\n(\n\nx\n\n0\n\n\n,\n\u22ef\n,\n\nx\n\nk\n\n\n)\np\n(\n\nx\n\n0\n\n\n,\n\u22ef\n,\n\nx\n\nk\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\n\n)\n\nd\n\nx\n\n0\n\n\n\u22ef\nd\n\nx\n\nk\n\n\n\n\n\n\n\u2248\n\nN\n\u2191\n\u221e\n\n\n\n\n1\nN\n\n\n\n\u2211\n\ni\n=\n1\n\n\nN\n\n\nF\n\n(\n\n\n\n\n\u03be\n^\n\n\n\n\n0\n,\nk\n\n\ni\n\n\n,\n\n\n\n\n\u03be\n^\n\n\n\n\n1\n,\nk\n\n\ni\n\n\n,\n\u22ef\n,\n\n\n\n\n\u03be\n^\n\n\n\n\nk\n,\nk\n\n\ni\n\n\n)\n\n\n\n\n\n\n\n=\n\u222b\nF\n(\n\nx\n\n0\n\n\n,\n\u22ef\n,\n\nx\n\nk\n\n\n)\n\n\n\np\n^\n\n\n\n(\nd\n(\n\nx\n\n0\n\n\n,\n\u22ef\n,\n\nx\n\nk\n\n\n)\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\n\n)\n\n\n\n\n\n\n{\\displaystyle {\\begin{aligned}\\int F(x_{0},\\cdots ,x_{k})p(x_{0},\\cdots ,x_{k}|y_{0},\\cdots ,y_{k})\\,dx_{0}\\cdots dx_{k}&\\approx _{N\\uparrow \\infty }{\\frac {1}{N}}\\sum _{i=1}^{N}F\\left({\\widehat {\\xi }}_{0,k}^{i},{\\widehat {\\xi }}_{1,k}^{i},\\cdots ,{\\widehat {\\xi }}_{k,k}^{i}\\right)\\\\&=\\int F(x_{0},\\cdots ,x_{k}){\\widehat {p}}(d(x_{0},\\cdots ,x_{k})|y_{0},\\cdots ,y_{k})\\end{aligned}}}\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n(Eq. 3)\nwith the empirical measure\nHere F stands for any founded function on the path space of the signal. In a more synthetic form (Eq. 3) is equivalent to\nParticle filters can be interpreted in many different ways. From the probabilistic point of view they coincide with a mean field particle interpretation of the nonlinear filtering equation. The updating-prediction transitions of the optimal filter evolution can also be interpreted as the classical genetic type selection-mutation transitions of individuals. The sequential importance resampling technique provides another interpretation of the filtering transitions coupling importance sampling with the bootstrap resampling step. Last, but not least, particle filters can be seen as an acceptance-rejection methodology equipped with a recycling mechanism.[5][15]\nThe nonlinear filtering evolution can be interpreted as a dynamical system in the set of probability measures of the following form \n\n\n\n\n\u03b7\n\nn\n+\n1\n\n\n=\n\n\u03a6\n\nn\n+\n1\n\n\n\n(\n\n\u03b7\n\nn\n\n\n)\n\n\n\n{\\displaystyle \\eta _{n+1}=\\Phi _{n+1}\\left(\\eta _{n}\\right)}\n\n where \n\n\n\n\n\u03a6\n\nn\n+\n1\n\n\n\n\n{\\displaystyle \\Phi _{n+1}}\n\n stands for some mapping from the set of probability distribution into itself. For instance, the evolution of the one-step optimal predictor \n\n\n\n\n\u03b7\n\nn\n\n\n(\nd\n\nx\n\nn\n\n\n)\n=\np\n(\n\nx\n\nn\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nn\n\u2212\n1\n\n\n)\nd\n\nx\n\nn\n\n\n\n\n{\\displaystyle \\eta _{n}(dx_{n})=p(x_{n}|y_{0},\\cdots ,y_{n-1})dx_{n}}\n\n\nsatisfies a nonlinear evolution starting with the probability distribution \n\n\n\n\n\u03b7\n\n0\n\n\n(\nd\n\nx\n\n0\n\n\n)\n=\np\n(\n\nx\n\n0\n\n\n)\nd\n\nx\n\n0\n\n\n\n\n{\\displaystyle \\eta _{0}(dx_{0})=p(x_{0})dx_{0}}\n\n. One of the simplest way to approximate these probability measures is to start with N independent random variables \n\n\n\n\n\n(\n\n\u03be\n\n0\n\n\ni\n\n\n)\n\n\n1\n\u2a7d\ni\n\u2a7d\nN\n\n\n\n\n{\\displaystyle \\left(\\xi _{0}^{i}\\right)_{1\\leqslant i\\leqslant N}}\n\n with common probability distribution \n\n\n\n\n\u03b7\n\n0\n\n\n(\nd\n\nx\n\n0\n\n\n)\n=\np\n(\n\nx\n\n0\n\n\n)\nd\n\nx\n\n0\n\n\n\n\n{\\displaystyle \\eta _{0}(dx_{0})=p(x_{0})dx_{0}}\n\n . Suppose we have defined a sequence of N random variables \n\n\n\n\n\n(\n\n\u03be\n\nn\n\n\ni\n\n\n)\n\n\n1\n\u2a7d\ni\n\u2a7d\nN\n\n\n\n\n{\\displaystyle \\left(\\xi _{n}^{i}\\right)_{1\\leqslant i\\leqslant N}}\n\n such that\nAt the next step we sample N (conditionally) independent random variables \n\n\n\n\n\u03be\n\nn\n+\n1\n\n\n:=\n\n\n(\n\n\u03be\n\nn\n+\n1\n\n\ni\n\n\n)\n\n\n1\n\u2a7d\ni\n\u2a7d\nN\n\n\n\n\n{\\displaystyle \\xi _{n+1}:=\\left(\\xi _{n+1}^{i}\\right)_{1\\leqslant i\\leqslant N}}\n\n with common law .\nWe illustrate this mean field particle principle in the context of the evolution of the one step optimal predictors\n\n\n\n\n\np\n(\n\nx\n\nk\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\u2212\n1\n\n\n)\nd\n\nx\n\nk\n\n\n\u2192\np\n(\n\nx\n\nk\n+\n1\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\n\n)\n=\n\u222b\np\n(\n\nx\n\nk\n+\n1\n\n\n\n|\n\n\nx\n\nk\n\n\u2032\n\n)\n\n\n\np\n(\n\ny\n\nk\n\n\n\n|\n\n\nx\n\nk\n\n\u2032\n\n)\np\n(\n\nx\n\nk\n\n\u2032\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\u2212\n1\n\n\n)\nd\n\nx\n\nk\n\n\u2032\n\n\n\n\u222b\np\n(\n\ny\n\nk\n\n\n\n|\n\n\nx\n\nk\n\n\u2033\n\n)\np\n(\n\nx\n\nk\n\n\u2033\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\u2212\n1\n\n\n)\nd\n\nx\n\nk\n\n\u2033\n\n\n\n\n\n\n{\\displaystyle p(x_{k}|y_{0},\\cdots ,y_{k-1})dx_{k}\\to p(x_{k+1}|y_{0},\\cdots ,y_{k})=\\int p(x_{k+1}|x'_{k}){\\frac {p(y_{k}|x_{k}')p(x'_{k}|y_{0},\\cdots ,y_{k-1})dx'_{k}}{\\int p(y_{k}|x''_{k})p(x''_{k}|y_{0},\\cdots ,y_{k-1})dx''_{k}}}}\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n(Eq. 4)\nFor k = 0 we use the convention \n\n\n\np\n(\n\nx\n\n0\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\n\u2212\n1\n\n\n)\n:=\np\n(\n\nx\n\n0\n\n\n)\n\n\n{\\displaystyle p(x_{0}|y_{0},\\cdots ,y_{-1}):=p(x_{0})}\n\n.\nBy the law of large numbers, we have\nin the sense that\nfor any bounded function \n\n\n\nf\n\n\n{\\displaystyle f}\n\n. We further assume that we have constructed a sequence of particles \n\n\n\n\n\n(\n\n\u03be\n\nk\n\n\ni\n\n\n)\n\n\n1\n\u2a7d\ni\n\u2a7d\nN\n\n\n\n\n{\\displaystyle \\left(\\xi _{k}^{i}\\right)_{1\\leqslant i\\leqslant N}}\n\n at some rank k such that\nin the sense that for any bounded function \n\n\n\nf\n\n\n{\\displaystyle f}\n\n we have\nIn this situation, replacing \n\n\n\np\n(\n\nx\n\nk\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\u2212\n1\n\n\n)\nd\n\nx\n\nk\n\n\n\n\n{\\displaystyle p(x_{k}|y_{0},\\cdots ,y_{k-1})dx_{k}}\n\n by the empirical measure \n\n\n\n\n\n\np\n^\n\n\n\n(\nd\n\nx\n\nk\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\u2212\n1\n\n\n)\n\n\n{\\displaystyle {\\widehat {p}}(dx_{k}|y_{0},\\cdots ,y_{k-1})}\n\n in the evolution equation of the one-step optimal filter stated in (Eq. 4) we find that\nNotice that the right hand side in the above formula is a weighted probability mixture\nwhere \n\n\n\np\n(\n\ny\n\nk\n\n\n\n|\n\n\n\u03be\n\nk\n\n\ni\n\n\n)\n\n\n{\\displaystyle p(y_{k}|\\xi _{k}^{i})}\n\n stands for the density \n\n\n\np\n(\n\ny\n\nk\n\n\n\n|\n\n\nx\n\nk\n\n\n)\n\n\n{\\displaystyle p(y_{k}|x_{k})}\n\n evaluated at \n\n\n\n\nx\n\nk\n\n\n=\n\n\u03be\n\nk\n\n\ni\n\n\n\n\n{\\displaystyle x_{k}=\\xi _{k}^{i}}\n\n, and \n\n\n\np\n(\n\nx\n\nk\n+\n1\n\n\n\n|\n\n\n\u03be\n\nk\n\n\ni\n\n\n)\n\n\n{\\displaystyle p(x_{k+1}|\\xi _{k}^{i})}\n\n stands for the density \n\n\n\np\n(\n\nx\n\nk\n+\n1\n\n\n\n|\n\n\nx\n\nk\n\n\n)\n\n\n{\\displaystyle p(x_{k+1}|x_{k})}\n\n evaluated at \n\n\n\n\nx\n\nk\n\n\n=\n\n\u03be\n\nk\n\n\ni\n\n\n\n\n{\\displaystyle x_{k}=\\xi _{k}^{i}}\n\n for \n\n\n\ni\n=\n1\n,\n\u22ef\n,\nN\n.\n\n\n{\\displaystyle i=1,\\cdots ,N.}\n\n\nThen, we sample N independent random variable \n\n\n\n\n\n(\n\n\u03be\n\nk\n+\n1\n\n\ni\n\n\n)\n\n\n1\n\u2a7d\ni\n\u2a7d\nN\n\n\n\n\n{\\displaystyle \\left(\\xi _{k+1}^{i}\\right)_{1\\leqslant i\\leqslant N}}\n\n with common probability density \n\n\n\n\n\n\nq\n^\n\n\n\n(\n\nx\n\nk\n+\n1\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\n\n)\n\n\n{\\displaystyle {\\widehat {q}}(x_{k+1}|y_{0},\\cdots ,y_{k})}\n\n so that\nIterating this procedure, we design a Markov chain such that\nNotice that the optimal filter is approximated at each time step k using the Bayes' formulae\nThe terminology \"mean field approximation\" comes from the fact that we replace at each time step the probability measure \n\n\n\np\n(\nd\n\nx\n\nk\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\u2212\n1\n\n\n)\n\n\n{\\displaystyle p(dx_{k}|y_{0},\\cdots ,y_{k-1})}\n\n by the empirical approximation \n\n\n\n\n\n\np\n^\n\n\n\n(\nd\n\nx\n\nk\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\u2212\n1\n\n\n)\n\n\n{\\displaystyle {\\widehat {p}}(dx_{k}|y_{0},\\cdots ,y_{k-1})}\n\n. The mean field particle approximation of the filtering problem is far from being unique. Several strategies are developed in the books.[5][15]\nThe analysis of the convergence of particle filters was started in 1996[1][14] and in 2000 in the book[3] and the series of articles.[42][43][44][45][46][57][58] More recent developments can be found in the books,[5][15] When the filtering equation is stable (in the sense that it corrects any erroneous initial condition), the bias and the variance of the particle particle estimates\nare controlled by the non asymptotic uniform estimates\nfor any function f bounded by 1, and for some finite constants \n\n\n\n\nc\n\n1\n\n\n,\n\nc\n\n2\n\n\n.\n\n\n{\\displaystyle c_{1},c_{2}.}\n\n In addition, for any \n\n\n\nx\n\u2a7e\n0\n\n\n{\\displaystyle x\\geqslant 0}\n\n:\nfor some finite constants \n\n\n\n\nc\n\n1\n\n\n,\n\nc\n\n2\n\n\n\n\n{\\displaystyle c_{1},c_{2}}\n\n related to the asymptotic bias and variance of the particle estimate, and some finite constant c. The same results are satisfied if we replace the one step optimal predictor by the optimal filter approximation.\nTracing back in time the ancestral lines\nof the individuals \n\n\n\n\n\n\n\n\u03be\n^\n\n\n\n\nk\n\n\ni\n\n\n\n(\n=\n\n\n\n\n\u03be\n^\n\n\n\n\nk\n,\nk\n\n\ni\n\n\n)\n\n\n\n{\\displaystyle {\\widehat {\\xi }}_{k}^{i}\\left(={\\widehat {\\xi }}_{k,k}^{i}\\right)}\n\n and \n\n\n\n\n\u03be\n\nk\n\n\ni\n\n\n\n(\n=\n\n\n\u03be\n\n\nk\n,\nk\n\n\ni\n\n\n)\n\n\n\n{\\displaystyle \\xi _{k}^{i}\\left(={\\xi }_{k,k}^{i}\\right)}\n\n at every time step k, we also have the particle approximations\nThese empirical approximations are equivalent to the particle integral approximations\nfor any bounded function F on the random trajectories of the signal. As shown in[48] the evolution of the genealogical tree coincides with a mean field particle interpretation of the evolution equations associated with the posterior densities of the signal trajectories. For more details on these path space models, we refer to the books.[5][15]\nWe use the product formula\nwith\nand the conventions \n\n\n\np\n(\n\ny\n\n0\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\n\u2212\n1\n\n\n)\n=\np\n(\n\ny\n\n0\n\n\n)\n\n\n{\\displaystyle p(y_{0}|y_{0},\\cdots ,y_{-1})=p(y_{0})}\n\n and \n\n\n\np\n(\n\nx\n\n0\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\n\u2212\n1\n\n\n)\n=\np\n(\n\nx\n\n0\n\n\n)\n,\n\n\n{\\displaystyle p(x_{0}|y_{0},\\cdots ,y_{-1})=p(x_{0}),}\n\n for k = 0. Replacing \n\n\n\np\n(\n\nx\n\nk\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\u2212\n1\n\n\n)\nd\n\nx\n\nk\n\n\n\n\n{\\displaystyle p(x_{k}|y_{0},\\cdots ,y_{k-1})dx_{k}}\n\n by the empirical approximation\nin the above displayed formula, we design the following unbiased particle approximation of the likelihood function\nwith\nwhere \n\n\n\np\n(\n\ny\n\nk\n\n\n\n|\n\n\n\u03be\n\nk\n\n\ni\n\n\n)\n\n\n{\\displaystyle p(y_{k}|\\xi _{k}^{i})}\n\n stands for the density \n\n\n\np\n(\n\ny\n\nk\n\n\n\n|\n\n\nx\n\nk\n\n\n)\n\n\n{\\displaystyle p(y_{k}|x_{k})}\n\n evaluated at \n\n\n\n\nx\n\nk\n\n\n=\n\n\u03be\n\nk\n\n\ni\n\n\n\n\n{\\displaystyle x_{k}=\\xi _{k}^{i}}\n\n. The design of this particle estimate and the unbiasedness property has been proved in 1996 in the article.[1] Refined variance estimates can be found in[15] and.[5]\nUsing Bayes' rule, we have the formula\nNotice that\nThis implies that\nReplacing the one-step optimal predictors \n\n\n\np\n(\n\nx\n\nk\n\u2212\n1\n\n\n\n|\n\n(\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\u2212\n2\n\n\n)\n)\nd\n\nx\n\nk\n\u2212\n1\n\n\n\n\n{\\displaystyle p(x_{k-1}|(y_{0},\\cdots ,y_{k-2}))dx_{k-1}}\n\n by the particle empirical measures\nwe find that\nWe conclude that\nwith the backward particle approximation\nThe probability measure\nis the probability of the random paths of a Markov chain \n\n\n\n\n\n(\n\n\nX\n\n\nk\n,\nn\n\n\n\u266d\n\n\n)\n\n\n0\n\u2a7d\nk\n\u2a7d\nn\n\n\n\n\n{\\displaystyle \\left(\\mathbb {X} _{k,n}^{\\flat }\\right)_{0\\leqslant k\\leqslant n}}\n\nrunning backward in time from time k=n to time k=0, and evolving at each time step k in the state space associated with the population of particles \n\n\n\n\n\u03be\n\nk\n\n\ni\n\n\n,\ni\n=\n1\n,\n\u22ef\n,\nN\n.\n\n\n{\\displaystyle \\xi _{k}^{i},i=1,\\cdots ,N.}\n\n\nIn the above displayed formula, \n\n\n\n\n\n\np\n^\n\n\n\n(\nd\n\nx\n\nk\n\u2212\n1\n\n\n\n|\n\n\n\u03be\n\nk\n\n\ni\n\n\n,\n(\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\u2212\n1\n\n\n)\n)\n\n\n{\\displaystyle {\\widehat {p}}(dx_{k-1}|\\xi _{k}^{i},(y_{0},\\cdots ,y_{k-1}))}\n\n stands for the conditional distribution \n\n\n\n\n\n\np\n^\n\n\n\n(\nd\n\nx\n\nk\n\u2212\n1\n\n\n\n|\n\n\nx\n\nk\n\n\n,\n(\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\u2212\n1\n\n\n)\n)\n\n\n{\\displaystyle {\\widehat {p}}(dx_{k-1}|x_{k},(y_{0},\\cdots ,y_{k-1}))}\n\n evaluated at \n\n\n\n\nx\n\nk\n\n\n=\n\n\u03be\n\nk\n\n\ni\n\n\n\n\n{\\displaystyle x_{k}=\\xi _{k}^{i}}\n\n. In the same vein, \n\n\n\np\n(\n\ny\n\nk\n\u2212\n1\n\n\n\n|\n\n\n\u03be\n\nk\n\u2212\n1\n\n\nj\n\n\n)\n\n\n{\\displaystyle p(y_{k-1}|\\xi _{k-1}^{j})}\n\n and \n\n\n\np\n(\n\n\u03be\n\nk\n\n\ni\n\n\n\n|\n\n\n\u03be\n\nk\n\u2212\n1\n\n\nj\n\n\n)\n\n\n{\\displaystyle p(\\xi _{k}^{i}|\\xi _{k-1}^{j})}\n\n stand for the conditional densities \n\n\n\np\n(\n\ny\n\nk\n\u2212\n1\n\n\n\n|\n\n\nx\n\nk\n\u2212\n1\n\n\n)\n\n\n{\\displaystyle p(y_{k-1}|x_{k-1})}\n\n and \n\n\n\np\n(\n\nx\n\nk\n\n\n\n|\n\n\nx\n\nk\n\u2212\n1\n\n\n)\n\n\n{\\displaystyle p(x_{k}|x_{k-1})}\n\n evaluated at \n\n\n\n\nx\n\nk\n\n\n=\n\n\u03be\n\nk\n\n\ni\n\n\n\n\n{\\displaystyle x_{k}=\\xi _{k}^{i}}\n\n and \n\n\n\n\nx\n\nk\n\u2212\n1\n\n\n=\n\n\u03be\n\nk\n\u2212\n1\n\n\nj\n\n\n.\n\n\n{\\displaystyle x_{k-1}=\\xi _{k-1}^{j}.}\n\n These models allows to reduce integration with respect to the densities \n\n\n\np\n(\n(\n\nx\n\n0\n\n\n,\n\u22ef\n,\n\nx\n\nn\n\n\n)\n\n|\n\n(\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nn\n\u2212\n1\n\n\n)\n)\n\n\n{\\displaystyle p((x_{0},\\cdots ,x_{n})|(y_{0},\\cdots ,y_{n-1}))}\n\n in terms of matrix operations with respect to the Markov transitions of the chain described above.[49] For instance, for any function \n\n\n\n\nf\n\nk\n\n\n\n\n{\\displaystyle f_{k}}\n\n we have the particle estimates\nwhere\nThis also shows that if\nthen\nWe shall assume that filtering equation is stable, in the sense that it corrects any erroneous initial condition.\nIn this situation, the particle approximations of the likelihood functions are unbiased and the relative variance is controlled by\nfor some finite constant c. In addition, for any \n\n\n\nx\n\u2a7e\n0\n\n\n{\\displaystyle x\\geqslant 0}\n\n:\nfor some finite constants \n\n\n\n\nc\n\n1\n\n\n,\n\nc\n\n2\n\n\n\n\n{\\displaystyle c_{1},c_{2}}\n\n related to the asymptotic bias and variance of the particle estimate, and for some finite constant c.\nThe bias and the variance of the particle particle estimates based on the ancestral lines of the genealogical trees\nare controlled by the non asymptotic uniform estimates\nfor any function F bounded by 1, and for some finite constants \n\n\n\n\nc\n\n1\n\n\n,\n\nc\n\n2\n\n\n.\n\n\n{\\displaystyle c_{1},c_{2}.}\n\n In addition, for any \n\n\n\nx\n\u2a7e\n0\n\n\n{\\displaystyle x\\geqslant 0}\n\n:\nfor some finite constants \n\n\n\n\nc\n\n1\n\n\n,\n\nc\n\n2\n\n\n\n\n{\\displaystyle c_{1},c_{2}}\n\n related to the asymptotic bias and variance of the particle estimate, and for some finite constant c. The same type of bias and variance estimates hold for the backward particle smoothers. For additive functionals of the form\nwith\nwith functions \n\n\n\n\nf\n\nk\n\n\n\n\n{\\displaystyle f_{k}}\n\n bounded by 1, we have\nand\nfor some finite constants \n\n\n\n\nc\n\n1\n\n\n,\n\nc\n\n2\n\n\n,\n\nc\n\n3\n\n\n.\n\n\n{\\displaystyle c_{1},c_{2},c_{3}.}\n\n More refined estimates including exponentially small probability of errors are developed in.[5]\nSequential importance Resampling (SIR), the original bootstrap filtering algorithm (Gordon et al. 1993), is also a very commonly used filtering algorithm, which approximates the filtering probability density \n\n\n\np\n(\n\nx\n\nk\n\n\n\n|\n\n\ny\n\n0\n\n\n,\n\u22ef\n,\n\ny\n\nk\n\n\n)\n\n\n{\\displaystyle p(x_{k}|y_{0},\\cdots ,y_{k})}\n\n by a weighted set of N samples\nThe importance weights \n\n\n\n\nw\n\nk\n\n\n(\ni\n)\n\n\n\n\n{\\displaystyle w_{k}^{(i)}}\n\n are approximations to the relative posterior probabilities (or densities) of the samples such that\nSIS is a sequential (i.e., recursive) version of importance sampling. As in importance sampling, the expectation of a function f can be approximated as a weighted average\nFor a finite set of samples, the algorithm performance is dependent on the choice of the proposal distribution\nThe \"optimal\" proposal distribution is given as the target distribution\nThis particular choice of proposal transition has been proposed by P. Del Moral in[14] in 1996 and 1998. When it is difficult to sample transitions according to the distribution \n\n\n\np\n(\n\nx\n\nk\n\n\n\n|\n\n\nx\n\nk\n\u2212\n1\n\n\n,\n\ny\n\nk\n\n\n)\n\n\n{\\displaystyle p(x_{k}|x_{k-1},y_{k})}\n\n one natural strategy is to use the following particle approximation\nwith the empirical approximation\nassociated with N (or any other large number of samples) independent random samples \n\n\n\n\nX\n\nk\n\n\ni\n\n\n(\n\nx\n\nk\n\u2212\n1\n\n\n)\n,\ni\n=\n1\n,\n\u22ef\n,\nN\n\n\n{\\displaystyle X_{k}^{i}(x_{k-1}),i=1,\\cdots ,N}\n\nwith the conditional distribution of the random state \n\n\n\n\nX\n\nk\n\n\n\n\n{\\displaystyle X_{k}}\n\n given \n\n\n\n\nX\n\nk\n\u2212\n1\n\n\n=\n\nx\n\nk\n\u2212\n1\n\n\n\n\n{\\displaystyle X_{k-1}=x_{k-1}}\n\n. The consistency of the resulting particle filter of this approximation and other extensions are developed in.[14] In the above display \n\n\n\n\n\u03b4\n\na\n\n\n\n\n{\\displaystyle \\delta _{a}}\n\n stands for the Dirac measure at a given state a.\nHowever, the transition prior probability distribution is often used as importance function, since it is easier to draw particles (or samples) and perform subsequent importance weight calculations:\nSequential Importance Resampling (SIR) filters with transition prior probability distribution as importance function are commonly known as bootstrap filter and condensation algorithm.\nResampling is used to avoid the problem of degeneracy of the algorithm, that is, avoiding the situation that all but one of the importance weights are close to zero. The performance of the algorithm can be also affected by proper choice of resampling method. The stratified sampling proposed by Kitagawa (1996) is optimal in terms of variance.\nA single step of sequential importance resampling is as follows:\nThe term Sampling Importance Resampling is also sometimes used when referring to SIR filters.\nThe \"direct version\" algorithm[citation needed] is rather simple (compared to other particle filtering algorithms) and it uses composition and rejection. To generate a single sample x at k from \n\n\n\n\np\n\n\nx\n\nk\n\n\n\n|\n\n\ny\n\n1\n:\nk\n\n\n\n\n(\nx\n\n|\n\n\ny\n\n1\n:\nk\n\n\n)\n\n\n{\\displaystyle p_{x_{k}|y_{1:k}}(x|y_{1:k})}\n\n:\nThe goal is to generate P \"particles\" at k using only the particles from \n\n\n\nk\n\u2212\n1\n\n\n{\\displaystyle k-1}\n\n. This requires that a Markov equation can be written (and computed) to generate a \n\n\n\n\nx\n\nk\n\n\n\n\n{\\displaystyle x_{k}}\n\n based only upon \n\n\n\n\nx\n\nk\n\u2212\n1\n\n\n\n\n{\\displaystyle x_{k-1}}\n\n. This algorithm uses composition of the P particles from \n\n\n\nk\n\u2212\n1\n\n\n{\\displaystyle k-1}\n\n to generate a particle at k and repeats (steps 2\u20136) until P particles are generated at k.\nThis can be more easily visualized if x is viewed as a two-dimensional array. One dimension is k and the other dimensions is the particle number. For example, \n\n\n\nx\n(\nk\n,\ni\n)\n\n\n{\\displaystyle x(k,i)}\n\n would be the ith particle at \n\n\n\nk\n\n\n{\\displaystyle k}\n\n and can also be written \n\n\n\n\nx\n\nk\n\n\n(\ni\n)\n\n\n\n\n{\\displaystyle x_{k}^{(i)}}\n\n (as done above in the algorithm). Step 3 generates a potential \n\n\n\n\nx\n\nk\n\n\n\n\n{\\displaystyle x_{k}}\n\n based on a randomly chosen particle (\n\n\n\n\nx\n\nk\n\u2212\n1\n\n\n(\ni\n)\n\n\n\n\n{\\displaystyle x_{k-1}^{(i)}}\n\n) at time \n\n\n\nk\n\u2212\n1\n\n\n{\\displaystyle k-1}\n\n and rejects or accepts it in step 6. In other words, the \n\n\n\n\nx\n\nk\n\n\n\n\n{\\displaystyle x_{k}}\n\n values are generated using the previously generated \n\n\n\n\nx\n\nk\n\u2212\n1\n\n\n\n\n{\\displaystyle x_{k-1}}\n\n.", 
    "dbpedia_url": "http://dbpedia.org/resource/Particle_filter", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Particle_filter\n"
}
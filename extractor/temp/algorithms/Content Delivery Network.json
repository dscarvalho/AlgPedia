{
    "about": "A content delivery network or content distribution network (CDN) is a globally distributed network of proxy servers deployed in multiple data centers. The goal of a CDN is to serve content to end-users with high availability and high performance. CDNs serve a large fraction of the Internet content today, including web objects (text, graphics and scripts), downloadable objects (media files, software, documents), applications (e-commerce, portals), live streaming media, on-demand streaming media, and social networks.", 
    "name": "Content Delivery Network", 
    "classification": "Distributed Algorithms", 
    "full_text": "A content delivery network or content distribution network (CDN) is a globally distributed network of proxy servers deployed in multiple data centers. The goal of a CDN is to serve content to end-users with high availability and high performance. CDNs serve a large fraction of the Internet content today, including web objects (text, graphics and scripts), downloadable objects (media files, software, documents), applications (e-commerce, portals), live streaming media, on-demand streaming media, and social networks.\nContent providers such as media companies and e-commerce vendors pay CDN operators to deliver their content to their end-users. In turn, a CDN pays ISPs, carriers, and network operators for hosting its servers in their data centers.\n\n\nCDN nodes are usually deployed in multiple locations, often over multiple backbones. Benefits include reducing bandwidth costs, improving page load times, or increasing global availability of content. The number of nodes and servers making up a CDN varies, depending on the architecture, some reaching thousands of nodes with tens of thousands of servers on many remote points of presence (PoPs). Others build a global network and have a small number of geographical PoPs.[1]\nRequests for content are typically algorithmically directed to nodes that are optimal in some way. When optimizing for performance, locations that are best for serving content to the user may be chosen. This may be measured by choosing locations that are the fewest hops, the least number of network seconds away from the requesting client, or the highest availability in terms of server performance (both current and historical), so as to optimize delivery across local networks. When optimizing for cost, locations that are least expensive may be chosen instead. In an optimal scenario, these two goals tend to align, as 'edge servers' that are close to the end-user at the edge of the network may have an advantage in performance or cost.\nMost CDN providers will provide their services over a varying, defined, set of PoPs, depending on the geographic coverage desired, such as United States, International or Global, Asia-Pacific, etc. These sets of PoPs can be called \"edges\", \"edge nodes\" or \"edge networks\" as they would be the closest edge of CDN assets to the end user.[2]\nThe CDN's Edge Network grows outward from the origin/s through further acquisitions (via purchase, peering, or exchange) of co-locations facilities, bandwidth, and servers.\nThe Internet was designed according to the end-to-end principle.[3] This principle keeps the core network relatively simple and moves the intelligence as much as possible to the network end-points: the hosts and clients. As a result, the core network is specialized, simplified, and optimized to only forward data packets.\nContent Delivery Networks augment the end-to-end transport network by distributing on it a variety of intelligent applications employing techniques designed to optimize content delivery. The resulting tightly integrated overlay uses web caching, server-load balancing, request routing, and content services.[4] These techniques are briefly described below.\nWeb caches store popular content on servers that have the greatest demand for the content requested. These shared network appliances reduce bandwidth requirements, reduce server load, and improve the client response times for content stored in the cache.\nServer-load balancing uses one or more techniques including service-based (global load balancing) or hardware-based, i.e. layer 4\u20137 switches, also known as a web switch, content switch, or multilayer switch to share traffic among a number of servers or web caches. Here the switch is assigned a single virtual IP address. Traffic arriving at the switch is then directed to one of the real web servers attached to the switch. This has the advantage of balancing load, increasing total capacity, improving scalability, and providing increased reliability by redistributing the load of a failed web server and providing server health checks.\nA content cluster or service node can be formed using a layer 4\u20137 switch to balance load across a number of servers or a number of web caches within the network.\nRequest routing directs client requests to the content source best able to serve the request. This may involve directing a client request to the service node that is closest to the client, or to the one with the most capacity. A variety of algorithms are used to route the request. These include Global Server Load Balancing, DNS-based request routing, Dynamic metafile generation, HTML rewriting,[5] and anycasting.[6] Proximity\u2014choosing the closest service node\u2014is estimated using a variety of techniques including reactive probing, proactive probing, and connection monitoring.[4]\nCDNs use a variety of methods of content delivery including, but not limited to, manual asset copying, active web caches, and global hardware load balancers.\nSeveral protocol suites are designed to provide access to a wide variety of content services distributed throughout a content network. The Internet Content Adaptation Protocol (ICAP) was developed in the late 1990s[7][8] to provide an open standard for connecting application servers. A more recently defined and robust solution is provided by the Open Pluggable Edge Services (OPES) protocol.[9] This architecture defines OPES service applications that can reside on the OPES processor itself or be executed remotely on a Callout Server. Edge Side Includes or ESI is a small markup language for edge level dynamic web content assembly. It is fairly common for websites to have generated content. It could be because of changing content like catalogs or forums, or because of the personalization. This creates a problem for caching systems. To overcome this problem, a group of companies created ESI.\nIn peer-to-peer (P2P) content-delivery networks, clients provide resources as well as use them. This means that unlike client-server systems, the content centric networks can actually perform better as more users begin to access the content (especially with protocols such as Bittorrent that require users to share). This property is one of the major advantages of using P2P networks because it makes the setup and running costs very small for the original content distributor.[10][11]\nIf content owners are not satisfied with the options or costs of a commercial CDN service, they can create their own CDN. This is called a private CDN. A private CDN consists of POPs (points of presence) that are only serving content for their owner. These POPs can be caching servers,[12] reverse proxies or application delivery controllers.[13] It can be as simple as two caching servers,[12] or large enough to serve petabytes of content.[14]\nThe rapid growth of streaming video traffic[15] uses large capital expenditures by broadband providers[16] in order to meet this demand and to retain subscribers by delivering a sufficiently good quality of experience.\nTo address this, telecommunications service providers (TSPs) have begun to launch their own content delivery networks as a means to lessen the demands on the network backbone and to reduce infrastructure investments.\nBecause they own the networks over which video content is transmitted, telco CDNs have advantages over traditional CDNs.\nThey own the last mile and can deliver content closer to the end user because it can be cached deep in their networks. This deep caching minimizes the distance that video data travels over the general Internet and delivers it more quickly and reliably.\nTelco CDNs also have a built-in cost advantage since traditional CDNs must lease bandwidth from them and build the operator\u2019s margin into their own cost structures.\nIn addition, by operating their own content delivery infrastructure, telco operators have a better control over the utilization of their resources. Content management operations performed by CDNs are usually applied without or with very limited information about the network (e.g. topology, utilization etc.) of the telco-operators with which they interact or have business relationships. These pose a number of challenges for the telco-operators which have a limited sphere of actions in face of the impact of these operations on the utilization of their resources.\nIn contrast, the deployment of telco-CDNs allow operators to implement their own content management operations,[17][18] which enable them to have better control over the utilization of their resources and, as such, provide better quality of service and experience to their end users.\nIn June 2011, StreamingMedia.com reported that a group of TSPs had founded an Operator Carrier Exchange (OCX)[19] to interconnect their networks and compete more directly against large traditional CDNs like Akamai and Limelight Networks, which have extensive PoPs worldwide. This way, telcos are building a Federated CDN offer, much more interesting for a content provider willing to deliver its content to the aggregated audience of this federation.\nIt is likely that in a near future, other telco CDN federations will be created. They will grow by enrollment of new telco joining the federation and bringing network presence and Internet subscriber base to the existing ones.\nIn August 2011, a global consortium of leading Internet service providers led by Google announced their official implementation of the edns-client-subnet IETF Internet-Draft,[20] which is intended to accurately localize DNS resolution responses. The initiative involves a limited number of leading DNS and CDN service providers. With the edns-client-subnet EDNS0 option, the recursive DNS servers of CDNs will utilize the IP address of the requesting client subnet when resolving DNS requests. If a CDN relies on the IP address of the DNS resolver instead of the client when resolving DNS requests, it can incorrectly geo-locate a client if the client is using Google anycast addresses for their DNS resolver, which can create latency problems. Initially, Google's 8.8.8.8 DNS addresses geo-located to California, potentially far from the location of the requesting client, but now the Google Public DNS servers are available worldwide.[21]\nGenerally speaking, all Internet service providers can provide a content delivery network.", 
    "dbpedia_url": "http://dbpedia.org/resource/Content_delivery_network", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Content_delivery_network\n"
}
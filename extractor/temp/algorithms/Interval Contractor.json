{
    "about": "In mathematics, an interval contractor (or contractor for short) [1] associated to a set X is an operator C which associates to a box [x] in Rn another box C([x]) of Rn such that the two following properties are always satisfied", 
    "name": "Interval Contractor", 
    "classification": "Numerical Analysis", 
    "full_text": "In mathematics, an interval contractor (or contractor for short) [1] associated to a set X is an operator C which associates to a box [x] in Rn another box C([x]) of Rn such that the two following properties are always satisfied\nA contractor associated to a constraint (such as an equation or an inequality) is a contractor associated to the set X of all x which satisfy the constraint. Contractors make it possible to improve the efficiency of branch-and-bound algorithms classically used in interval analysis.\n\n\nA contractor C is monotonic if we have \n\n\n\n[\nx\n]\n\u2282\n[\ny\n]\n\u21d2\nC\n(\n[\nx\n]\n)\n\u2282\nC\n(\n[\ny\n]\n)\n\n\n{\\displaystyle [x]\\subset [y]\\Rightarrow C([x])\\subset C([y])}\n\n\nIt is minimal if for all boxes [x], we have \n\n\n\nC\n(\n[\nx\n]\n)\n=\n[\n[\nx\n]\n\u2229\nX\n]\n\n\n{\\displaystyle C([x])=[[x]\\cap X]}\n\n, where [A] is the interval hull of the set A, i.e., the smallest box enclosing A.\nThe contractor C is thin if for all points x, \n\n\n\nC\n(\n{\nx\n}\n)\n=\n{\nx\n}\n\u2229\nX\n\n\n{\\displaystyle C(\\{x\\})=\\{x\\}\\cap X}\n\n where {x} denotes the degenerated box enclosing x as a single point.\nThe contractor C is idempotent if for all boxes [x], we have \n\n\n\nC\n\u2218\nC\n(\n[\nx\n]\n)\n=\nC\n(\n[\nx\n]\n)\n.\n\n\n{\\displaystyle C\\circ C([x])=C([x]).}\n\n\nThe contractor C is convergent if for all sequences [x](k) of boxes containing x, we have \n\n\n\n[\nx\n]\n(\nk\n)\n\u2192\nx\n\u21d2\nC\n(\n[\nx\n]\n(\nk\n)\n)\n\u2192\n{\nx\n}\n\u2229\nX\n.\n\n\n{\\displaystyle [x](k)\\rightarrow x\\Rightarrow C([x](k))\\rightarrow \\{x\\}\\cap X.}\n\n\nFigure 1 represents the set X painted grey and some boxes. Some of them of degenerated, i.e., they correspond to singletons. Figure 2 represents these boxes after contraction. Note that no point of X has been removed by the contractor. The contractor is minimal for the cyan box but is pessimistic for the green one. All degenerated blue boxes are contracted to the empty box. The magenta box and the red box cannot be contracted.\nSome operations can be performed on contractors to build more complex contractors. [2] The intersection, the union, the composition and the repetition are defined as follows.\nThere exist different ways to build contractors associated to equations and inequalities, say, f(x) in [y]. Most of them are based on interval arithmetic. One of the most efficient and most simple is the forward/backward contractor (also called as HC4-revise). [3] [4]\nThe principle is to evaluate f(x) using interval arithmetic (this is the forward step). The resulting interval is intersected with [y]. A backward evaluation of f(x) is then performed in order to contract the intervals for the xi (this is the backward step). We now illustrate the principle on a simple example.\nConsider the constraint \n\n\n\n(\n\nx\n\n1\n\n\n+\n\nx\n\n2\n\n\n)\n\u22c5\n\nx\n\n3\n\n\n\u2208\n[\n1\n,\n2\n]\n.\n\n\n{\\displaystyle (x_{1}+x_{2})\\cdot x_{3}\\in [1,2].}\n\n We can evaluate the function f(x) by introducing the two intermediate variables a and b, as follows\nThe two previous constraints are called forward constraints. We get the backward constraints by taking each forward constraint in the reverse order and isolating each variable on the right hand side. We get\nThe resulting forward/backward contractor \n\n\n\nC\n(\n[\n\nx\n\n1\n\n\n]\n,\n[\n\nx\n\n2\n\n\n]\n,\n[\n\nx\n\n3\n\n\n]\n)\n\n\n{\\displaystyle C([x_{1}],[x_{2}],[x_{3}])}\n\n is obtained by evaluating the forward and the backward constraints using interval analysis.", 
    "dbpedia_url": "http://dbpedia.org/resource/Interval_contractor", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Interval_contractor\n"
}
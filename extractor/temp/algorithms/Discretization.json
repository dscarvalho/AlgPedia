{
    "about": "In mathematics, discretization concerns the process of transferring continuous functions, models, and equations into discrete counterparts. This process is usually carried out as a first step toward making them suitable for numerical evaluation and implementation on digital computers. Processing on a digital computer requires another process called quantization. Dichotomization is the special case of discretization in which the number of discrete classes is 2, which can approximate a continuous variable as a binary variable (creating a dichotomy for modeling purposes, as in binary classification).", 
    "name": "Discretization", 
    "classification": "Numerical Analysis", 
    "full_text": "In mathematics, discretization concerns the process of transferring continuous functions, models, and equations into discrete counterparts. This process is usually carried out as a first step toward making them suitable for numerical evaluation and implementation on digital computers. Processing on a digital computer requires another process called quantization. Dichotomization is the special case of discretization in which the number of discrete classes is 2, which can approximate a continuous variable as a binary variable (creating a dichotomy for modeling purposes, as in binary classification).\nDiscretization is also related to discrete mathematics, and is an important component of granular computing. In this context, discretization may also refer to modification of variable or category granularity, as when multiple discrete variables are aggregated or multiple discrete categories fused.\nWhenever continuous data is discretized, there is always some amount of discretization error. The goal is to reduce the amount to a level considered negligible for the modeling purposes at hand.\n\n\nDiscretization is also concerned with the transformation of continuous differential equations into discrete difference equations, suitable for numerical computing.\nThe following continuous-time state space model\nwhere v and w are continuous zero-mean white noise sources with covariances\ncan be discretized, assuming zero-order hold for the input u and continuous integration for the noise v, to\nwith covariances\nwhere\nand \n\n\n\nT\n\n\n{\\displaystyle T}\n\n is the sample time, although \n\n\n\n\n\nA\n\n\nT\n\n\n\n\n{\\displaystyle \\mathbf {A} ^{T}}\n\n is the transposed matrix of \n\n\n\n\nA\n\n\n\n{\\displaystyle \\mathbf {A} }\n\n.\nA clever trick to compute Ad and Bd in one step is by utilizing the following property:[1]:p. 215\nand then having\nNumerical evaluation of \n\n\n\n\n\nQ\n\n\nd\n\n\n\n\n{\\displaystyle \\mathbf {Q} _{d}}\n\n is a bit trickier due to the matrix exponential integral. It can, however, be computed by first constructing a matrix, and computing the exponential of it (Van Loan, 1978):\nThe discretized process noise is then evaluated by multiplying the transpose of the lower-right partition of G with the upper-right partition of G:\nStarting with the continuous model\nwe know that the matrix exponential is\nand by premultiplying the model we get\nwhich we recognize as\nand by integrating..\nwhich is an analytical solution to the continuous model.\nNow we want to discretise the above expression. We assume that u is constant during each timestep.\nWe recognize the bracketed expression as \n\n\n\n\nx\n\n[\nk\n]\n\n\n{\\displaystyle \\mathbf {x} [k]}\n\n, and the second term can be simplified by substituting \n\n\n\nv\n=\nk\nT\n+\nT\n\u2212\n\u03c4\n\n\n{\\displaystyle v=kT+T-\\tau }\n\n. We also assume that \n\n\n\n\nu\n\n\n\n{\\displaystyle \\mathbf {u} }\n\n is constant during the integral, which in turn yields\nwhich is an exact solution to the discretization problem.\nExact discretization may sometimes be intractable due to the heavy matrix exponential and integral operations involved. It is much easier to calculate an approximate discrete model, based on that for small timesteps \n\n\n\n\ne\n\n\nA\n\nT\n\n\n\u2248\n\nI\n\n+\n\nA\n\nT\n\n\n{\\displaystyle e^{\\mathbf {A} T}\\approx \\mathbf {I} +\\mathbf {A} T}\n\n. The approximate solution then becomes:\nOther possible approximations are \n\n\n\n\ne\n\n\nA\n\nT\n\n\n\u2248\n\n\n(\n\nI\n\n\u2212\n\nA\n\nT\n)\n\n\n\u2212\n1\n\n\n\n\n{\\displaystyle e^{\\mathbf {A} T}\\approx \\left(\\mathbf {I} -\\mathbf {A} T\\right)^{-1}}\n\n and \n\n\n\n\ne\n\n\nA\n\nT\n\n\n\u2248\n\n(\n\nI\n\n+\n\n\n1\n2\n\n\n\nA\n\nT\n)\n\n\n\n(\n\nI\n\n\u2212\n\n\n1\n2\n\n\n\nA\n\nT\n)\n\n\n\u2212\n1\n\n\n\n\n{\\displaystyle e^{\\mathbf {A} T}\\approx \\left(\\mathbf {I} +{\\frac {1}{2}}\\mathbf {A} T\\right)\\left(\\mathbf {I} -{\\frac {1}{2}}\\mathbf {A} T\\right)^{-1}}\n\n. Each of them have different stability properties. The last one is known as the bilinear transform, or Tustin transform, and preserves the (in)stability of the continuous-time system.\nIn statistics and machine learning, discretization refers to the process of converting continuous features or variables to discretized or nominal features. This can be useful when creating probability mass functions.", 
    "dbpedia_url": "http://dbpedia.org/resource/Discretization", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Discretization\n"
}
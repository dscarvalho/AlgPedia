{
    "about": "t-distributed stochastic neighbor embedding (t-SNE) is a machine learning algorithm for dimensionality reduction developed by Geoffrey Hinton and Laurens van der Maaten.[1] It is a nonlinear dimensionality reduction technique that is particularly well-suited for embedding high-dimensional data into a space of two or three dimensions, which can then be visualized in a scatter plot. Specifically, it models each high-dimensional object by a two- or three-dimensional point in such a way that similar objects are modeled by nearby points and dissimilar objects are modeled by distant points.", 
    "classification": "Machine Learning Algorithms", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/T-distributed_stochastic_neighbor_embedding\n", 
    "full_text": "t-distributed stochastic neighbor embedding (t-SNE) is a machine learning algorithm for dimensionality reduction developed by Geoffrey Hinton and Laurens van der Maaten.[1] It is a nonlinear dimensionality reduction technique that is particularly well-suited for embedding high-dimensional data into a space of two or three dimensions, which can then be visualized in a scatter plot. Specifically, it models each high-dimensional object by a two- or three-dimensional point in such a way that similar objects are modeled by nearby points and dissimilar objects are modeled by distant points.\nThe t-SNE algorithm comprises two main stages. First, t-SNE constructs a probability distribution over pairs of high-dimensional objects in such a way that similar objects have a high probability of being picked, whilst dissimilar points have an extremely small probability of being picked. Second, t-SNE defines a similar probability distribution over the points in the low-dimensional map, and it minimizes the Kullback\u2013Leibler divergence between the two distributions with respect to the locations of the points in the map. Note that whilst the original algorithm uses the Euclidean distance between objects as the base of its similarity metric, this should be changed as appropriate.\nt-SNE has been used in a wide range of applications, including computer security research,[2] music analysis,[3] cancer research,[4] bioinformatics,[5] and biomedical signal processing.[6]\nGiven a set of \n\n\n\nN\n\n\n{\\displaystyle N}\n\n high-dimensional objects \n\n\n\n\n\nx\n\n\n1\n\n\n,\n\u2026\n,\n\n\nx\n\n\nN\n\n\n\n\n{\\displaystyle \\mathbf {x} _{1},\\dots ,\\mathbf {x} _{N}}\n\n, t-SNE first computes probabilities \n\n\n\n\np\n\ni\nj\n\n\n\n\n{\\displaystyle p_{ij}}\n\n that are proportional to the similarity of objects \n\n\n\n\n\nx\n\n\ni\n\n\n\n\n{\\displaystyle \\mathbf {x} _{i}}\n\n and \n\n\n\n\n\nx\n\n\nj\n\n\n\n\n{\\displaystyle \\mathbf {x} _{j}}\n\n, as follows:\nThe bandwidth of the Gaussian kernels \n\n\n\n\n\u03c3\n\ni\n\n\n\n\n{\\displaystyle \\sigma _{i}}\n\n, is set in such a way that the perplexity of the conditional distribution equals a predefined perplexity using a binary search. As a result, the bandwidth is adapted to the density of the data: smaller values of \n\n\n\n\n\u03c3\n\ni\n\n\n\n\n{\\displaystyle \\sigma _{i}}\n\n are used in denser parts of the data space.\nt-SNE aims to learn a \n\n\n\nd\n\n\n{\\displaystyle d}\n\n-dimensional map \n\n\n\n\n\ny\n\n\n1\n\n\n,\n\u2026\n,\n\n\ny\n\n\nN\n\n\n\n\n{\\displaystyle \\mathbf {y} _{1},\\dots ,\\mathbf {y} _{N}}\n\n (with \n\n\n\n\n\ny\n\n\ni\n\n\n\u2208\n\n\nR\n\n\nd\n\n\n\n\n{\\displaystyle \\mathbf {y} _{i}\\in \\mathbb {R} ^{d}}\n\n) that reflects the similarities \n\n\n\n\np\n\ni\nj\n\n\n\n\n{\\displaystyle p_{ij}}\n\n as well as possible. To this end, it measures similarities \n\n\n\n\nq\n\ni\nj\n\n\n\n\n{\\displaystyle q_{ij}}\n\n between two points in the map \n\n\n\n\n\ny\n\n\ni\n\n\n\n\n{\\displaystyle \\mathbf {y} _{i}}\n\n and \n\n\n\n\n\ny\n\n\nj\n\n\n\n\n{\\displaystyle \\mathbf {y} _{j}}\n\n, using a very similar approach. Specifically, \n\n\n\n\nq\n\ni\nj\n\n\n\n\n{\\displaystyle q_{ij}}\n\n is defined as:\nHerein a heavy-tailed Student-t distribution (with one-degree of freedom, which is the same as a Cauchy distribution) is used to measure similarities between low-dimensional points in order to allow dissimilar objects to be modeled far apart in the map.\nThe locations of the points \n\n\n\n\n\ny\n\n\ni\n\n\n\n\n{\\displaystyle \\mathbf {y} _{i}}\n\n in the map are determined by minimizing the (non-symmetric) Kullback\u2013Leibler divergence of the distribution \n\n\n\nQ\n\n\n{\\displaystyle Q}\n\n from the distribution \n\n\n\nP\n\n\n{\\displaystyle P}\n\n, that is:\nThe minimization of the Kullback\u2013Leibler divergence with respect to the points \n\n\n\n\n\ny\n\n\ni\n\n\n\n\n{\\displaystyle \\mathbf {y} _{i}}\n\n is performed using gradient descent. The result of this optimization is a map that reflects the similarities between the high-dimensional inputs well.", 
    "name": "T Distributed Stochastic Neighbor Embedding"
}
{
    "about": "Social cognitive optimization (SCO) is a population-based metaheuristic optimization algorithm which was developed in 2002.[1] This algorithm is based on the social cognitive theory, and the key point of the ergodicity is the process of individual learning of a set of agents with their own memory and their social learning with the knowledge points in the social sharing library. It has been used for solving continuous optimization,[2][3] integer programming,[4] and combinatorial optimization problems. It has been incorporated into the NLPSolver extension of Calc in Apache OpenOffice.", 
    "name": "Social Cognitive Optimization", 
    "classification": "Optimization Algorithms And Methods", 
    "full_text": "Social cognitive optimization (SCO) is a population-based metaheuristic optimization algorithm which was developed in 2002.[1] This algorithm is based on the social cognitive theory, and the key point of the ergodicity is the process of individual learning of a set of agents with their own memory and their social learning with the knowledge points in the social sharing library. It has been used for solving continuous optimization,[2][3] integer programming,[4] and combinatorial optimization problems. It has been incorporated into the NLPSolver extension of Calc in Apache OpenOffice.\nLet \n\n\n\nf\n(\nx\n)\n\n\n{\\displaystyle f(x)}\n\n be a global optimization problem, where \n\n\n\nx\n\n\n{\\displaystyle x}\n\n is a state in the problem space \n\n\n\nS\n\n\n{\\displaystyle S}\n\n. In SCO, each state is called a knowledge point, and the function \n\n\n\nf\n\n\n{\\displaystyle f}\n\n is the goodness function.\nIn SCO, there are a population of \n\n\n\n\nN\n\nc\n\n\n\n\n{\\displaystyle N_{c}}\n\n cognitive agents solving in parallel, with a social sharing library. Each agent holds a private memory containing one knowledge point, and the social sharing library contains a set of \n\n\n\n\nN\n\nL\n\n\n\n\n{\\displaystyle N_{L}}\n\n knowledge points. The algorithm runs in T iterative learning cycles. By running as a Markov chain process, the system behavior in the tth cycle only depends on the system status in the (t \u2212 1)th cycle. The process flow is in follows:\nSCO has three main parameters, i.e., the number of agents \n\n\n\n\nN\n\nc\n\n\n\n\n{\\displaystyle N_{c}}\n\n, the size of social sharing library \n\n\n\n\nN\n\nL\n\n\n\n\n{\\displaystyle N_{L}}\n\n, and the learning cycle \n\n\n\nT\n\n\n{\\displaystyle T}\n\n. With the initialization process, the total number of knowledge points to be generated is \n\n\n\n\nN\n\nL\n\n\n+\n\nN\n\nc\n\n\n\u2217\n(\nT\n+\n1\n)\n\n\n{\\displaystyle N_{L}+N_{c}*(T+1)}\n\n, and is not related too much with \n\n\n\n\nN\n\nL\n\n\n\n\n{\\displaystyle N_{L}}\n\n if \n\n\n\nT\n\n\n{\\displaystyle T}\n\n is large.\nCompared to traditional swarm algorithms, e.g. particle swarm optimization, SCO can achieving high-quality solutions as \n\n\n\n\nN\n\nc\n\n\n\n\n{\\displaystyle N_{c}}\n\n is small, even as \n\n\n\n\nN\n\nc\n\n\n=\n1\n\n\n{\\displaystyle N_{c}=1}\n\n. Nevertheless, smaller \n\n\n\n\nN\n\nc\n\n\n\n\n{\\displaystyle N_{c}}\n\n and \n\n\n\n\nN\n\nL\n\n\n\n\n{\\displaystyle N_{L}}\n\n might lead to premature convergence. Some variants [5] were proposed to guaranteed the global convergence.", 
    "dbpedia_url": "http://dbpedia.org/resource/Social_cognitive_optimization", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Social_cognitive_optimization\n"
}
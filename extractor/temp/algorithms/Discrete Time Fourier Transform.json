{
    "about": "In mathematics, the discrete-time Fourier transform (DTFT) is a form of Fourier analysis that is applicable to the uniformly-spaced samples of a continuous function. The term discrete-time refers to the fact that the transform operates on discrete data (samples) whose interval often has units of time. From only the samples, it produces a function of frequency that is a periodic summation of the continuous Fourier transform of the original continuous function. Under certain theoretical conditions, described by the sampling theorem, the original continuous function can be recovered perfectly from the DTFT and thus from the original discrete samples. The DTFT itself is a continuous function of frequency, but discrete samples of it can be readily calculated via the discrete Fourier transform (DFT) (see Sampling the DTFT), which is by far the most common method of modern Fourier analysis.", 
    "classification": "Digital Signal Processing", 
    "wikipedia_url": "http://en.wikipedia.org/wiki/Discrete-time_Fourier_transform\n", 
    "full_text": "In mathematics, the discrete-time Fourier transform (DTFT) is a form of Fourier analysis that is applicable to the uniformly-spaced samples of a continuous function. The term discrete-time refers to the fact that the transform operates on discrete data (samples) whose interval often has units of time. From only the samples, it produces a function of frequency that is a periodic summation of the continuous Fourier transform of the original continuous function. Under certain theoretical conditions, described by the sampling theorem, the original continuous function can be recovered perfectly from the DTFT and thus from the original discrete samples. The DTFT itself is a continuous function of frequency, but discrete samples of it can be readily calculated via the discrete Fourier transform (DFT) (see Sampling the DTFT), which is by far the most common method of modern Fourier analysis.\nBoth transforms are invertible. The inverse DTFT is the original sampled data sequence. The inverse DFT is a periodic summation of the original sequence. The fast Fourier transform (FFT) is an algorithm for computing one cycle of the DFT, and its inverse produces one cycle of the inverse DFT.\n\n\nThe discrete-time Fourier transform of a discrete set of real or complex numbers x[n], for all integers n, is a Fourier series, which produces a periodic function of a frequency variable. When the frequency variable, \u03c9, has normalized units of radians/sample, the periodicity is 2\u03c0, and the Fourier series is:\n\n\n\n\n\nX\n\n2\n\u03c0\n\n\n(\n\u03c9\n)\n=\n\n\u2211\n\nn\n=\n\u2212\n\u221e\n\n\n\u221e\n\n\nx\n[\nn\n]\n\n\ne\n\n\u2212\ni\n\u03c9\nn\n\n\n.\n\n\n{\\displaystyle X_{2\\pi }(\\omega )=\\sum _{n=-\\infty }^{\\infty }x[n]\\,e^{-i\\omega n}.}\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n(Eq.1)\nThe utility of this frequency domain function is rooted in the Poisson summation formula. Let X(f) be the Fourier transform of any function, x(t), whose samples at some interval T (seconds) are equal (or proportional to) the x[n] sequence, i.e. \n\n\n\nT\n\u22c5\nx\n(\nn\nT\n)\n=\nx\n[\nn\n]\n\n\n{\\displaystyle T\\cdot x(nT)=x[n]}\n\n. Then the periodic function represented by the Fourier series is a periodic summation of X(f). In terms of frequency \n\n\n\n\nf\n\n\n\n{\\displaystyle \\scriptstyle f}\n\n in hertz (cycles/sec):\n\n\n\n\n\nX\n\n1\n\n/\n\nT\n\n\n(\nf\n)\n=\n\nX\n\n2\n\u03c0\n\n\n(\n2\n\u03c0\nf\nT\n)\n\u00a0\n\n\n\n\n=\n\n\n\nd\ne\nf\n\n\n\n\n\n\n\u2211\n\nn\n=\n\u2212\n\u221e\n\n\n\u221e\n\n\n\n\n\n\nT\n\u22c5\nx\n(\nn\nT\n)\n\n\u23df\n\n\n\nx\n[\nn\n]\n\n\n\u00a0\n\ne\n\n\u2212\ni\n2\n\u03c0\nf\nT\nn\n\n\n\n\n\n\n\n=\n\n\n\nP\no\ni\ns\ns\no\nn\n\nf\n.\n\n\n\n\n\n\n\n\u2211\n\nk\n=\n\u2212\n\u221e\n\n\n\u221e\n\n\nX\n\n(\nf\n\u2212\nk\n\n/\n\nT\n)\n\n.\n\n\n{\\displaystyle X_{1/T}(f)=X_{2\\pi }(2\\pi fT)\\ {\\stackrel {\\mathrm {def} }{=}}\\sum _{n=-\\infty }^{\\infty }\\underbrace {T\\cdot x(nT)} _{x[n]}\\ e^{-i2\\pi fTn}\\;{\\stackrel {\\mathrm {Poisson\\;f.} }{=}}\\;\\sum _{k=-\\infty }^{\\infty }X\\left(f-k/T\\right).}\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n(Eq.2)\nThe integer k has units of cycles/sample, and 1/T is the sample-rate, fs (samples/sec). So X1/T(f) comprises exact copies of X(f) that are shifted by multiples of fs hertz and combined by addition. \u00a0For sufficiently large fs the k=0 term can be observed in the region [\u2212fs/2, fs/2] with little or no distortion (aliasing) from the other terms. In Fig.1, the extremities of the distribution in the upper left corner are masked by aliasing in the periodic summation (lower left).\nWe also note that \u00a0\n\n\n\n\ne\n\n\u2212\ni\n2\n\u03c0\nf\nT\nn\n\n\n\n\n{\\displaystyle e^{-i2\\pi fTn}}\n\n\u00a0 is the Fourier transform of \u00a0\n\n\n\n\n\u03b4\n(\nt\n\u2212\nn\nT\n)\n.\n\n\n\n{\\displaystyle \\scriptstyle \\delta (t-nT).}\n\n\u00a0 Therefore, an alternative definition of DTFT is:[note 1]\n\n\n\n\n\nX\n\n1\n\n/\n\nT\n\n\n(\nf\n)\n=\n\n\nF\n\n\n\n{\n\n\u2211\n\nn\n=\n\u2212\n\u221e\n\n\n\u221e\n\n\nx\n[\nn\n]\n\u22c5\n\u03b4\n(\nt\n\u2212\nn\nT\n)\n}\n\n\n\n{\\displaystyle X_{1/T}(f)={\\mathcal {F}}\\left\\{\\sum _{n=-\\infty }^{\\infty }x[n]\\cdot \\delta (t-nT)\\right\\}}\n\n\n\n\u00a0\n\u00a0\n\u00a0\n\u00a0\n(Eq.3)\nThe modulated Dirac comb function is a mathematical abstraction sometimes referred to as impulse sampling.[1]\nAn operation that recovers the discrete data sequence from the DTFT function is called an inverse DTFT. For instance, the inverse continuous Fourier transform of both sides of Eq.3 produces the sequence in the form of a modulated Dirac comb function:\nHowever, noting that X1/T(f) is periodic, all the necessary information is contained within any interval of length 1/T. In both Eq.1 and Eq.2, the summations over n are a Fourier series, with coefficients x[n]. The standard formulas for the Fourier coefficients are also the inverse transforms:\nWhen the input data sequence x[n] is N-periodic, Eq.2 can be computationally reduced to a discrete Fourier transform (DFT), because:\nThe kernel \u00a0\n\n\n\n\nx\n[\nn\n]\n\u22c5\n\ne\n\n\u2212\ni\n2\n\u03c0\nf\nT\nn\n\n\n\n\n\n{\\displaystyle \\scriptstyle x[n]\\cdot e^{-i2\\pi fTn}}\n\n\u00a0 is N-periodic at the harmonic frequencies, \n\n\n\n\nf\n=\n\n\nk\n\nN\nT\n\n\n\n.\n\n\n\n{\\displaystyle \\scriptstyle f={\\frac {k}{NT}}.}\n\n \u00a0 Introducing the notation \n\n\n\n\n\u2211\n\nN\n\n\n\n\n{\\displaystyle \\sum _{N}}\n\n to represent a sum over any n-sequence of length N, we can write:\nTherefore, the DTFT diverges at the harmonic frequencies, but at different frequency-dependent rates. And those rates are given by the DFT of one cycle of the x[n] sequence. In terms of a Dirac comb function, this is represented by:\nWhen the DTFT is continuous, a common practice is to compute an arbitrary number of samples (N) of one cycle of the periodic function X1/T:\nwhere xN is a periodic summation:\nThe xN sequence is the inverse DFT. Thus, our sampling of the DTFT causes the inverse transform to become periodic. The array of \n\n\n\n\n\n|\n\nX\n\nk\n\n\n|\n\n\n2\n\n\n\n\n{\\displaystyle \\left|X_{k}\\right|^{2}}\n\n is known as a periodogram, where parameter N is known to Matlab users as NFFT.[2]\nIn order to evaluate one cycle of xN numerically, we require a finite-length x[n] sequence. For instance, a long sequence might be truncated by a window function of length L resulting in two cases worthy of special mention: L \u2264 N and L = I\u2022N, for some integer I (typically 6 or 8). For notational simplicity, consider the x[n] values below to represent the modified values.\nWhen L = I\u2022N\u00a0 a cycle of xN reduces to a summation of I blocks of length N. This goes by various names, such as:[3][4][5][6][7]\nAn interesting way to understand/motivate the technique is to recall that decimation of sampled data in one domain (time or frequency) produces aliasing in the other, and vice versa. The xN summation is mathematically equivalent to aliasing, leading to decimation in frequency, leaving only DTFT samples least affected by spectral leakage. That is usually a priority when implementing an FFT filter-bank (channelizer). With a conventional window function of length L, scalloping loss would be unacceptable. So multi-block windows are created using FIR filter design tools. Their frequency profile is flat at the highest point and falls off quickly at the midpoint between the remaining DTFT samples. The larger the value of parameter I the better the potential performance. We note that the same results can be obtained by computing and decimating an L-length DFT, but that is not computationally efficient.\nWhen L \u2264 N the DFT is usually written in this more familiar form:\nIn order to take advantage of a fast Fourier transform algorithm for computing the DFT, the summation is usually performed over all N terms, even though N-L of them are zeros. Therefore, the case L < N is often referred to as \"zero-padding\".\nSpectral leakage, which increases as L decreases, is detrimental to certain important performance metrics, such as resolution of multiple frequency components and the amount of noise measured by each DTFT sample. But those things don't always matter, for instance when the x[n] sequence is a noiseless sinusoid (or a constant), shaped by a window function. Then it is a common practice to use zero-padding to graphically display and compare the detailed leakage patterns of window functions. To illustrate that for a rectangular window, consider the sequence:\nThe two figures below are plots of the magnitude of two different sized DFTs, as indicated in their labels. In both cases, the dominant component is at the signal frequency: f = 1/8 = 0.125. Also visible on the right is the spectral leakage pattern of the L\u00a0=\u00a064 rectangular window. The illusion on the left is a result of sampling the DTFT at all of its zero-crossings. Rather than the DTFT of a finite-length sequence, it gives the impression of an infinitely long sinusoidal sequence. Contributing factors to the illusion are the use of a rectangular window, and the choice of a frequency (1/8 = 8/64) with exactly 8 (an integer) cycles per 64 samples.\nThe convolution theorem for sequences is:\nAn important special case is the circular convolution of sequences x and y defined by xN * y where xN is a periodic summation. \u00a0The discrete-frequency nature of DTFT{xN} \"selects\" only discrete values from the continuous function DTFT{y}, which results in considerable simplification of the inverse transform. As shown at Convolution theorem#Functions of discrete variable sequences:\nFor x and y sequences whose non-zero duration is less than or equal to N, a final simplification is:\nThe significance of this result is expounded at Circular convolution and Fast convolution algorithms.\nThe bilateral Z-transform is defined by:\nWe denote this function as \n\n\n\n\n\n\nX\n^\n\n\n\n(\nz\n)\n\n\n{\\displaystyle {\\widehat {X}}(z)}\n\n to avoid confusion with the Fourier transform.\u00a0 For the special case that z is constrained to values of the form \n\n\n\n\ne\n\ni\n\u03c9\n\n\n:\n\n\n{\\displaystyle e^{i\\omega }:}\n\n\nNote that when parameter T changes, the terms of \n\n\n\n\nX\n\n2\n\u03c0\n\n\n(\n\u03c9\n)\n\n\n{\\displaystyle X_{2\\pi }(\\omega )}\n\n remain a constant separation (2\u03c0) apart, and their width scales up or down. The terms of \n\n\n\n\nX\n\n1\n\n/\n\nT\n\n\n(\nf\n)\n\n\n{\\displaystyle X_{1/T}(f)}\n\n remain a constant width and their separation (1/T) scales up or down.\nSome common transform pairs are shown in the table below. The following notation applies:\n\n\n\n\n\nX\n\no\n\n\n(\n\u03c9\n)\n=\n\n\n\n2\n\u03c0\n\nM\n\n\n\n\u2211\n\nk\n=\n\u2212\n(\nM\n\u2212\n1\n)\n\n/\n\n2\n\n\n(\nM\n\u2212\n1\n)\n\n/\n\n2\n\n\n\u03b4\n\n(\n\u03c9\n\u2212\n\n\n\n2\n\u03c0\nk\n\nM\n\n\n)\n\n\n\n\n{\\displaystyle X_{o}(\\omega )={\\frac {2\\pi }{M}}\\sum _{k=-(M-1)/2}^{(M-1)/2}\\delta \\left(\\omega -{\\frac {2\\pi k}{M}}\\right)\\,}\n\n \u00a0 \u00a0 odd M\n\n\n\n\n\nX\n\no\n\n\n(\n\u03c9\n)\n=\n\n\n\n2\n\u03c0\n\nM\n\n\n\n\u2211\n\nk\n=\n\u2212\nM\n\n/\n\n2\n+\n1\n\n\nM\n\n/\n\n2\n\n\n\u03b4\n\n(\n\u03c9\n\u2212\n\n\n\n2\n\u03c0\nk\n\nM\n\n\n)\n\n\n\n\n{\\displaystyle X_{o}(\\omega )={\\frac {2\\pi }{M}}\\sum _{k=-M/2+1}^{M/2}\\delta \\left(\\omega -{\\frac {2\\pi k}{M}}\\right)\\,}\n\n \u00a0 \u00a0 even M\n\n\n\n\n\nX\n\no\n\n\n(\n\u03c9\n)\n=\n\n\n1\n\n1\n\u2212\n\ne\n\n\u2212\ni\n\u03c9\n\n\n\n\n\n+\n\u03c0\n\u22c5\n\u03b4\n(\n\u03c9\n)\n\n\n\n{\\displaystyle X_{o}(\\omega )={\\frac {1}{1-e^{-i\\omega }}}+\\pi \\cdot \\delta (\\omega )\\!}\n\n\n\n\n\n\n\nX\n\n2\n\u03c0\n\n\n(\n\u03c9\n)\n=\n2\n\u03c0\n\n\u2211\n\nk\n=\n\u2212\n\u221e\n\n\n\u221e\n\n\n\u03b4\n(\n\u03c9\n+\na\n\u2212\n2\n\u03c0\nk\n)\n\n\n{\\displaystyle X_{2\\pi }(\\omega )=2\\pi \\sum _{k=-\\infty }^{\\infty }\\delta (\\omega +a-2\\pi k)}\n\n\n\n\n\n\n\nX\n\n2\n\u03c0\n\n\n(\n\u03c9\n)\n=\n\u03c0\n\n\u2211\n\nk\n=\n\u2212\n\u221e\n\n\n\u221e\n\n\n\n[\n\u03b4\n(\n\u03c9\n\u2212\na\n\u2212\n2\n\u03c0\nk\n)\n+\n\u03b4\n(\n\u03c9\n+\na\n+\n2\n\u03c0\nk\n)\n]\n\n\n\n{\\displaystyle X_{2\\pi }(\\omega )=\\pi \\sum _{k=-\\infty }^{\\infty }\\left[\\delta (\\omega -a-2\\pi k)+\\delta (\\omega +a+2\\pi k)\\right]}\n\n\nThis table shows some mathematical operations in the time domain and the corresponding effects in the frequency domain.", 
    "name": "Discrete Time Fourier Transform"
}
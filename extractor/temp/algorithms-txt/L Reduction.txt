ABOUT
In computer science, particularly the study of approximation algorithms, an L-reduction ("linear reduction") is a transformation of optimization problems which linearly preserves approximability features; it is one type of approximation-preserving reduction. L-reductions in studies of approximability of optimization problems play a similar role to that of polynomial reductions in the studies of computational complexity of decision problems.
FULL TEXT
In computer science, particularly the study of approximation algorithms, an L-reduction ("linear reduction") is a transformation of optimization problems which linearly preserves approximability features; it is one type of approximation-preserving reduction. L-reductions in studies of approximability of optimization problems play a similar role to that of polynomial reductions in the studies of computational complexity of decision problems.
The term L reduction is sometimes used to refer to log-space reductions, by analogy with the complexity class L, but this is a different concept.


Let A and B be optimization problems and cA and cB their respective cost functions. A pair of functions f and g is an L-reduction if all of the following conditions are met:
An L-reduction from problem A to problem B implies an AP-reduction when A and B are minimization problems and a PTAS reduction when A and B are maximization problems. In both cases, when B has a PTAS and there is a L-reduction from A to B, then A also has a PTAS.[1][2] This enables the use of L-reduction as a replacement for showing the existence of a PTAS-reduction; Crescenzi has suggested that the more natural formulation of L-reduction is actually more useful in many cases due to ease of usage.[3]
Let the approximation ratio of B be 



1
+
δ


{\displaystyle 1+\delta }

. Begin with the approximation ratio of A, 







c

A


(
y
)




O
P
T


A


(
x
)





{\displaystyle {\frac {c_{A}(y)}{\mathrm {OPT} _{A}(x)}}}

. We can remove absolute values around the third condition of the L-reduction definition since we know A and B are minimization problems. Substitute that condition to obtain
Simplifying, and substituting the first condition, we have
But the term in parentheses on the right-hand side actually equals 



δ


{\displaystyle \delta }

. Thus, the approximation ratio of A is 



1
+
α
β
δ


{\displaystyle 1+\alpha \beta \delta }

.
This meets the conditions for AP-reduction.
Let the approximation ratio of B be 





1

1
−

δ
′






{\displaystyle {\frac {1}{1-\delta '}}}

. Begin with the approximation ratio of A, 







c

A


(
y
)




O
P
T


A


(
x
)





{\displaystyle {\frac {c_{A}(y)}{\mathrm {OPT} _{A}(x)}}}

. We can remove absolute values around the third condition of the L-reduction definition since we know A and B are maximization problems. Substitute that condition to obtain
Simplifying, and substituting the first condition, we have
But the term in parentheses on the right-hand side actually equals 




δ
′



{\displaystyle \delta '}

. Thus, the approximation ratio of A is 





1

1
−
α
β

δ
′






{\displaystyle {\frac {1}{1-\alpha \beta \delta '}}}

.
If 





1

1
−
α
β

δ
′




=
1
+
ϵ


{\displaystyle {\frac {1}{1-\alpha \beta \delta '}}=1+\epsilon }

, then 





1

1
−

δ
′




=
1
+


ϵ

α
β
(
1
+
ϵ
)
−
ϵ





{\displaystyle {\frac {1}{1-\delta '}}=1+{\frac {\epsilon }{\alpha \beta (1+\epsilon )-\epsilon }}}

, which meets the requirements for PTAS reduction but not AP-reduction.
L-reductions also imply P-reduction.[3] One may deduce that L-reductions imply PTAS reductions from this fact and the fact that P-reductions imply PTAS reductions.
L-reductions preserve membership in APX for the minimizing case only, as a result of implying AP-reductions.
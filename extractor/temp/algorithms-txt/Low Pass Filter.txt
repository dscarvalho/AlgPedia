ABOUT
A low-pass filter is a filter that passes signals with a frequency lower than a certain cutoff frequency and attenuates signals with frequencies higher than the cutoff frequency. The exact frequency response of the filter depends on the filter design. The filter is sometimes called a high-cut filter, or treble cut filter in audio applications. A low-pass filter is the complement of a high-pass filter.
FULL TEXT
A low-pass filter is a filter that passes signals with a frequency lower than a certain cutoff frequency and attenuates signals with frequencies higher than the cutoff frequency. The exact frequency response of the filter depends on the filter design. The filter is sometimes called a high-cut filter, or treble cut filter in audio applications. A low-pass filter is the complement of a high-pass filter.
Low-pass filters exist in many different forms, including electronic circuits such as a hiss filter used in audio, anti-aliasing filters for conditioning signals prior to analog-to-digital conversion, digital filters for smoothing sets of data, acoustic barriers, blurring of images, and so on. The moving average operation used in fields such as finance is a particular kind of low-pass filter, and can be analyzed with the same signal processing techniques as are used for other low-pass filters. Low-pass filters provide a smoother form of a signal, removing the short-term fluctuations, and leaving the longer-term trend.
Filter designers will often use the low-pass form as a prototype filter. That is, a filter with unity bandwidth and impedance. The desired filter is obtained from the prototype by scaling for the desired bandwidth and impedance and transforming into the desired bandform (that is low-pass, high-pass, band-pass or band-stop).


Examples of low-pass filters occur in acoustics, optics and electronics.
A stiff physical barrier tends to reflect higher sound frequencies, and so acts as a low-pass filter for transmitting sound. When music is playing in another room, the low notes are easily heard, while the high notes are attenuated.
An optical filter with the same function can correctly be called a low-pass filter, but conventionally is called a longpass filter (low frequency is long wavelength), to avoid confusion.
In an electronic low-pass RC filter for voltage signals, high frequencies in the input signal are attenuated, but the filter has little attenuation below the cutoff frequency determined by its RC time constant. For current signals, a similar circuit, using a resistor and capacitor in parallel, works in a similar manner. (See current divider discussed in more detail below.)
Electronic low-pass filters are used on inputs to subwoofers and other types of loudspeakers, to block high pitches that they can't efficiently reproduce. Radio transmitters use low-pass filters to block harmonic emissions that might interfere with other communications. The tone knob on many electric guitars is a low-pass filter used to reduce the amount of treble in the sound. An integrator is another time constant low-pass filter.[1]
Telephone lines fitted with DSL splitters use low-pass and high-pass filters to separate DSL and POTS signals sharing the same pair of wires.[2][3]
Low-pass filters also play a significant role in the sculpting of sound created by analogue and virtual analogue synthesisers. See subtractive synthesis.
An ideal low-pass filter completely eliminates all frequencies above the cutoff frequency while passing those below unchanged; its frequency response is a rectangular function and is a brick-wall filter. The transition region present in practical filters does not exist in an ideal filter. An ideal low-pass filter can be realized mathematically (theoretically) by multiplying a signal by the rectangular function in the frequency domain or, equivalently, convolution with its impulse response, a sinc function, in the time domain.
However, the ideal filter is impossible to realize without also having signals of infinite extent in time, and so generally needs to be approximated for real ongoing signals, because the sinc function's support region extends to all past and future times. The filter would therefore need to have infinite delay, or knowledge of the infinite future and past, in order to perform the convolution. It is effectively realizable for pre-recorded digital signals by assuming extensions of zero into the past and future, or more typically by making the signal repetitive and using Fourier analysis.
Real filters for real-time applications approximate the ideal filter by truncating and windowing the infinite impulse response to make a finite impulse response; applying that filter requires delaying the signal for a moderate period of time, allowing the computation to "see" a little bit into the future. This delay is manifested as phase shift. Greater accuracy in approximation requires a longer delay.
An ideal low-pass filter results in ringing artifacts via the Gibbs phenomenon. These can be reduced or worsened by choice of windowing function, and the design and choice of real filters involves understanding and minimizing these artifacts. For example, "simple truncation [of sinc] causes severe ringing artifacts," in signal reconstruction, and to reduce these artifacts one uses window functions "which drop off more smoothly at the edges."[4]
The Whittaker–Shannon interpolation formula describes how to use a perfect low-pass filter to reconstruct a continuous signal from a sampled digital signal. Real digital-to-analog converters use real filter approximations.
There are many different types of filter circuits, with different responses to changing frequency. The frequency response of a filter is generally represented using a Bode plot, and the filter is characterized by its cutoff frequency and rate of frequency rolloff. In all cases, at the cutoff frequency, the filter attenuates the input power by half or 3 dB. So the order of the filter determines the amount of additional attenuation for frequencies higher than the cutoff frequency.
On any Butterworth filter, if one extends the horizontal line to the right and the diagonal line to the upper-left (the asymptotes of the function), they intersect at exactly the cutoff frequency. The frequency response at the cutoff frequency in a first-order filter is 3 dB below the horizontal line. The various types of filters (Butterworth filter, Chebyshev filter, Bessel filter, etc.) all have different-looking knee curves. Many second-order filters have "peaking" or resonance that puts their frequency response at the cutoff frequency above the horizontal line. Furthermore, the actual frequency where this peaking occurs can be predicted without calculus, as shown by Cartwright[5] et al. For third-order filters, the peaking and its frequency of occurrence can too be predicted without calculus as recently shown by Cartwright[6] et al. See electronic filter for other types.
The meanings of 'low' and 'high'—that is, the cutoff frequency—depend on the characteristics of the filter. The term "low-pass filter" merely refers to the shape of the filter's response; a high-pass filter could be built that cuts off at a lower frequency than any low-pass filter—it is their responses that set them apart. Electronic circuits can be devised for any desired frequency range, right up through microwave frequencies (above 1 GHz) and higher.
Continuous-time filters can also be described in terms of the Laplace transform of their impulse response, in a way that lets all characteristics of the filter be easily analyzed by considering the pattern of poles and zeros of the Laplace transform in the complex plane. (In discrete time, one can similarly consider the Z-transform of the impulse response.)
For example, a first-order low-pass filter can be described in Laplace notation as:
where s is the Laplace transform variable, τ is the filter time constant, and K is the gain of the filter in the passband .
One simple low-pass filter circuit consists of a resistor in series with a load, and a capacitor in parallel with the load. The capacitor exhibits reactance, and blocks low-frequency signals, forcing them through the load instead. At higher frequencies the reactance drops, and the capacitor effectively functions as a short circuit. The combination of resistance and capacitance gives the time constant of the filter 




τ

=

R
C



{\displaystyle \scriptstyle \tau \;=\;RC}

 (represented by the Greek letter tau). The break frequency, also called the turnover frequency or cutoff frequency (in hertz), is determined by the time constant:
or equivalently (in radians per second):
This circuit may be understood by considering the time the capacitor needs to charge or discharge through the resistor:
Another way to understand this circuit is through the concept of reactance at a particular frequency:
The capacitor is not an "on/off" object (like the block or pass fluidic explanation above). The capacitor variably acts between these two extremes. It is the Bode plot and frequency response that show this variability.
A resistor–inductor circuit or RL filter is an electric circuit composed of resistors and inductors driven by a voltage or current source. A first order RL circuit is composed of one resistor and one inductor and is the simplest type of RL circuit.
A first order RL circuit is one of the simplest analogue infinite impulse response electronic filters. It consists of a resistor and an inductor, either in series driven by a voltage source or in parallel driven by a current source.
An RLC circuit (the letters R, L and C can be in other orders) is an electrical circuit consisting of a resistor, an inductor, and a capacitor, connected in series or in parallel. The RLC part of the name is due to those letters being the usual electrical symbols for resistance, inductance and capacitance respectively. The circuit forms a harmonic oscillator for current and will resonate in a similar way as an LC circuit will. The main difference that the presence of the resistor makes is that any oscillation induced in the circuit will die away over time if it is not kept going by a source. This effect of the resistor is called damping. The presence of the resistance also reduces the peak resonant frequency somewhat. Some resistance is unavoidable in real circuits, even if a resistor is not specifically included as a component. An ideal, pure LC circuit is an abstraction for the purpose of theory.
There are many applications for this circuit. They are used in many different types of oscillator circuits. Another important application is for tuning, such as in radio receivers or television sets, where they are used to select a narrow range of frequencies from the ambient radio waves. In this role the circuit is often referred to as a tuned circuit. An RLC circuit can be used as a band-pass filter, band-stop filter, low-pass filter or high-pass filter. The RLC filter is described as a second-order circuit, meaning that any voltage or current in the circuit can be described by a second-order differential equation in circuit analysis.
Higher order passive filters, can also be constructed (see diagram for a third order example).
Another type of electrical circuit is an active low-pass filter.
In the operational amplifier circuit shown in the figure, the cutoff frequency (in hertz) is defined as:
or equivalently (in radians per second):
The gain in the passband is −R2/R1, and the stopband drops off at −6 dB per octave (that is −20 dB per decade) as it is a first-order filter.
Many digital filters are designed to give low-pass characteristics. Both infinite impulse response and finite impulse response low pass filters as well as filters using Fourier transforms are widely used.
The effect of an infinite impulse response low-pass filter can be simulated on a computer by analyzing an RC filter's behavior in the time domain, and then discretizing the model.
From the circuit diagram to the right, according to Kirchhoff's Laws and the definition of capacitance:





v

in


(
t
)
−

v

out


(
t
)
=
R

i
(
t
)


{\displaystyle v_{\text{in}}(t)-v_{\text{out}}(t)=R\;i(t)}



 
 
 
 
(V)





Q

c


(
t
)
=
C


v

out


(
t
)


{\displaystyle Q_{c}(t)=C\,v_{\text{out}}(t)}



 
 
 
 
(Q)




i
(
t
)
=



d
⁡

Q

c




d
⁡
t





{\displaystyle i(t)={\frac {\operatorname {d} Q_{c}}{\operatorname {d} t}}}



 
 
 
 
(I)
where 




Q

c


(
t
)


{\displaystyle Q_{c}(t)}

 is the charge stored in the capacitor at time 




t



{\displaystyle \scriptstyle t}

. Substituting equation Q into equation I gives 




i
(
t
)

=

C



d
⁡

v

out




d
⁡
t






{\displaystyle \scriptstyle i(t)\;=\;C{\frac {\operatorname {d} v_{\text{out}}}{\operatorname {d} t}}}

, which can be substituted into equation V so that:
This equation can be discretized. For simplicity, assume that samples of the input and output are taken at evenly spaced points in time separated by 





Δ

T





{\displaystyle \scriptstyle \Delta _{T}}

 time. Let the samples of 





v

in





{\displaystyle \scriptstyle v_{\text{in}}}

 be represented by the sequence 




(

x

1


,


x

2


,

…
,


x

n


)



{\displaystyle \scriptstyle (x_{1},\,x_{2},\,\ldots ,\,x_{n})}

, and let 





v

out





{\displaystyle \scriptstyle v_{\text{out}}}

 be represented by the sequence 




(

y

1


,


y

2


,

…
,


y

n


)



{\displaystyle \scriptstyle (y_{1},\,y_{2},\,\ldots ,\,y_{n})}

, which correspond to the same points in time. Making these substitutions:
And rearranging terms gives the recurrence relation
That is, this discrete-time implementation of a simple RC low-pass filter is the exponentially weighted moving average
By definition, the smoothing factor 




0

≤

α

≤

1



{\displaystyle \scriptstyle 0\;\leq \;\alpha \;\leq \;1}

. The expression for 




α



{\displaystyle \scriptstyle \alpha }

 yields the equivalent time constant 




R
C



{\displaystyle \scriptstyle RC}

 in terms of the sampling period 





Δ

T





{\displaystyle \scriptstyle \Delta _{T}}

 and smoothing factor 




α



{\displaystyle \scriptstyle \alpha }

:
Recalling that
then 



α


{\displaystyle \alpha }

 and 




f

c




{\displaystyle f_{c}}

 are related by:
and
If 




α

=

0.5



{\displaystyle \scriptstyle \alpha \;=\;0.5}

, then the 




R
C



{\displaystyle \scriptstyle RC}

 time constant is equal to the sampling period. If 




α

≪

0.5



{\displaystyle \scriptstyle \alpha \;\ll \;0.5}

, then 




R
C



{\displaystyle \scriptstyle RC}

 is significantly larger than the sampling interval, and 





Δ

T



≈

α
R
C



{\displaystyle \scriptstyle \Delta _{T}\;\approx \;\alpha RC}

.
The filter recurrence relation provides a way to determine the output samples in terms of the input samples and the preceding output. The following pseudocode algorithm simulates the effect of a low-pass filter on a series of digital samples:
The loop that calculates each of the n outputs can be refactored into the equivalent:
That is, the change from one filter output to the next is proportional to the difference between the previous output and the next input. This exponential smoothing property matches the exponential decay seen in the continuous-time system. As expected, as the time constant 




R
C



{\displaystyle \scriptstyle RC}

 increases, the discrete-time smoothing parameter 




α



{\displaystyle \scriptstyle \alpha }

 decreases, and the output samples 




(

y

1


,


y

2


,

…
,


y

n


)



{\displaystyle \scriptstyle (y_{1},\,y_{2},\,\ldots ,\,y_{n})}

 respond more slowly to a change in the input samples 




(

x

1


,


x

2


,

…
,


x

n


)



{\displaystyle \scriptstyle (x_{1},\,x_{2},\,\ldots ,\,x_{n})}

; the system has more inertia. This filter is an infinite-impulse-response (IIR) single-pole low-pass filter.
Finite-impulse-response filters can be built that approximate to the sinc function time-domain response of an ideal sharp-cutoff low-pass filter. In practice, the time-domain response must be time truncated and is often of a simplified shape; in the simplest case, a running average can be used, giving a square time response.[7]
For minimum distortion the finite impulse response filter has an unbounded number of coefficients.
For non-realtime filtering, to achieve a low pass filter, the entire signal is usually taken as a looped signal, the Fourier transform is taken, filtered in the frequency domain, followed by an inverse Fourier transform. Only O(n log(n)) operations are required compared to O(n2) for the time domain filtering algorithm.
This can also sometimes be done in real-time, where the signal is delayed long enough to perform the Fourier transformation on shorter, overlapping blocks.
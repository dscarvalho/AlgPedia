ABOUT
In the field of numerical analysis, meshfree methods are those that do not require connection between nodes of the simulation domain, i.e. a mesh, but are rather based on interaction of each node with all its neighbours. As a consequence, original extensive properties such as mass or kinetic energy are no more assigned to mesh elements but rather to the single nodes. Meshfree methods enable the simulation of some otherwise difficult types of problems, at the cost of extra computing time and programming effort.
FULL TEXT
In the field of numerical analysis, meshfree methods are those that do not require connection between nodes of the simulation domain, i.e. a mesh, but are rather based on interaction of each node with all its neighbours. As a consequence, original extensive properties such as mass or kinetic energy are no more assigned to mesh elements but rather to the single nodes. Meshfree methods enable the simulation of some otherwise difficult types of problems, at the cost of extra computing time and programming effort.


Numerical methods such as the finite difference method, finite-volume method, and finite element method were originally defined on meshes of data points. In such a mesh, each point has a fixed number of predefined neighbors, and this connectivity between neighbors can be used to define mathematical operators like the derivative. These operators are then used to construct the equations to simulate—such as the Euler equations or the Navier–Stokes equations.
But in simulations where the material being simulated can move around (as in computational fluid dynamics) or where large deformations of the material can occur (as in simulations of plastic materials), the connectivity of the mesh can be difficult to maintain without introducing error into the simulation. If the mesh becomes tangled or degenerate during simulation, the operators defined on it may no longer give correct values. The mesh may be recreated during simulation (a process called remeshing), but this can also introduce error, since all the existing data points must be mapped onto a new and different set of data points. Meshfree methods are intended to remedy these problems. Meshfree methods are also useful for:
In a traditional finite difference simulation, the domain of a one-dimensional simulation would be some function 



u
(
x
,
t
)


{\displaystyle u(x,t)}

, represented as a mesh of data values 




u

i


n




{\displaystyle u_{i}^{n}}

 at points 




x

i




{\displaystyle x_{i}}

, where
We can define the derivatives that occur in the equation being simulated using some finite difference formulae on this domain, for example
and
Then we can use these definitions of 



u
(
x
,
t
)


{\displaystyle u(x,t)}

 and its spatial and temporal derivatives to write the equation being simulated in finite difference form, then simulate the equation with one of many finite difference methods.
In this simple example, the steps (here the spatial step 



h


{\displaystyle h}

 and timestep 



k


{\displaystyle k}

) are constant along all the mesh, and the left and right mesh neighbors of the data value at 




x

i




{\displaystyle x_{i}}

 are the values at 




x

i
−
1




{\displaystyle x_{i-1}}

 and 




x

i
+
1




{\displaystyle x_{i+1}}

, respectively. Generally in finite differences one can allow very simply for steps variable along the mesh, but all the original nodes should be preserved and they can move independently only by deforming the original elements. If even only two of all the nodes change their order, or even only one node is added to or removed from the simulation, that creates a defect in the original mesh and the simple finite difference approximation can no longer hold.
Smoothed-particle hydrodynamics (SPH), one of the oldest meshfree methods, solves this problem by treating data points as physical particles with mass and density that can move around over time, and carry some value 




u

i




{\displaystyle u_{i}}

 with them. SPH then defines the value of 



u
(
x
,
t
)


{\displaystyle u(x,t)}

 between the particles by
where 




m

i




{\displaystyle m_{i}}

 is the mass of particle 



i


{\displaystyle i}

, 




ρ

i




{\displaystyle \rho _{i}}

 is the density of particle 



i


{\displaystyle i}

, and 



W


{\displaystyle W}

 is a kernel function that operates on nearby data points and is chosen for smoothness and other useful qualities. By linearity, we can write the spatial derivative as
Then we can use these definitions of 



u
(
x
,
t
)


{\displaystyle u(x,t)}

 and its spatial derivatives to write the equation being simulated as an ordinary differential equation, and simulate the equation with one of many numerical methods. In physical terms, this means calculating the forces between the particles, then integrating these forces over time to determine their motion.
The advantage of SPH in this situation is that the formulae for 



u
(
x
,
t
)


{\displaystyle u(x,t)}

 and its derivatives do not depend on any adjacency information about the particles; they can use the particles in any order, so it doesn't matter if the particles move around or even exchange places.
One disadvantage of SPH is that it requires extra programming to determine the nearest neighbors of a particle. Since the kernel function 



W


{\displaystyle W}

 only returns nonzero results for nearby particles within twice the "smoothing length" (because we typically choose kernel functions with compact support), it would be a waste of effort to calculate the summations above over every particle in a large simulation. So typically SPH simulators require some extra code to speed up this nearest neighbor calculation.
One of the earliest meshfree methods is smoothed particle hydrodynamics, presented in 1977.[1] Libersky at all [2] were the first to apply SPH in solid mechanics. The main drawbacks of SPH are inaccurate results near boundaries and tension instability that was first investigated by Swegle.[3] Over the ensuing decades, many more methods have been developed, some of which are listed below.
The following numerical methods are generally considered to fall within the general class of "meshfree" methods. Acronyms are provided in parentheses.
Related methods:
One recent advance in meshfree methods aims at the development of computational tools for automation in modeling and simulations. This is enabled by the so-called weakened weak (W2) formulation based on the G space theory.[13] The W2 formulation offers possibilities to formulate various (uniformly) "soft" models that work well with triangular meshes. Because a triangular mesh can be generated automatically, it becomes much easier in re-meshing and hence enables automation in modeling and simulation. In addition, W2 models can be made soft enough (in uniform fashion) to produce upper bound solutions (for force-driving problems). Together with stiff models (such as the fully compatible FEM models), one can conveniently bound the solution from both sides. This allows easy error estimation for generally complicated problems, as long as a triangular mesh can be generated. Typical W2 models are the Smoothed Point Interpolation Methods (or S-PIM).[7] The S-PIM can be node-based (known as NS-PIM or LC-PIM),[14] edge-based (ES-PIM),[15] and cell-based (CS-PIM).[16] The NS-PIM was developed using the so-called SCNI technique.[17] It was then discovered that NS-PIM is capable of producing upper bound solution and volumetric locking free.[18] The ES-PIM is found superior in accuracy, and CS-PIM behaves in between the NS-PIM and ES-PIM. Moreover, W2 formulations allow the use of polynomial and radial basis functions in the creation of shape functions (it accommodates the discontinuous displacement functions, as long as it is in G1 space), which opens further rooms for future developments.
The W2 formulation has also led to the development of combination of meshfree techniques with the well-developed FEM techniques, and one can now use triangular mesh with excellent accuracy and desired softness. A typical such a formulation is the so-called Smoothed Finite Element Method (or S-FEM) [19] The S-FEM is the linear version of S-PIM, but with most of the properties of the S-PIM and much simpler.
It is a general perception that meshfree methods are much more expensive than the FEM counterparts. The recent study has found however, the S-PIM and S-FEM can be much faster than the FEM counterparts.[7][19]
The S-PIM and S-FEM works well for solid mechanics problems. For CFD problems, the formulation can be simpler, via strong formulation. A Gradient Smoothing Methods (GSM) has also been developed recently for CFD problems, implementing the gradient smoothing idea in strong form.[20][21] The GSM is similar to [FVM], but uses gradient smoothing operations exclusively in nested fashions, and is a general numerical method for PDEs.
Nodal integration has been proposed as a technique to use finite elements to emulate a meshfree behaviour.[22] However, the obstacle that must be overcome in using nodally integrated elements is that the quantities at nodal points are not continuous, and the nodes are shared among multiple elements.
ABOUT
FastICA is an efficient and popular algorithm for independent component analysis invented by Aapo Hyvärinen at Helsinki University of Technology.[1][2] Like most ICA algorithms, FastICA seeks an orthogonal rotation of prewhitened data, through a fixed-point iteration scheme, that maximizes a measure of non-Gaussianity of the rotated components. Non-gaussianity serves as a proxy for statistical independence, which is a very strong condition and requires infinite data to verify. FastICA can also be alternatively derived as an approximative Newton iteration.
FULL TEXT
FastICA is an efficient and popular algorithm for independent component analysis invented by Aapo Hyvärinen at Helsinki University of Technology.[1][2] Like most ICA algorithms, FastICA seeks an orthogonal rotation of prewhitened data, through a fixed-point iteration scheme, that maximizes a measure of non-Gaussianity of the rotated components. Non-gaussianity serves as a proxy for statistical independence, which is a very strong condition and requires infinite data to verify. FastICA can also be alternatively derived as an approximative Newton iteration.


Let the 




X

:=
(

x

i
j


)
∈


R


N
×
M




{\displaystyle \mathbf {X} :=(x_{ij})\in \mathbb {R} ^{N\times M}}

 denote the input data matrix, 



M


{\displaystyle M}

 the number of columns corresponding with the number of samples of mixed signals and 



N


{\displaystyle N}

 the number of rows corresponding with the number of independent source signals. The input data matrix 




X



{\displaystyle \mathbf {X} }

 must be prewhitened, or centered and whitened, before applying the FastICA algorithm to it.
The iterative algorithm finds the direction for the weight vector 




w

∈


R


N




{\displaystyle \mathbf {w} \in \mathbb {R} ^{N}}

 that maximizes a measure of non-Gaussianity of the projection 





w


T



X



{\displaystyle \mathbf {w} ^{T}\mathbf {X} }

, with 




X

∈


R


N
×
M




{\displaystyle \mathbf {X} \in \mathbb {R} ^{N\times M}}

 denoting a prewhitened data matrix as described above. Note that 




w



{\displaystyle \mathbf {w} }

 is a column vector. To measure non-Gaussianity, FastICA relies on a nonquadratic nonlinearity function 



f
(
u
)


{\displaystyle f(u)}

, its first derivative 



g
(
u
)


{\displaystyle g(u)}

, and its second derivative 




g

′


(
u
)


{\displaystyle g^{\prime }(u)}

. Hyvärinen states that the functions
are useful for general purposes, while
may be highly robust.[1] The steps for extracting the weight vector 




w



{\displaystyle \mathbf {w} }

 for single component in FastICA are the following:
The single unit iterative algorithm estimates only one weight vector which extracts a single component. Estimating additional components that are mutually "independent" requires repeating the algorithm to obtain linearly independent projection vectors - note that the notion of independence here refers to maximizing non-Gaussianity in the estimated components. Hyvärinen provides several ways of extracting multiple components with the simplest being the following. Here, 




1



{\displaystyle \mathbf {1} }

 is a column vector of 1's of dimension 



M


{\displaystyle M}

.
Algorithm FastICA

ABOUT
International Components for Unicode (ICU) is an open source project of mature C/C++ and Java libraries for Unicode support, software internationalization, and software globalization. ICU is widely portable to many operating systems and environments. It gives applications the same results on all platforms and between C, C++, and Java software. The ICU project is sponsored, supported, and used by IBM and many other companies.[1]
FULL TEXT
International Components for Unicode (ICU) is an open source project of mature C/C++ and Java libraries for Unicode support, software internationalization, and software globalization. ICU is widely portable to many operating systems and environments. It gives applications the same results on all platforms and between C, C++, and Java software. The ICU project is sponsored, supported, and used by IBM and many other companies.[1]
ICU provides the following services: Unicode text handling, full character properties, and character set conversions; Unicode regular expressions; full Unicode sets; character, word, and line boundaries; Language sensitive collation and searching; normalization, upper and lowercase conversion, and script transliterations; comprehensive locale data and resource bundle architecture via the Common Locale Data Repository (CLDR); complex text layout for Arabic, Hebrew, Indic, and Thai; multi-calendar and time zones; and rule-based formatting and parsing of dates, times, numbers, currencies, and messages.
ICU provides more extensive internationalization facilities than the standard libraries for C and C++.


ICU is descended from C++ frameworks produced by Taligent in the mid 1990s. After Taligent became part of IBM in early 1996, Sun Microsystems decided that the new Java language "was missing international support. Taligent had great international technology, talented engineers, and a location about 100 meters from Sun's JavaSoft division in Cupertino, California. IBM arranged for Taligent's Text and International group to contribute international classes to Sun's Java Development Kit."[2] Some of the code for ICU's text processing, date formatting, and other features was rewritten in Java and became the JDK 1.1 internationalization APIs. A large portion of this code still exists in the java.text and java.util packages. Further internationalization features were added with each later release of Java.
IBM programmers rewrote the Java internationalization classes in C++ and ported some classes to C functions. The C++/C version of ICU is known as ICU4C. The ICU project also provides ICU4J ("ICU for Java"), which adds features not present in the standard Java libraries. ICU4C and ICU4J are very similar, though not identical; for example, ICU4C includes a Regular Expression API, while ICU4J does not. Both frameworks have been enhanced over time to support new facilities and new features of Unicode and Common Locale Data Repository (CLDR).
ICU was released as an open source project in 1999 under the name IBM Classes for Unicode. It was later renamed to International Components For Unicode.[3] In May, 2016, the ICU project joined the Unicode consortium as technical committee ICU-TC, and the library sources are distributed under the Unicode license.[4]
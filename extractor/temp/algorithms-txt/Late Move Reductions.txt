ABOUT
Late Move Reductions (LMR) is a non-game specific enhancement to the alpha-beta algorithm and its variants which attempts to examine a game search tree more efficiently. It uses the assumption that good game-specific move ordering causes a program to search the most likely moves early. If a cut-off is going to happen in a search, the first few moves are the ones most likely to cause them. In games like chess, most programs search winning captures and "killers" first. LMR will reduce the search depth for moves searched later at a given node. This allows the program to search deeper along the critical lines, and play better.
FULL TEXT
Late Move Reductions (LMR) is a non-game specific enhancement to the alpha-beta algorithm and its variants which attempts to examine a game search tree more efficiently. It uses the assumption that good game-specific move ordering causes a program to search the most likely moves early. If a cut-off is going to happen in a search, the first few moves are the ones most likely to cause them. In games like chess, most programs search winning captures and "killers" first. LMR will reduce the search depth for moves searched later at a given node. This allows the program to search deeper along the critical lines, and play better.
Most chess programs will search the first several moves at a node to full depth. Often, they do not reduce moves considered to be very tactical, such as captures or promotions. If the score of the move at a reduced depth is smaller than the alpha, the move is assumed to be bad. However, if the score is larger than alpha, the reduced tells us nothing so we will have to do a full search (fail-low).
This search reduction can lead to a different search space than the pure alpha-beta method which can give different results. Care must be taken to select the reduction criteria or the search will miss some deep threats.
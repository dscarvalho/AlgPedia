ABOUT

FULL TEXT


In signal processing, nonlinear multidimensional signal processing (NMSP) covers all signal processing using nonlinear multidimensional signals and systems. Nonlinear multidimensional signal processing is a subset of signal processing (multidimensional signal processing). Nonlinear multi-dimensional systems can be used in a broad range such as imaging,[1] teletraffic, communications, hydrology, geology, and economics. Nonlinear systems cannot be treated as linear systems, using Fourier transformation and wavelet analysis. Nonlinear systems will have chaotic behavior, limit cycle, steady state, bifurcation, multi-stability and so on. Nonlinear systems do not have a canonical representation, like impulse response for linear systems. But there are some efforts to characterize nonlinear systems, such as Volterra and Wiener series using polynomial integrals as the use of those methods naturally extend the signal into multi-dimensions.[2][3] Another example is the Empirical mode decomposition method using Hilbert transform instead of Fourier Transform for nonlinear multi-dimensional systems.[4][5] This method is an empirical method and can be directly applied to data sets. Multi-dimensional nonlinear filters (MDNF) are also an important part of NMSP, MDNF are mainly used to filter noise in real data. There are nonlinear-type hybrid filters used in color image processing,[1] nonlinear edge-preserving filters use in magnetic resonance image restoration. Those filters use both temporal and spatial information and combine the maximum likelihood estimate with the spatial smoothing algorithm.[6]
A linear frequency response function (FRF) can be extended to a nonlinear system by evaluation of higher order transfer functions and impulse response functions by Volterra series.[2] Suppose we have a time series 



y
(
t
)


{\displaystyle y(t)}

, which is decomposed 



y
(
t
)


{\displaystyle y(t)}

 into components of various order[2]




y
(
t
)
=

y

0


+

y

1


(
t
)
+

y

2


(
t
)
+
⋯
+

y

n


(
t
)
.


{\displaystyle y(t)=y_{0}+y_{1}(t)+y_{2}(t)+\cdots +y_{n}(t).}


Each component is defined as





y

n


(
t
)
=

∫

−
∞


+
∞


⋯

∫

−
∞


+
∞



h

n


(

τ

1


,

τ

2


,
⋯
,

τ

n


)


∏

i
=
1


n


x
(
t
−

τ

i


)
d

τ

i





{\displaystyle y_{n}(t)=\int _{-\infty }^{+\infty }\cdots \int _{-\infty }^{+\infty }h_{n}(\tau _{1},\tau _{2},\cdots ,\tau _{n})\displaystyle \prod _{i=1}^{n}x(t-\tau _{i})d\tau _{i}}

 ,
for 



n
=
1


{\displaystyle n=1}

, 




y

1


(
t
)


{\displaystyle y_{1}(t)}

 is the linear convolution. 




h

n


(

τ

1


,

τ

2


,
⋯
,

τ

n


)


{\displaystyle h_{n}(\tau _{1},\tau _{2},\cdots ,\tau _{n})}

 is the generalized impulse response of order 



n


{\displaystyle n}

.
The 1D Fourier transform of 




y

n


(
t
)


{\displaystyle y_{n}(t)}

 is





Y

(
n
)


(
ω
)
=

∫

−
∞


+
∞


[

∫

−
∞


+
∞


⋯

∫

−
∞


+
∞



h

n


(

τ

1


,
⋯
,

τ

n


)

∏

i
=
1


n


x
(
t
−

τ

i


)
d

τ

i


]
exp
⁡
(
−
j
ω
t
)
d
t
.


{\displaystyle Y_{(n)}(\omega )=\int _{-\infty }^{+\infty }[\int _{-\infty }^{+\infty }\cdots \int _{-\infty }^{+\infty }h_{n}(\tau _{1},\cdots ,\tau _{n})\prod _{i=1}^{n}x(t-\tau _{i})d\tau _{i}]\exp(-j\omega t)dt.}


Schetzen[7] suggested the definition of 



n


{\displaystyle n}

th output component as 



n


{\displaystyle n}

 time variables 




y

n


(

t

1


,
⋯
,

t

n


)


{\displaystyle y_{n}(t_{1},\cdots ,t_{n})}

 so as to permit the application of the 



n


{\displaystyle n}

-dimensional Fourier transform,





Y

n


(

ω

1


,
⋯
,

ω

n


)
=

∫

−
∞


+
∞


⋯

∫

−
∞


+
∞


[

∫

−
∞


+
∞


⋯

∫

−
∞


+
∞



h

n


(

τ

1


,
⋯
,

τ

n


)
x
(
t
−

τ

1


)
⋯
x
(
t
−

τ

n


)
d

τ

1


⋯
d

τ

n


]
×
exp
⁡
(
−
j

ω

1



t

1


⋯
−
j

ω

n



t

n


)
d

t

1


⋯
d

t

n


.


{\displaystyle Y_{n}(\omega _{1},\cdots ,\omega _{n})=\int _{-\infty }^{+\infty }\cdots \int _{-\infty }^{+\infty }[\int _{-\infty }^{+\infty }\cdots \int _{-\infty }^{+\infty }h_{n}(\tau _{1},\cdots ,\tau _{n})x(t-\tau _{1})\cdots x(t-\tau _{n})d\tau _{1}\cdots d\tau _{n}]\times \exp(-j\omega _{1}t_{1}\cdots -j\omega _{n}t_{n})dt_{1}\cdots dt_{n}.}


Taking the inverse Fourier transform of 




Y

(
n
)


(
ω
)


{\displaystyle Y_{(n)}(\omega )}

 and 




Y

n


(

ω

1


,
⋯
,

ω

n


)


{\displaystyle Y_{n}(\omega _{1},\cdots ,\omega _{n})}

 and equalizing 




t

1


=

t

2


=
⋯
=

t

n


=
t


{\displaystyle t_{1}=t_{2}=\cdots =t_{n}=t}

, we obtain the following equation,





Y

(
n
)


(
ω
)
=

∫

−
∞


+
∞


⋯

∫

−
∞


+
∞



Y

n


(
ω
−

ω

2


−
⋯
−

ω

n


,

ω

2


,
⋯
,

ω

n


)
d

ω

2


d

ω

3


⋯
d

ω

n


.


{\displaystyle Y_{(n)}(\omega )=\int _{-\infty }^{+\infty }\cdots \int _{-\infty }^{+\infty }Y_{n}(\omega -\omega _{2}-\cdots -\omega _{n},\omega _{2},\cdots ,\omega _{n})d\omega _{2}d\omega _{3}\cdots d\omega _{n}.}

[2]
Applying the 



n


{\displaystyle n}

th dimensional Fourier Transform to 




h

n


(

τ

1


,

τ

2


,
⋯
,

τ

n


)


{\displaystyle h_{n}(\tau _{1},\tau _{2},\cdots ,\tau _{n})}

 obtain the transfer function





H

n


(

ω

1


,
⋯
,

ω

n


)
=

∫

−
∞


+
∞


⋯

∫

−
∞


+
∞



h

n


(

τ

1


,
⋯
,

τ

n


)
exp
⁡
(
−
j

ω

1



τ

1


−
⋯
−
j

ω

n



τ

n


)
d

τ

1


⋯
d

τ

n




{\displaystyle H_{n}(\omega _{1},\cdots ,\omega _{n})=\int _{-\infty }^{+\infty }\cdots \int _{-\infty }^{+\infty }h_{n}(\tau _{1},\cdots ,\tau _{n})\exp(-j\omega _{1}\tau _{1}-\cdots -j\omega _{n}\tau _{n})d\tau _{1}\cdots d\tau _{n}}


One example of nonlinear filters is the (generalized directional distance rational hybrid filter (GDDRHF)[1]) for multidimensional signal processing. This filter is a two-stage type hybrid filter: 1) the stage 




L

p




{\displaystyle L_{p}}

 norm criteria and angular distance criteria to produce three output vectors with respect to the shape models; 2) the stage performs vector rational operation on the above three output vectors to produce the final output vectors. The output vector 





y
_


(



x



i


)


{\displaystyle {\underline {y}}({\textbf {x}}_{i})}

 of the GDDRHF is the result of a vector rational function taking into account three input sub-function which form an input function set 



{



y
_



1


,



y
_



2


,



y
_



3


}


{\displaystyle \{{\underline {y}}_{1},{\underline {y}}_{2},{\underline {y}}_{3}\}}

,






y
_


(



x



i


)
=



y
_



2


(



x



i


)
+




∑

j
=
1


3



β

j





y
_



j


(



x



i


)


h
+
k
D
[



y
_



1


(



x



i


)
,



y
_



3


(



x



i


)
]



,


{\displaystyle {\underline {y}}({\textbf {x}}_{i})={\underline {y}}_{2}({\textbf {x}}_{i})+{\frac {\sum _{j=1}^{3}\beta _{j}{\underline {y}}_{j}({\textbf {x}}_{i})}{h+kD[{\underline {y}}_{1}({\textbf {x}}_{i}),{\underline {y}}_{3}({\textbf {x}}_{i})]}},}


where 



D
[
⋅
]


{\displaystyle D[\cdot ]}

 plays an important role as an edge sensing term, 



β
=
[

β

1


,

β

2


,

β

3


]


{\displaystyle \beta =[\beta _{1},\beta _{2},\beta _{3}]}

 characterizes the constant vector coefficient of the input sub-functions. 



h


{\displaystyle h}

 and 



k


{\displaystyle k}

 are some positive constants. The parameter 



k


{\displaystyle k}

 is used to control the amount of the nonlinear effect.[1]
This kind of multidimensional filter has been used for MRI imaging processing.[6] This filter uses MRI signal models to implement an approximate maximum likelihood or least squares estimate of each pixel gray level from the gray levels. It is also employs a trimmed mean spatial smoothing algorithm that uses a Euclidean distance discriminator to preserve partial volume and edge information; corresponds to using intra frame information .
A multi-dimensional ensemble empirical mode decomposition method was applied to multi-dimensional data including images and solid with variable density. The decomposition is based on the application of ensemble empirical mode decomposition (EEMD) to slices of data in each and every dimension involved. The final reconstruction of the corresponding intrinsic mode function is based on a comparable minimal scale combination principle.[8]
For a two-dimensional signal 



f
(
m
,
n
)


{\displaystyle f(m,n)}

 using EEMD, the signal is first decomposed the y-direction to obtain 




g

j


(
m
,
n
)


{\displaystyle g_{j}(m,n)}

, each row of 




g

j


(
m
,
n
)


{\displaystyle g_{j}(m,n)}

 is decomposed using EEMD.
Let 



f
(
x
,
y
)


{\displaystyle f(x,y)}

 be sampled as 



f
(
m
,
n
)
=

(





f

1
,
1





f

2
,
1




⋯



f

M
,
1







f

1
,
2





f

2
,
2




⋯



f

M
,
2






⋯


⋯


⋯


⋯





f

1
,
n





f

2
,
N




⋯



f

M
,
N






)

,


{\displaystyle f(m,n)=\left({\begin{array}{cccc}f_{1,1}&f_{2,1}&\cdots &f_{M,1}\\f_{1,2}&f_{2,2}&\cdots &f_{M,2}\\\cdots &\cdots &\cdots &\cdots \\f_{1,n}&f_{2,N}&\cdots &f_{M,N}\end{array}}\right),}


The EEMD decomposition of the 



m


{\displaystyle m}

th column of 



f
(
m
,
n
)


{\displaystyle f(m,n)}

 is




f
(
m
,
∼
)
=

∑

j
=
1


J



C

j


(
m
,
∼
)
=

∑

j
=
1


J



(





c

m
,
1
,
j







c

m
,
2
,
j






⋯





c

m
,
N
,
j






)

,


{\displaystyle f(m,\sim )=\sum _{j=1}^{J}C_{j}(m,\sim )=\sum _{j=1}^{J}\left({\begin{array}{c}c_{m,1,j}\\c_{m,2,j}\\\cdots \\c_{m,N,j}\\\end{array}}\right),}


after all the columns are decomposed we get 



j


{\displaystyle j}

 th matrix being





g

j


(
m
,
n
)
=

(





c

1
,
1
,
j





c

2
,
1
,
j




⋯



c

M
,
1
,
j







c

1
,
2
,
j





c

2
,
2
,
j




⋯



c

M
,
2
,
j






⋯


⋯


⋯


⋯





c

1
,
N
,
j





c

2
,
N
,
j




⋯



c

M
,
N
,
j






)

.


{\displaystyle g_{j}(m,n)=\left({\begin{array}{cccc}c_{1,1,j}&c_{2,1,j}&\cdots &c_{M,1,j}\\c_{1,2,j}&c_{2,2,j}&\cdots &c_{M,2,j}\\\cdots &\cdots &\cdots &\cdots \\c_{1,N,j}&c_{2,N,j}&\cdots &c_{M,N,j}\\\end{array}}\right).}


This is the 




j

t
h




{\displaystyle j^{th}}

 component of the original data 



f
(
m
,
n
)


{\displaystyle f(m,n)}







n

t
h




{\displaystyle n^{th}}

 row of 




g

j


(
m
,
n
)


{\displaystyle g_{j}(m,n)}

 decomposition using EEMD is





g

j


(
∼
,
n
)
=

∑

k
=
1


K



D

j
,
k


(
∼
,
n
)
=

∑

k
=
1


K



(





d

1
,
n
,
j
,
k





d

2
,
n
,
j
,
k




⋯



d

M
,
n
,
j
,
k






)

,


{\displaystyle g_{j}(\sim ,n)=\sum _{k=1}^{K}D_{j,k}(\sim ,n)=\sum _{k=1}^{K}\left({\begin{array}{cccc}d_{1,n,j,k}&d_{2,n,j,k}&\cdots &d_{M,n,j,k}\\\end{array}}\right),}


rearrange the component as





h

j
,
k


(
m
,
n
)
=

(





d

1
,
1
,
j
,
k





d

2
,
1
,
j
,
k




⋯



d

M
,
1
,
j
,
k







d

1
,
2
,
j
,
k





d

2
,
2
,
j
,
k




⋯



d

M
,
2
,
j
,
k






⋯


⋯


⋯


⋯





d

1
,
N
,
j
,
k





d

2
,
1
,
N
,
k




⋯



d

M
,
N
,
j
,
k






)

,


{\displaystyle h_{j,k}(m,n)=\left({\begin{array}{cccc}d_{1,1,j,k}&d_{2,1,j,k}&\cdots &d_{M,1,j,k}\\d_{1,2,j,k}&d_{2,2,j,k}&\cdots &d_{M,2,j,k}\\\cdots &\cdots &\cdots &\cdots \\d_{1,N,j,k}&d_{2,1,N,k}&\cdots &d_{M,N,j,k}\\\end{array}}\right),}


So 



f
(
m
,
n
)
=

∑

k
=
1


K



∑

j
=
1


J



h

j
,
k


(
m
,
n
)
.


{\displaystyle f(m,n)=\sum _{k=1}^{K}\sum _{j=1}^{J}h_{j,k}(m,n).}

 For a multi-dimension decomposition with an 



n


{\displaystyle n}

-dimensional function we can use the same method above.[4]
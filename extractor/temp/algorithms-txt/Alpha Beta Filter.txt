ABOUT
An alpha beta filter (also called alpha-beta filter, f-g filter or g-h filter [1]) is a simplified form of observer for estimation, data smoothing and control applications. It is closely related to Kalman filters and to linear state observers used in control theory. Its principal advantage is that it does not require a detailed system model.
FULL TEXT
An alpha beta filter (also called alpha-beta filter, f-g filter or g-h filter [1]) is a simplified form of observer for estimation, data smoothing and control applications. It is closely related to Kalman filters and to linear state observers used in control theory. Its principal advantage is that it does not require a detailed system model.


An alpha beta filter presumes that a system is adequately approximated by a model having two internal states, where the first state is obtained by integrating the value of the second state over time. Measured system output values correspond to observations of the first model state, plus disturbances. This very low order approximation is adequate for many simple systems, for example, mechanical systems where position is obtained as the time integral of velocity. Based on a mechanical system analogy, the two states can be called position x and velocity v. Assuming that velocity remains approximately constant over the small time interval ΔT between measurements, the position state is projected forward to predict its value at the next sampling time using equation 1.
Since velocity variable v is presumed constant, so its projected value at the next sampling time equals the current value.
If additional information is known about how a driving function will change the v state during each time interval, equation 2 can be modified to include it.
The output measurement is expected to deviate from the prediction because of noise and dynamic effects not included in the simplified dynamic model. This prediction error r is also called the residual or innovation, based on statistical or Kalman filtering interpretations
Suppose that residual r is positive. This could result because the previous x estimate was low, the previous v was low, or some combination of the two. The alpha beta filter takes selected alpha and beta constants (from which the filter gets its name), uses alpha times the deviation r to correct the position estimate, and uses beta times the deviation r to correct the velocity estimate. An extra ΔT factor conventionally serves to normalize magnitudes of the multipliers.
The corrections can be considered small steps along an estimate of the gradient direction. As these adjustments accumulate, error in the state estimates is reduced. For convergence and stability, the values of the alpha and beta multipliers should be positive and small:[2]
Noise is suppressed only if 



0
<
β
<
1


{\displaystyle 0<\beta <1}

, otherwise the noise is amplified.
Values of alpha and beta typically are adjusted experimentally. In general, larger alpha and beta gains tend to produce faster response for tracking transient changes, while smaller alpha and beta gains reduce the level of noise in the state estimates. If a good balance between accurate tracking and noise reduction is found, and the algorithm is effective, filtered estimates are more accurate than the direct measurements. This motivates calling the alpha-beta process a filter.
Initialize.
Update. Repeat for each time step ΔT:
Alpha Beta filter can be implemented in C[3] as follows:
The following images depict the outcome of the above program in graphical format. In each image, the blue trace is the input signal; the output is red in the first image, yellow in the second, and green in the third. For the first two images, the output signal is visibly smoother than the input signal and lacks extreme spikes seen in the input. Also, the output moves in an estimate of gradient direction of input.
The higher the alpha parameter, the higher is the effect of input x and the less damping is seen. A low value of beta is effective in controlling sudden surges in velocity. Also, as alpha increases beyond unity, the output becomes rougher and more uneven than the input.[3]
More general state observers, such as the Luenberger observer for linear control systems, use a rigorous system model. Linear observers use a gain matrix to determine state estimate corrections from multiple deviations between measured variables and predicted outputs that are linear combinations of state variables. In the case of alpha beta filters, this gain matrix reduces to two terms. There is no general theory for determining the best observer gain terms, and typically gains are adjusted experimentally for both.
The linear Luenberger observer equations reduce to the alpha beta filter by applying the following specializations and simplifications.
A Kalman filter estimates the values of state variables and corrects them in a manner similar to an alpha beta filter or a state observer. However, a Kalman filter does this in a much more formal and rigorous manner. The principal differences between Kalman filters and alpha beta filters are the following.
A Kalman filter designed to track a moving object using a constant-velocity target dynamics (process) model (i.e., constant velocity between measurement updates) with process noise covariance and measurement covariance held constant will converge to the same structure as an alpha-beta filter. However, a Kalman filter's gain is computed recursively at each time step using the assumed process and measurement error statistics, whereas the alpha-beta's gain is computed ad hoc.
The alpha-beta filter becomes a steady-state Kalman filter if filter parameters are calculated from the sampling interval 



T


{\displaystyle T}

, the process variance 




σ

w


2




{\displaystyle \sigma _{w}^{2}}

 and the noise variance 




σ

v


2




{\displaystyle \sigma _{v}^{2}}

 like this
This choice of filter parameters minimizes the mean square error.
When the second state variable varies quickly, i.e. when the acceleration of the first state is large, it can be useful to extend states the alpha beta filter one level. In this extension, the second state variable v is obtained from integrating a third acceleration state, analogous to the way that the first state is obtained by integrating the second. An equation for the a state is added to the equation system. A third multiplier, gamma, is selected for applying corrections to the new a state estimates. This yields the alpha beta gamma update equations.[1]
Similar extensions to additional higher orders are possible, but most systems of higher order tend to have significant interactions among the multiple states,[citation needed] so approximating the system dynamics as a simple integrator chain is less likely to prove useful.
Calculating optimal parameters for the alpha-beta-gamma filter is a bit more involved than for the alpha-beta filter:[5]
A simpler member of this family of filters is the alpha filter which observes only one state:
with the optimal parameter calculated like this:[4]
This calculation is identical for a moving average and a low-pass filter.
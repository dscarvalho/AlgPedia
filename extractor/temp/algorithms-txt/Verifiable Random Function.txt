ABOUT
In cryptography, the concept of a verifiable random function was introduced by Micali, Rabin, and Vadhan.[1] It is a pseudo-random function that provides publicly verifiable proofs of its outputs' correctness. Given an input value x, the owner of the secret key SK can compute the function value y = FSK(x) and the proof pSK(x). Using the proof and the public key 



P
K
=

g

S
K




{\displaystyle PK=g^{SK}}

, everyone can check that the value y = FSK(x) was indeed computed correctly, yet this information cannot be used to find the secret key.
FULL TEXT
In cryptography, the concept of a verifiable random function was introduced by Micali, Rabin, and Vadhan.[1] It is a pseudo-random function that provides publicly verifiable proofs of its outputs' correctness. Given an input value x, the owner of the secret key SK can compute the function value y = FSK(x) and the proof pSK(x). Using the proof and the public key 



P
K
=

g

S
K




{\displaystyle PK=g^{SK}}

, everyone can check that the value y = FSK(x) was indeed computed correctly, yet this information cannot be used to find the secret key.
The original construction was rather inefficient. Later, an efficient and practical verifiable random function was proposed by Yevgeniy Dodis and Aleksandr Yampolskiy.[2] In their construction,
where e(·,·) is a bilinear map. To verify whether 




F

S
K


(
x
)


{\displaystyle F_{SK}(x)}

 was computed correctly or not, one can check if 



e
(

g

x


P
K
,

p

S
K


(
x
)
)
=
e
(
g
,
g
)


{\displaystyle e(g^{x}PK,p_{SK}(x))=e(g,g)}

.
The proof of security relies on a new decisional bilinear Diffie-Hellman inversion assumption, which asks given 



(
g
,

g

x


,
…
,

g

(

x

q


)


,
R
)


{\displaystyle (g,g^{x},\ldots ,g^{(x^{q})},R)}

 as input to distinguish 



R
=
e
(
g
,
g

)

1

/

x




{\displaystyle R=e(g,g)^{1/x}}

 from random.

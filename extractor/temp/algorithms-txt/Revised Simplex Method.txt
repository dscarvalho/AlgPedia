ABOUT
In mathematical optimization, the revised simplex method is a variant of George Dantzig's simplex method for linear programming.
FULL TEXT
In mathematical optimization, the revised simplex method is a variant of George Dantzig's simplex method for linear programming.
The revised simplex method is mathematically equivalent to the standard simplex method but differs in implementation. Instead of maintaining a tableau which explicitly represents the constraints adjusted to a set of basic variables, it maintains a representation of a basis of the matrix representing the constraints. The matrix-oriented approach allows for greater computational efficiency by enabling sparse matrix operations.[1]


For the rest of the discussion, it is assumed that a linear programming problem has been converted into the following standard form:
where A ∈ Rm×n. Without loss of generality, it is assumed that the constraint matrix A has full row rank and that the problem is feasible, i.e., there is at least one x ≥ 0 such that Ax = b. If A is rank-deficient, either there are redundant constraints, or the problem is infeasible. Both situations can be handled by a presolve step.
For linear programming, the Karush–Kuhn–Tucker conditions are both necessary and sufficient for optimality. The KKT conditions of a linear programming problem in the standard form is
where λ and s are the Lagrange multipliers associated with the constraints Ax = b and x ≥ 0, respectively.[2] The last condition, which is equivalent to sixi = 0 for all 1 < i < n, is called the complementary slackness condition.
By what is sometimes known as the fundamental theorem of linear programming, a vertex x of the feasible polytope can be identified by being a basis B of A chosen from the latter's columns.[a] Since A has full rank, B is nonsingular. Without loss of generality, assume that A = [B N]. Then x is given by
where xB ≥ 0. Partition c and s accordingly into
To satisfy the complementary slackness condition, let sB = 0. It follows that
which implies that
If sN ≥ 0 at this point, the KKT conditions are satisfied, and thus x is optimal.
If the KKT conditions are violated, a pivot operation consisting of introducing a column of N into the basis at the expense of an existing column in B is performed. In the absence of degeneracy, a pivot operation always results in a strict decrease in cTx. Therefore, if the problem is bounded, the revised simplex method must terminate at an optimal vertex after repeated pivot operations because there are only a finite number of vertices.[4]
Select an index m < q ≤ n such that sq < 0 as the entering index. The corresponding column of A, Aq, will be moved into the basis, and xq will be allowed to increase from zero. It can be shown that
i.e., every unit increase in xq will results in a decrease by −sq in cTx.[5] Since
xB must be correspondingly decreased by ΔxB = B−1Aqxq subject to xB − ΔxB ≥ 0. Let d = B−1Aq. If d ≤ 0, no matter how much xq is increased, xB − ΔxB will stay nonnegative. Hence, cTx can be arbitrarily decreased, and thus the problem is unbounded. Otherwise, select an index p = argmin1≤i≤m {xi/di | di > 0} as the leaving index. This choice effectively increases xq from zero until xp is reduced to zero while maintaining feasibility. The pivot operation concludes with replacing Ap with Aq in the basis.
Consider a linear program where
Let
initially, which corresponds to a feasible vertex x = [0 0 0 10 15]T. At this moment,
Choose q = 3 as the entering index. Then d = [1 3]T, which means a unit increase in x3 will results in x4 and x5 being decreased by 1 and 3, respectively. Therefore, x3 is increased to 5, at which point x5 is reduced to zero, and p = 5 becomes the leaving index.
After the pivot operation,
Correspondingly,
A positive sN indicates that x is now optimal.
Because the revised simplex method is mathematically equivalent to the simplex method, it also suffers from degeneracy, where a pivot operation does not result in a decrease in cTx, and a chain of pivot operations causes the basis to cycle. A perturbation or lexicographic strategy can be used to prevent cycling and guarantee termination.[6]
Two types of linear systems involving B are present in the revised simplex method:
Instead of refactorizing B, usually an LU factorization is directly updated after each pivot operation, for which purpose there exist several strategies such as the Forrest−Tomlin and Bartels−Golub methods. However, the amount of data representing the updates as well as numerical errors builds up over time and makes periodic refactorization necessary.[1][7]
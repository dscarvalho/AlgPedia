ABOUT
In computational number theory and computational algebra, Pollard's kangaroo algorithm (also Pollard's lambda algorithm, see Naming below) is an algorithm for solving the discrete logarithm problem. The algorithm was introduced in 1978 by the number theorist J. M. Pollard, in the same paper [1] as his better-known ρ algorithm for solving the same problem. Although Pollard described the application of his algorithm to the discrete logarithm problem in the multiplicative group of units modulo a prime p, it is in fact a generic discrete logarithm algorithm—it will work in any finite cyclic group.
FULL TEXT
In computational number theory and computational algebra, Pollard's kangaroo algorithm (also Pollard's lambda algorithm, see Naming below) is an algorithm for solving the discrete logarithm problem. The algorithm was introduced in 1978 by the number theorist J. M. Pollard, in the same paper [1] as his better-known ρ algorithm for solving the same problem. Although Pollard described the application of his algorithm to the discrete logarithm problem in the multiplicative group of units modulo a prime p, it is in fact a generic discrete logarithm algorithm—it will work in any finite cyclic group.


Suppose 



G


{\displaystyle G}

 is a finite cyclic group of order 



n


{\displaystyle n}

 which is generated by the element 



α


{\displaystyle \alpha }

, and we seek to find the discrete logarithm 



x


{\displaystyle x}

 of the element 



β


{\displaystyle \beta }

 to the base 



α


{\displaystyle \alpha }

. In other words, we seek 



x
∈

Z

n




{\displaystyle x\in Z_{n}}

 such that 




α

x


=
β


{\displaystyle \alpha ^{x}=\beta }

. The lambda algorithm allows us to search for 



x


{\displaystyle x}

 in some subset 



{
a
,
…
,
b
}
⊂

Z

n




{\displaystyle \{a,\ldots ,b\}\subset Z_{n}}

. We may search the entire range of possible logarithms by setting 



a
=
0


{\displaystyle a=0}

 and 



b
=
n
−
1


{\displaystyle b=n-1}

, although in this case Pollard's rho algorithm is more efficient. We proceed as follows:
1. Choose a set 



S


{\displaystyle S}

 of integers and define a pseudorandom map 



f
:
G
→
S


{\displaystyle f:G\rightarrow S}

.
2. Choose an integer 



N


{\displaystyle N}

 and compute a sequence of group elements 



{

x

0


,

x

1


,
…
,

x

N


}


{\displaystyle \{x_{0},x_{1},\ldots ,x_{N}\}}

 according to:
3. Compute
Observe that:
4. Begin computing a second sequence of group elements 



{

y

0


,

y

1


,
…
}


{\displaystyle \{y_{0},y_{1},\ldots \}}

 according to:
and a corresponding sequence of integers 



{

d

0


,

d

1


,
…
}


{\displaystyle \{d_{0},d_{1},\ldots \}}

 according to:
Observe that:
5. Stop computing terms of 



{

y

i


}


{\displaystyle \{y_{i}\}}

 and 



{

d

i


}


{\displaystyle \{d_{i}\}}

 when either of the following conditions are met:
Pollard gives the time complexity of the algorithm as 





O
(


b
−
a


)




{\displaystyle {\scriptstyle O({\sqrt {b-a}})}}

, based on a probabilistic argument which follows from the assumption that f acts pseudorandomly. Note that when the size of the set {a, …, b} to be searched is measured in bits, as is normal in complexity theory, the set has size log(b − a), and so the algorithm's complexity is 





O
(


b
−
a


)
=
O
(

2



1
2


log
⁡
(
b
−
a
)


)




{\displaystyle {\scriptstyle O({\sqrt {b-a}})=O(2^{{\frac {1}{2}}\log(b-a)})}}

, which is exponential in the problem size. For this reason, Pollard's lambda algorithm is considered an exponential time algorithm. For an example of a subexponential time discrete logarithm algorithm, see the index calculus algorithm.
The algorithm is well known by two names.
The first is "Pollard's kangaroo algorithm". This name is a reference to an analogy used in the paper presenting the algorithm, where the algorithm is explained in terms of using a tame kangaroo to trap a wild kangaroo. Pollard has explained[2] that this analogy was inspired by a "fascinating" article published in the same issue of Scientific American as an exposition of the RSA public key cryptosystem. The article[3] described an experiment in which a kangaroo's "energetic cost of locomotion, measured in terms of oxygen consumption at various speeds, was determined by placing kangaroos on a treadmill".
The second is "Pollard's lambda algorithm". Much like the name of another of Pollard's discrete logarithm algorithms, Pollard's rho algorithm, this name refers to the similarity between a visualisation of the algorithm and the Greek letter lambda (



λ


{\displaystyle \lambda }

). The shorter stroke of the letter lambda corresponds to the sequence 



{

x

i


}


{\displaystyle \{x_{i}\}}

, since it starts from the position b to the right of x. Accordingly, the longer stroke corresponds to the sequence 



{

y

i


}


{\displaystyle \{y_{i}\}}

, which "collides with" the first sequence (just like the strokes of a lambda intersect) and then follows it subsequently.
Pollard has expressed a preference for the name "kangaroo algorithm",[4] as this avoids confusion with some parallel versions of his rho algorithm, which have also been called "lambda algorithms".
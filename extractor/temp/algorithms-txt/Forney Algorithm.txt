ABOUT
In coding theory, the Forney algorithm (or Forney's algorithm) calculates the error values at known error locations. It is used as one of the steps in decoding BCH codes and Reed–Solomon codes (a subclass of BCH codes). George David Forney, Jr. developed the algorithm.[1]
FULL TEXT
In coding theory, the Forney algorithm (or Forney's algorithm) calculates the error values at known error locations. It is used as one of the steps in decoding BCH codes and Reed–Solomon codes (a subclass of BCH codes). George David Forney, Jr. developed the algorithm.[1]


Code words look like polynomials. By design, the generator polynomial has consecutive roots αc, αc+1, ..., αc+d−2.
Syndromes
Error location polynomial[2]
The zeros of Λ(x) are X1−1, ..., Xν−1. The zeros are the reciprocals of the error locations 




X

j


=

α


i

j






{\displaystyle X_{j}=\alpha ^{i_{j}}}

.
Once the error locations are known, the next step is to determine the error values at those locations. The error values are then used to correct the received values at those locations to recover the original codeword.
In the more general case, the error weights ej can be determined by solving the linear system
However, there is a more efficient method known as the Forney algorithm, which is based on Lagrange interpolation. First calculate the error evaluator polynomial[3]
Where S(x) is the partial syndrome polynomial:[4]
Then evaluate the error values:[3]
The value c is often called the "first consecutive root" or "fcr". Some codes select c = 1, so the expression simplifies to:
Λ'(x) is the formal derivative of the error locator polynomial Λ(x):[3]
In the above expression, note that i is an integer, and λi would be an element of the finite field. The operator · represents ordinary multiplication (repeated addition in the finite field) and not the finite field's multiplication operator.

Lagrange interpolation
Gill (n.d., pp. 52–54) gives a derivation of the Forney algorithm.
Define the erasure locator polynomial
Where the erasure locations are given by ji. Apply the procedure described above, substituting Γ for Λ.
If both errors and erasures are present, use the error-and-erasure locator polynomial
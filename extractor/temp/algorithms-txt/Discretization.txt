ABOUT
In mathematics, discretization concerns the process of transferring continuous functions, models, and equations into discrete counterparts. This process is usually carried out as a first step toward making them suitable for numerical evaluation and implementation on digital computers. Processing on a digital computer requires another process called quantization. Dichotomization is the special case of discretization in which the number of discrete classes is 2, which can approximate a continuous variable as a binary variable (creating a dichotomy for modeling purposes, as in binary classification).
FULL TEXT
In mathematics, discretization concerns the process of transferring continuous functions, models, and equations into discrete counterparts. This process is usually carried out as a first step toward making them suitable for numerical evaluation and implementation on digital computers. Processing on a digital computer requires another process called quantization. Dichotomization is the special case of discretization in which the number of discrete classes is 2, which can approximate a continuous variable as a binary variable (creating a dichotomy for modeling purposes, as in binary classification).
Discretization is also related to discrete mathematics, and is an important component of granular computing. In this context, discretization may also refer to modification of variable or category granularity, as when multiple discrete variables are aggregated or multiple discrete categories fused.
Whenever continuous data is discretized, there is always some amount of discretization error. The goal is to reduce the amount to a level considered negligible for the modeling purposes at hand.


Discretization is also concerned with the transformation of continuous differential equations into discrete difference equations, suitable for numerical computing.
The following continuous-time state space model
where v and w are continuous zero-mean white noise sources with covariances
can be discretized, assuming zero-order hold for the input u and continuous integration for the noise v, to
with covariances
where
and 



T


{\displaystyle T}

 is the sample time, although 





A


T




{\displaystyle \mathbf {A} ^{T}}

 is the transposed matrix of 




A



{\displaystyle \mathbf {A} }

.
A clever trick to compute Ad and Bd in one step is by utilizing the following property:[1]:p. 215
and then having
Numerical evaluation of 





Q


d




{\displaystyle \mathbf {Q} _{d}}

 is a bit trickier due to the matrix exponential integral. It can, however, be computed by first constructing a matrix, and computing the exponential of it (Van Loan, 1978):
The discretized process noise is then evaluated by multiplying the transpose of the lower-right partition of G with the upper-right partition of G:
Starting with the continuous model
we know that the matrix exponential is
and by premultiplying the model we get
which we recognize as
and by integrating..
which is an analytical solution to the continuous model.
Now we want to discretise the above expression. We assume that u is constant during each timestep.
We recognize the bracketed expression as 




x

[
k
]


{\displaystyle \mathbf {x} [k]}

, and the second term can be simplified by substituting 



v
=
k
T
+
T
−
τ


{\displaystyle v=kT+T-\tau }

. We also assume that 




u



{\displaystyle \mathbf {u} }

 is constant during the integral, which in turn yields
which is an exact solution to the discretization problem.
Exact discretization may sometimes be intractable due to the heavy matrix exponential and integral operations involved. It is much easier to calculate an approximate discrete model, based on that for small timesteps 




e


A

T


≈

I

+

A

T


{\displaystyle e^{\mathbf {A} T}\approx \mathbf {I} +\mathbf {A} T}

. The approximate solution then becomes:
Other possible approximations are 




e


A

T


≈


(

I

−

A

T
)


−
1




{\displaystyle e^{\mathbf {A} T}\approx \left(\mathbf {I} -\mathbf {A} T\right)^{-1}}

 and 




e


A

T


≈

(

I

+


1
2



A

T
)



(

I

−


1
2



A

T
)


−
1




{\displaystyle e^{\mathbf {A} T}\approx \left(\mathbf {I} +{\frac {1}{2}}\mathbf {A} T\right)\left(\mathbf {I} -{\frac {1}{2}}\mathbf {A} T\right)^{-1}}

. Each of them have different stability properties. The last one is known as the bilinear transform, or Tustin transform, and preserves the (in)stability of the continuous-time system.
In statistics and machine learning, discretization refers to the process of converting continuous features or variables to discretized or nominal features. This can be useful when creating probability mass functions.